import pytestfrom beopWeb.mod_admin import reportControllersfrom flask import current_appfrom beopWeb.mod_oss.ossapi import *from beopWeb.mod_common.Utils import *import osimport jsonglobal folder_htmlglobal folder_pdf@pytest.mark.p0@pytest.mark.usefixtures("removeReport")@pytest.mark.parametrize(('project_code','report_folder'), [    ('shhuawei','KPIReport'),])def test_get_report_list(project_code,report_folder):    folder = os.getcwd() + '/beopWeb/static/projectReports/reports/{0}/{1}/'.format(project_code,report_folder)    os.makedirs(folder)    html='test_html.html'    global folder_html    folder_html = folder + html    f = open(folder_html, 'w')    f.close()    pdf='test_pdf.pdf'    global folder_pdf    folder_pdf=folder + pdf    f = open(folder_pdf, 'w')    f.close()    rt = reportControllers.get_report_list(project_code, report_folder)    rt = json.loads(bytes.decode(rt.data))    assert rt.get('success'),'get report list fail'    pdfReportMap=rt.get('data').get("pdfReportMap")    htmlReport=rt.get('data').get("htmlReport")    assert htmlReport[0] in html,'get report list for htmlreport fail ,expected={0} does not contain  actual={1}'.format(html,htmlReport[0])    assert [key for key in pdfReportMap.keys()][0] in pdf,'get report list for pdfReport fail ,expected={0} does not contain actual={1}'.format(pdf,pdfReportMap.keys()[0])    assert pdfReportMap.get(pdf.split('.')[0]) in folder_pdf,'get report list for pdfReportPath fail,actual={0} is not in expected ={1}'.format(pdfReportMap.get(pdf),folder_pdf)@pytest.fixture(scope='function')def removeReport(request):    def fin():        global folder_html        global folder_pdf        os.remove(folder_html)        os.remove(folder_pdf)        folder1 = os.getcwd() + '/beopWeb/static/projectReports/reports/shhuawei/KPIReport'        os.rmdir(folder1)        folder2 = os.getcwd() + '/beopWeb/static/projectReports/reports/shhuawei'        os.rmdir(folder2)    request.addfinalizer(fin)