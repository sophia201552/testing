import React from 'react';

import { Tabs, TabPane } from '../../../components/Tabs';
import ElementsTabPane from '../ElementsTabPane';
import TemplateTabPane from '../TemplateTabPane';
import FilesTabPane from '../FilesTabPane';
import ConfigTabPane from '../ConfigTabPane';
import DataSourcePane from '../DataSourcePane';

import css from './StrategyTree.css';

//props
//width         宽度
//type          home||painter
//strategyId    策略id
class StrategyTree extends React.PureComponent {
  constructor(props) {
    super(props);
    this.state = {};
  }
  render(props) {
    const {
      width = '100%',
      strategyId,
      changeTabId,
      selecteddTabId,
      i18n,
      strategyPanelFn,
      selectedItems,
      updateSelectedItems = () => {}
    } = this.props;
    return (
      <div id="strategyTree" style={{ width, height: '100%' }}>
        <Tabs
          align="vertical"
          onChange={changeTabId}
          selecteddTabId={selecteddTabId}
        >
          <TabPane tab={i18n.CATALOG} keyId="catalog" iconClass="ViewListTree">
            <FilesTabPane
              strategyId={strategyId}
              strategyPanelFn={strategyPanelFn}
            />
          </TabPane>
          <TabPane
            tab={strategyId ? i18n.ELEMENT : i18n.ATTRIBUTE}
            keyId="props"
            iconClass="SearchAndApps"
          >
            {strategyId ? (
              <ElementsTabPane />
            ) : (
              <ConfigTabPane
                selectedItems={selectedItems}
                updateSelectedItems={updateSelectedItems}
              />
            )}
          </TabPane>
          <TabPane
            tab={strategyId ? i18n.DATA : i18n.TEMPLATE}
            keyId="modals"
            iconClass="AppIconDefault"
          >
            {strategyId ? <DataSourcePane /> : <TemplateTabPane />}
          </TabPane>
          {strategyId ? (
            <TabPane
              tab={i18n.ATTRIBUTE}
              keyId="config"
              iconClass="DeveloperTools"
            >
              <ConfigTabPane
                selectedItems={selectedItems}
                updateSelectedItems={updateSelectedItems}
              />
            </TabPane>
          ) : null}
        </Tabs>
      </div>
    );
  }
}

export default StrategyTree;
