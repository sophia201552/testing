<!DOCTYPE html>
<html>
<head lang="en">
    <meta charset="UTF-8">
    <title>Register - BeOP</title>
    <link href="/static/scripts/lib/bootstrap/css/bootstrap.min.css" rel="stylesheet"/>
    <link href="/static/fonts/beopIconFont/iconfont.css" rel="stylesheet"/>
    <link href="/static/scripts/lib/beopNotification/infoBox.css" rel="stylesheet"/>
    <style type="text/css">
        html, body, #register {
            background-color: #e5e5e5;
            overflow: hidden;
        }

        .text-success {
            color: #fdcb43;
        }

        .text-fail {
            color: #e1573a;
        }

        .alert-section {
            margin-top: 20px;
        }

        body {
            overflow: hidden;
            font-family: "Microsoft YaHei", "微软雅黑", "arial", "sans-serif";
        }

        #clouds {
            position: absolute;
        }

        #top-msg {
            position: relative;
            color: white;
            padding-top: 10%;
        }

        #register-form {
            margin-top: 1%;
        }

        .register-section h2 {
            border-bottom: 3px solid;
            padding-bottom: 10px;
        }

        #register .has-success .form-control {
            border-color: #47cac3;
        }

        #register .has-success .form-control-feedback {
            color: #47cac3;
        }

        #register .has-success .form-control:focus {
            box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075), 0 0 6px #47cac3;
        }

        #register .has-success .input-group-addon {
            border-color: #47cac3;
            color: #555;
            background: #eee;
        }

        #register .has-error .form-control {
            border-color: #c47272;
        }

        #register .has-error .form-control-feedback {
            color: #c47272;
        }

        #register .has-error .form-control:focus {
            box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075), 0 0 6px #c47272;
        }

        #register .has-error .input-group-addon {
            border-color: #c47272;
            color: #555;
            background: #eee;
        }

        #register .alert-success {
            color: #fff;
            background-color: #47cac3;
            border-color: #47cac3;
        }

        #register .alert-danger {
            color: #fff;
            background-color: #c47272;
            border-color: #c47272;
        }

        #register .close {
            opacity: 1;
        }

        #register-form .row {
            position: relative;
        }

        #top-msg {
            color: grey;
        }

        .row label {
            font-size: 18px;
        }

        .row {
            margin-top: 10px;
        }

        .oh {
            overflow: hidden;
        }

        .fl {
            float: left;
        }

        .fr {
            float: right;
        }

        .p0 {
            padding: 0;
        }

        .resetPdWelcome {
            font-size: 14px;
        }

        .form-group-lg .form-control {
            height: 40px;
            font-size: 14px;
        }

        #submitBtn {
            height: 40px;
            font-size: 14px;
        }

        #requireInfo {
            color: #FCAB2B;
        }

        #messageInfo {
            color: #913944;
        }

        #password_prompt {
            display: none;
        }

        /*输入框验证样式*/
        #password_prompt {
            width: 60%;
            padding: 10px 10px 0 15px;
            box-sizing: border-box;
            border: 1px solid #ffffff;
            margin: 100px 25% 0 15%;
            position: absolute;
            background-color: #ffffff;
            border-radius: 8px;
            opacity: 0;
            display: none;
        }

        #password_prompt ul {
            margin: 0;
            padding: 0;
        }

        .password_prompt_have {
            margin-bottom: 20px;
            font-size: 16px;
        }

        .password_prompt_have .password_prompt_list > li {
            position: relative;
            line-height: 1.5;
            list-style: none;
            font-size: 14px;
            list-style-position: inside;
            color: #b7b3b7;
        }

        .password_prompt_have .password_prompt_list > li .rule_description {
            padding-left: 25px;
            width: auto;
            display: block;
        }

        .prompt_icon {
            width: 12px;
            height: 12px;
            position: absolute;
            display: inline-block;
            background-size: contain;
        }

        .point_icon {
            width: 0;
            height: 0;
            border-style: solid;
            border-width: 12px;
            border-color: transparent;
            border-top-width: 0;
            border-bottom: 12px solid #ffffff;
            position: absolute;
            display: inline-block;
            top: -12px;
            left: 50%;
            transform: translateX(-50%);
        }

        @media (max-width: 1000px) {
            html, body, #register {
                font-size: 12px;
                /*background: yellow;*/
            }

            .resetPdWelcome {
                font-size: 1.3em;
            }

            .form-group-lg .form-control {
                font-size: 3em;
            }

            #register .col-xs-10 {
                width: 80%;
            }

            #register .col-xs-offset-1 {
                margin-left: 10%;
            }

            .input-group {
                height: 1.2em;
                margin-bottom: 1em;
            }

            .input-group-addon {
                font-size: 2.5em;
            }

            .input-group input[type='text'], .input-group input[type='password'] {
                height: 3em;
            }

            #requireInfo {
                font-size: 3em;
                padding: 0.1em 0 0.5em 0;
            }

            #submitBtn {
                height: 3em;
                font-size: 3em;
            }

            .alert {
                padding: 0 3em;
            }

            #register .close {
                font-size: 8em;
            }

            .alert-msg {
                height: 3em;
                line-height: 3em;
                font-size: 3em;
            }

            .alert-section {
                margin-top: 5em;
            }

        }

    </style>
</head>
<body>
<input type="hidden" value="{{ user.email }}" id="name"/>

<div id="clouds"></div>
<div class="container" id="register">
    <div class="row" id="top-msg">
        <div class="col-sm-offset-3 col-sm-5 col-xs-offset-1 col-xs-10 register-section form-horizontal p0">
            <h2 class="oh">
                <span class="resetPdWelcome fr"></span>
            </h2>
        </div>

    </div>
    <div class="row" id="register-form">
        <form autocomplete="off">
            <div class="col-sm-offset-3 col-sm-5 col-xs-offset-1 col-xs-10 register-section form-horizontal">
                <div class="row">
                    <div class="form-group-lg input-group col-sm-12">
                        <span class="input-group-addon"><span class="glyphicon glyphicon-envelope"></span></span>
                        <input type="text" class="form-control" id="inputEmail" placeholder="{{ user.email }}"
                               disabled>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group-lg input-group col-sm-12">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                        <input type="text" class="form-control" id="inputName" placeholder="{{ user.fullname }}"
                               maxlength="20">
                    </div>
                </div>
                <div class="row">
                    <div class="form-group-lg input-group col-sm-12">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-lock"></i></span>
                        <input style="display:none" type="password" name="password"/>
                        <input type="password" class="form-control" id="inputPassword1" maxlength="20"
                               autocomplete="off" name="password"
                               i18n="placeholder=admin.resetPassword.PWD_RULE_AT_LEAST_8_CHARS">

                        <!--密码提示框-->
                        <div id="password_prompt">
                            <div class="password_prompt_have">
                                <p class="password_prompt_title">
                                    <span i18n="admin.resetPassword.PASSWORD_PROMPT_TITLE"></span>
                                </p>
                                <ul class="password_prompt_list">
                                    <li class="pwd-rule-at-least-8-chars">
                                        <span class="prompt_icon icon iconfont text-fail icon-cuo"></span>
                                        <span class="rule_description"
                                              i18n="admin.resetPassword.PWD_RULE_AT_LEAST_8_CHARS"></span>
                                    </li>
                                    <li class="pwd-rule-at-least-one-letter-and-non">
                                        <span class="prompt_icon icon iconfont text-fail icon-cuo"></span>
                                        <span class="rule_description"
                                              i18n="admin.resetPassword.PWD_RULE_AT_LEAST_ONE_LETTER_AND_NON"></span>
                                    </li>
                                </ul>
                            </div>
                            <div class="point_icon"></div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group-lg input-group col-sm-12">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-lock"></i></span>
                        <input type="password" class="form-control" id="inputPassword2" maxlength="20"
                               i18n="placeholder=admin.resetPassword.PWD_RULE_AT_LEAST_8_CHARS">
                    </div>
                </div>
                <div class="row" style="margin-top: 25px;">
                    <button type="button" class="btn btn-lg btn-primary pull-right col-sm-12" id="submitBtn"
                            i18n="data-loading-text=admin.register.ENTER_USER_INFORMATION;data-complete-text=admin.register.COMPLETE_REGISTRATION;admin.register.JOIN_NOW">
                    </button>
                </div>
                <div class="row">
                    <div id="messageInfo"></div>
                </div>
                <div class="alert-section">
                </div>
            </div>
        </form>
    </div>
</div>

<script src="/static/scripts/lib/jquery-2.1.4.min.js"></script>
<script src="/static/scripts/lib/bootstrap/js/bootstrap.min.js"></script>
<script src="/static/scripts/core/common.js"></script>
<script src="/static/scripts/core/webAPI.js"></script>
<script src="/static/scripts/i18n/i18n.js"></script>
<script src="/static/scripts/lib/beopNotification/infoBox.js"></script>
<script>
    var pageCheck, I18n = undefined, $messageInfo = $("#messageInfo"), configMap, ruleValidNum, changeRuleStatus,
            addValidStatus, removeValidStatus;
    var $pwdPromptList = $(".password_prompt_list");
    var lang = localStorage["language"] || window.navigator.userLanguage || window.navigator.language;
    try {
        if (!lang) {
            lang = 'en';
        } else if (lang == 'zh-CN') {
            lang = 'zh';
        } else if (lang == 'en-US') {
            lang = 'en';
        }

    } catch (e) {

    }

    //引入I18n
    window.addEventListener('load', function () {
        InitI18nResource && InitI18nResource().always(function (rs) {
            I18n = new Internationalization(lang, rs);
            I18n.fillArea($('body'));

            configMap = {
                validStatus: {
                    type: {
                        success: 'success',
                        warning: 'warning',
                        error: 'error'
                    },
                    icon: {
                        success: 'glyphicon-ok',
                        warning: 'glyphicon-warning-sign',
                        error: 'glyphicon-remove'
                    },
                    class: {
                        success: 'has-success',
                        warning: 'has-warning',
                        error: 'has-error'
                    },
                    msg: {
                        welcome:I18n.resource.admin.register.REGISTER_WELCOME.replace('<%platform%>','{{ platform }}'),
                        invalidName: I18n.resource.admin.register.ACCOUNT_VALIDATE,
                        pwdNotMatch: I18n.resource.admin.register.PASSWORD_IS_WRONG,
                        invalidPwd: I18n.resource.admin.register.PASSWORD_CONFIRM_INFO,
                        invalidRePwd: I18n.resource.admin.register.PASSWORD_CONFIRM_INFO,
                        registerSuccess: I18n.resource.admin.register.REGISTER_SUCCESSFUL_GOTO.replace('<%platform%>','{{ platform }}'),
                        registerFailed: I18n.resource.admin.register.REGISTER_FAILED
                    }
                }
            };

            document.querySelector('.resetPdWelcome').innerHTML = configMap.validStatus.msg.welcome
        });
    }, false);

    // 前端输入框name页面校验
    pageCheck = function () {
        var name = $('#inputName').val().trim();

        if (name != '') {
            if (!(new RegExp('^[\u4e00-\u9fa5]{2,10}|[a-zA-Z0-9\.\-]{5,10}$', 'g').test(name))) {
                $messageInfo.text(configMap.validStatus.msg.invalidName);
                return false;
            }
        }

        return true;
    };

    //改变小图标样式,即时返回校验结果;
    var rule_failed_icon = 'text-fail icon-cuo', rule_success_icon = 'text-success icon-xuanze';
    changeRuleStatus = function (ruleClass, isValid) {
        if (isValid) {
            $pwdPromptList.find("." + ruleClass).find('.prompt_icon').removeClass(rule_failed_icon).addClass(rule_success_icon);
            return 1;
        } else {
            $pwdPromptList.find("." + ruleClass).find('.prompt_icon').removeClass(rule_success_icon).addClass(rule_failed_icon);
            return 0;
        }
    };

    var $inputPassword1 = $('#inputPassword1'),
            $inputPassword2 = $('#inputPassword2'),
            $inputName = $('#inputName'),
            $passwordPrompt = $('#password_prompt');

    var isPwdSame = false;

    removeValidStatus = function ($parent) {
        if (!$parent) {
            return false;
        }
        $parent.removeClass(function (index, css) {
            return (css.match(/(^|\s)has-\S+/g) || []).join(' ');
        }).find('.form-control-feedback').remove();
    };

    addValidStatus = function ($parent, validStatus) {
        if (!$parent) {
            return false;
        }
        removeValidStatus($parent);
        var $feedback = $('<span class="glyphicon form-control-feedback" aria-hidden="true"></span>').addClass(configMap.validStatus.icon[validStatus]);
        $parent.addClass('has-feedback has-validated').addClass(configMap.validStatus.class[validStatus])
                .find('.form-control-feedback').remove();

        $parent.find('input').after($feedback);
    };

    var checkPwdSame = function () {
        if ($inputPassword2.val().trim() && $inputPassword1.val().trim() === $inputPassword2.val().trim()) {
            addValidStatus($inputPassword2.closest('.input-group'), configMap.validStatus.type.success);
            isPwdSame = true;
        } else {
            addValidStatus($inputPassword2.closest('.input-group'), configMap.validStatus.type.error);
            isPwdSame = false;
        }
    };

    $inputPassword1.on('focus', function () {
        $passwordPrompt.css('display', 'block').animate({'marginTop': '50px', 'opacity': 1, 'zIndex': 2000}, 200);
    }).on('blur', function () {
        $passwordPrompt.css('display', 'none').animate({'marginTop': '100px', 'opacity': 0, 'zIndex': 0}, 200);
    }).on('input', function (event) {
        event.stopPropagation();
        var $this = $(this);
        var passwordVal = $this.val().trim();

        ruleValidNum = 0;

        // 8位及8位以上字符
        ruleValidNum += changeRuleStatus('pwd-rule-at-least-8-chars', /^\S{8,}$/.test(passwordVal));

        //至少一个字母和一个数字;
        ruleValidNum += changeRuleStatus('pwd-rule-at-least-one-letter-and-non', /[a-zA-Z]+/.test(passwordVal) && /\d+/.test(passwordVal));

        //密码全部符合规则
        if (ruleValidNum === 2) {
            addValidStatus($this.closest('.input-group'), configMap.validStatus.type.success);
        } else {
            addValidStatus($this.closest('.input-group'), configMap.validStatus.type.error);
        }
        checkPwdSame();
    });

    $inputPassword2.on('input', checkPwdSame);

    $('#submitBtn').click(function (e) {

        if (!pageCheck() || !(ruleValidNum == 2) || !isPwdSame) {
            return false;
        }

        var $psw1 = $('#inputPassword1'),
                name = $('#inputName').val(),
                oldName = "{{ user.fullname }}",
                token = "{{ token }}",
                $this = $(this),
                alert;

        if (!name) {
            name = oldName;
        }

        $this.button('loading');
        var registerType = {{ register_type }};
        WebAPI.post("/register", {
            name: name,
            password: $psw1.val(),
            token: token,
            type: registerType
        }).done(function (result) {
            var data = result;
            if (!data['status']) {
                var errCode = data['error'];
                if (!isNaN(errCode)) {
                    $messageInfo.text(I18n.resource.code[errCode]);
                } else {
                    $messageInfo.text(I18n.resource.code[0]);
                }
                $this.button('reset');
            } else {
                $messageInfo.text('').hide();
                infoBox.alert.success(configMap.validStatus.msg.registerSuccess);
                setTimeout(function () {
                    parent.location.href = "/"
                }, 5000);
                $this.remove();
            }
        }).fail(function () {
            infoBox.alert.danger(configMap.validStatus.msg.registerFailed);
            $this.button('reset');
        }).always(function () {
            //alert.show(2000);
        });
    });

</script>
</body>
</html>