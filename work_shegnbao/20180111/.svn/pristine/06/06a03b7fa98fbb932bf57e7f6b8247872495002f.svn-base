<script>
var postData = {
    projId: AppConfig.projectId,
    startTime:'2016-11-01 00:00:00', //_reportOptions.startTime,
    endTime: '2016-12-20 00:00:00'//_reportOptions.endTime
}

var innerHtml = '', index = 0;
var orderIndex = 0;
var diagnosisIndex = 0;
var $divDiagnosisReport = $('#divDiagnosisReport');
var currentChapter;
var personComplate;
var orderIdArr = {};

WebAPI.get('/Dashboard/workOrderStatistics/72').done(function(personComResult){
    personComplate = personComResult.data;
    console.log(personComplate);
    WebAPI.post('/diagnosis/getFaultReportGroupByGroup', postData).done(function (result) {
        currentChapter = $($divDiagnosisReport.parents('.report-content')[1]).children('.headline').attr('id').replace('headline_', '').replace(/-/g, '.');
        initPercentageComplete(personComplate);
        initDiagnosisChapter(result.data);
        initDiagnosisInfo();
    });
})


function initDiagnosisChapter(data) {

    var group, item;
    innerHtml +=`<div class ="report-container-wrap chapter-container">
            <div class ="report-container">
                <div class ="report-content clearfix chapter-${currentChapter.split('.').length + 1}">
                    <h2 class ="headline" id="headline_1-2">${currentChapter}.${++index} 诊断详情</h2>
                        <div>`;
    var secondIndex = 0;
    function compare(property){
        return function(a,b){
            var value1 = a[property];
            var value2 = b[property];
            return value1 - value2;
        }
    }
    for (var i = 0; i < data.length; i++) {
        group = data[i];
        group.table = '';
        var groupName = data[i].GroupName
        orderIdArr[groupName] = [];
        group.list.sort(compare('Status'));
        for (var j = 0; j < group.list.length; j++) {
            item = group.list[j];
            if(item.OrderId){
                orderIdArr[groupName].push(item.FaultName+'-'+item.OrderId);
            }
            var grade = (function (grade) {
                switch (grade) {
                    case 1: return '报警'; break;
                    case 2: return '故障'; break;
                    default: return ''; break;
                }
            })(item.Grade);
            var itemStatus =item.Status==1?'未处理':'处理';
            group.table += `<tr>
                        <td>${item.FaultName}</td>
                        <td>${grade}</td>
                        <td>${item.Desc}</td>
                        <td>${item.Target}</td>
                        <td>${item.ExecuterName}</td>
                        <td>${itemStatus}</td>
                    </tr>`;
                    //'处理中:' + item.Status[0] + ', 完成:' + item.Status[1]
        }
        var chapterLast = i!=data.length-1?('chapter-'+(currentChapter.split('.').length + 1)):'';//chapter-${currentChapter.split('.').length + 1}
        innerHtml += `<div class ="report-container-wrap chapter-container">
                <div class ="report-container">
                    <div class ="report-content clearfix ${chapterLast}">
                        <h2 class ="headline" id="headline_1-{index}-{++secondIndex}">${currentChapter}.${index}.${++secondIndex} ${group.GroupName}</h2>
                        <div>
                            <table style='width: auto;'>
                                <thead>
                                    <td>故障</td>
                                    <td style='width:60px;'>级别</td>
                                    <td>详情</td>
                                    <td>设备</td>
                                    <td style='width:80px;'>负责人</td>
                                    <td style='width:80px;'>状态</td>
                                </thead>
                                ${group.table}
                            </table>
                        </div>
                    </div>
                </div>
            </div>`;
    }
    innerHtml += `</div></div></div></div>`;
}

function initPercentageComplete(data) {
    if(data){
        var dict = {};
        var first = dict['first'] = {};
        var second = dict['second'] = {};
        for(var i in data){
            var item = data[i];
            if(i=='FinishingOrder'){
                for(var j in item ){
                    if(j=='SHHW'){
                        first['name']=j;
                        first['finish']= item[j];
                    }else{
                        second['name'] = j;
                        second['finish']= item[j];
                    }
                }
            }else if(i=='NewOrder'){
                for(var j in item){
                    if(j=='SHHW'){
                        first['all']=item[j];
                    }else{
                        second['all'] = item[j];
                    }
                }
            }
        }
        var table = '';
        for (var key in dict) {
            var item = dict[key], iTotal, percent;
            var noFinish = item.all-item.finish>0?item.all-item.finish:0;
            percent = parseFloat(item.finish * 100 / item.all).toFixed(1) + '%';

            table += `<tr>
                    <td>${item.name}</td>
                    <td>${noFinish}</td>
                    <td>${item.finish}</td>
                    <td>${item.all}</td>
                    <td>${percent}</td>
                </tr>`;
        }
    }

    innerHtml += `<div class ="report-container-wrap chapter-container">
                <div class ="report-container">
                    <div class ="report-content clearfix chapter-${currentChapter.split('.').length + 1}">
                        <h2 class ="headline" id="headline_1-1">${currentChapter}.${++index} 人员完成率统计</h2>
                        <div>
                            <table style='width: auto;'>
                                <thead>
                                    <td>负责人</td>
                                    <td>未完成</td>
                                    <td>已完成</td>
                                    <td>合计</td>
                                    <td>完成率</td>
                                </thead>
                                ${table}
                            </table>
                        </div>
                    </div>
                </div>
            </div>`;
}
function initDiagnosisInfo(){
    innerHtml +=`<div class ="report-container-wrap chapter-container">
            <div class ="report-container">
                <div class ="report-content clearfix chapter-${currentChapter.split('.').length + 1}">
                    <h2 class ="headline" id="headline_1-3">${currentChapter}.${++index} 工单详情</h2>
                        <div>`;
    for(var orderProject in orderIdArr){
        var orderProjectIdArr = orderIdArr[orderProject];
        diagnosisIndex = 0;
        //orderIdObj[orderProject] = [];
        var singleOrderInfo='' ;
        if(orderProjectIdArr.length>0){
            //singleOrderInfo = recursion(orderProjectIdArr,orderProject);
            ++orderIndex;
            for(var i = 0;i<orderProjectIdArr.length;i++){
                var orderId = orderProjectIdArr[i].split('-')[1];
                var currentTitle = orderProjectIdArr[i].split('-')[0];
                var host = window.location.host;
                var nowOrderIds = orderId;
                /*if(Object.prototype.toString.call(orderId) === "[object String]"&&orderId.length!=24){
                    nowOrderIds = '58412c0c8a64ef33cce0d716';
                }*/
                //<div style="page-break-after:always;width:100%;height:0;"></div>
                singleOrderInfo += `<div class ="report-container-wrap chapter-container pageNotSplit">
                    <div class ="report-container">
                        <div class ="report-content clearfix chapter-${currentChapter.split('.').length + 1}">
                            <h2 class ="headline clearfix" id="headline_1-{index}-{++orderIndex}">${currentChapter}.${index}.${orderIndex}.${++diagnosisIndex} ${currentTitle}<a class="checkOrder" href="http://${host}/observer#page=workflow&type=transaction&transactionId=${nowOrderIds}" target="_blank">查看工单</a></h2>
                            <div  class="orderBox orderPro-${orderId}" data-orderid="${orderId}">
                            </div>
                        </div>
                    </div>
                </div><br style="page-break-after:always;">`
                }
            }
            innerHtml += `<div class ="report-container-wrap chapter-container">
                <div class ="report-container">
                    <div class ="report-content clearfix chapter-${currentChapter.split('.').length + 1}">
                        <h2 class ="headline" id="headline_1-{index}-{++orderIndex}">${currentChapter}.${index}.${orderIndex} ${orderProject}</h2>
                        <div class="orderProject">
                            ${singleOrderInfo}
                        </div>
                    </div>
                </div>
            </div>`;

    }
    innerHtml += `</div></div></div></div>`;
    $divDiagnosisReport.html(innerHtml);
    recursion(orderIdArr);
}
var jOrder = 0;
function recursion(orderIdArr){
    var orderAllArr = [];
    for(var order in orderIdArr){
        var currentOrderArr = orderIdArr[order];
        for(var i = 0;i<currentOrderArr.length;i++){
            orderAllArr.push(currentOrderArr[i].split('-')[1]);
        }
    }
    var orderProjectId = orderAllArr[jOrder];
    var nowOrderId = orderProjectId;
    /*if(Object.prototype.toString.call(orderProjectId) === "[object String]"&&orderProjectId.length!=24){
        nowOrderId = '58412c0c8a64ef33cce0d716';
    }*/
    var singleOrderInfo='';
    WebAPI.get('/workflow/task/'+nowOrderId).done(function(resultOrder){
        renderSingleOrder(resultOrder,orderProjectId)
        jOrder++;
    }).always(function(){
        if(jOrder<orderAllArr.length) {
            recursion(orderIdArr);
        }
    })
}
function renderSingleOrder(resultOrder,oldOrder){
    if(resultOrder.data==null){
        return;
    }
    var critical = resultOrder.data.fields.critical;
    var isUrgency;
    if(critical=='0'){
        isUrgency = '一般';
    }else if(critical=='1'){
        isUrgency = '严重';
    }else{
        isUrgency = '紧急';
    }
    //var progressType = resultOrder.data.process.type==1?'默认流程':resultOrder.data.process.name;
    var p = [];
    var teamInfo;
    var creator = resultOrder.data.creatorInfo;
    var nodes = resultOrder.data.process.nodes;
    var node_index = resultOrder.data.node_index;
    var status =  resultOrder.data.status;
    p.push('<div class="wf_add_process_people fl"><div class="disabled wf-manager-people"><div class="item-peoples-box"><div class="teamPeople oh mAuto"><img src="',creator.userpic,'"/><div class="people-name ellipsis" title="',creator.userfullname,'">',creator.userfullname,'</div></div><div style="margin-top: 10px;"><span class="chevron-content peopleName" style="background: #5cb95c; color: #ffffff;">发起人</span></div><span class="fuLineBox"><span class="fuLine"></span></span></div></div></div>');
    for(var m=0; m < nodes.length; m++){
        p.push('');
        var node = nodes[m];
        var nodeStatus = '';
        if(status != 2 && node_index == m){
            var cls = 'info';
        }else{
            if(node.action && (node.action == 'complete' || node.action == 'pass')){
                var cls = 'success';
            }else if(node.action && (node.action == 'noPass')){
                var cls = 'danger';
                nodeStatus = '审核不通过';//审核不通过
            }else{
                var cls = 'default';
            }
        }
        if(!nodeStatus){
            if(node.behaviour==1){
                nodeStatus = '审核';
            }else{
                nodeStatus = '执行中';
            }
        }
        p.push('<div class="color-',cls,' wf_add_process_people fl"  data-id="',node._id,'"> <div class="disabled wf-manager-people">');
        if(m > node_index){
            p.push('<div class="item-peoples-box noImplement">');
        }else{
            p.push('<div class="item-peoples-box">');
        }
        p.push('');
        if(node.archType == 4 && node.members.length !== 1){//全体成员
            p.push('<div class="teamPeople oh mAuto"><img  class="imgColor" src="/static/images/avatar/user/default_group.png"/><div class="people-name ellipsis" title="',node.archName,'">','全体成员','</div></div></span>');//<span class="glyphicon glyphicon-play ionPosition process-people-show cp" data-index="',m,'">
        }else{
            p.push('');
            if(node.members.length){
                p.push('');
                if(node.members.length == 1){
                    p.push('<div class="teamPeople oh mAuto" ><img  class="imgColor" src="',node.members[0].userpic,'"/> <div class="people-name ellipsis" title="',node.members[0].userfullname,'">',node.members[0].userfullname,'</div></div>');
                    /*stateMap.processMember[node._id] = node.members;*/
                    p.push('');
                }else{
                    p.push('<div class="teamPeople oh mAuto"><img  class="imgColor" src="/static/images/avatar/user/default_group.png"/><div class="people-name ellipsis" title="',node.archName,'">',node.archName,'</div></div>')
                    ;if(m >= node_index){
                        /*p.push(' <span class="glyphicon glyphicon-play ionPosition process-people-show cp" data-index="',m,'"></span>');*/
                    }
                    p.push('');
                }
                p.push('');
            }else{
                p.push('<div class="teamPeople oh mAuto"><img  class="imgColor" src="/static/images/avatar/user/default_group.png"/><div class="people-name ellipsis" title="',node.archName,'">',node.archName,'</div></div>');
            }p.push('');
        }
        p.push('<span class="fuLineBox">');
        if(m > node_index){
            p.push('<span style="background: #737373;" class="fuLine"></span>');
        }else{
            p.push('<span class="fuLine"></span>');
        }
        p.push('</span><div style="margin-top: 10px;">');
        if(node.behaviour){
            p.push('<span class="chevron-content peopleName">',nodeStatus,'</span>');
        }
        p.push('</div></div></div></div>');
    }
    p.push('');
    if(status == 2){
        p.push('');var complete_color = 'success'; p.push('');
    }else{
        p.push('');var complete_color = 'default'; p.push('');
    }
    p.push('<div class="color-',complete_color,' wf_add_process_people fl"><div class="disabled wf-manager-people"><div class="item-peoples-box"><div class="teamPeople oh mAuto completed"><div>完成</div></div></div></div></div> ');
   teamInfo = p.join('');
    var fault = resultOrder.data.fields.charts?resultOrder.data.fields.charts:null;
    var legend = [];
    var handleFault = function (fault) {
        if (!fault.chartPointList || !fault.chartPointList.indexOf(',') < 0) {
            return false;
        }
        var pointList = fault.chartPointList.split('|');
        var dsItemIds = [];
        for (var i = 0; i < pointList.length; i++) {
            var mapList = pointList[i].split(',');
            legend.push(mapList[1]);
            dsItemIds.push('@' + fault.projectId + '|' + mapList[0]);
        }
        fault.dsItemIds = dsItemIds;
        fault.timeStart=fault.chartStartTime;
        fault.timeEnd=fault.chartEndTime;
        fault.timeFormat=fault.chartQueryCircle;
        return true;
    };
    var taskName = '';
    if(resultOrder.data.taskGroup){
        if(resultOrder.data.taskGroup.name){
            taskName = resultOrder.data.taskGroup.name;
        }
    }
    var chartDom=''
    if(fault){
        chartDom = '<div class="chartDom chartDom-'+oldOrder+'" data-orderId="'+oldOrder+'"></div>'
    }
    //<a class="checkOrder" href="http://${host}/observer#page=workflow&type=transaction&transactionId=${resultOrder.data._id}" target="_blank">查看工单</a>
  var nowTimeF = resultOrder.data.createTime;
  nowTimeF = nowTimeF.split(':')[0]+':'+nowTimeF.split(':')[1];
  var singleOrderInfo = `
                    <div  class="orderBox">
                        <table class="orderInfoTb">
                            <tr>
                              <td class="tableHead tableHeadOrder">工单编号</td>
                              <td>${oldOrder}</td>
                              <td class="tableHead tableHead1">起止时间</td>
                              <td class="tableTime">${nowTimeF} - ${resultOrder.data.fields.dueDate}</td>
                              <td class="tableHead tableHead1">${isUrgency}</td>
                            </tr>
                            <tr>
                               <td class="tableHead tableHeadOrder">工单详情</td>
                               <td colspan="4">${resultOrder.data.fields.detail}</td>
                            </tr>
                            <tr>
                               <td class="tableHead tableHeadOrder"></td>
                               <td colspan="4">${chartDom}</td>
                            </tr>
                            <tr>
                               <td class="tableHead tableHeadOrder">处理状态</td>
                               <td colspan="4">${teamInfo}</td>
                            </tr>
                            <tr>
                               <td class="tableHead tableHeadOrder">工单动态</td>
                               <td colspan="4" class="orderActoin"></td>
                            </tr>
                        </table>
                    </div>`;
        $('.orderPro-'+oldOrder).html(singleOrderInfo);
        $('.color-default').prev('.wf_add_process_people').find('.fuLineBox').hide();
        var renderChart = function (record) {
            var list_value = record.list,
                arrXAxis = [];

            if (legend.length !== list_value.length) {
                $('.chartDom-'+oldOrder).hide();
            }
            if (record.timeShaft.length > 0) {
                //返回的数据格式为
                //"2016-01-12 00:50,2016-01-12 00:55,2016-01-12 01:00,2016-01-12 01:05,2016-01-12 01:10"
                record.timeShaft.forEach(function (item) {
                    arrXAxis.push(item);
                });
            }

            var series = [];

            for (var i = 0; i < list_value.length; i++) {
                var seriesItem = [];
                if (i < 8) {
                    var item = list_value[i];
                    if (item) {
                        for (var j = 0; j < item.data.length; ++j) {
                            seriesItem.push(parseFloat(item.data[j]).toFixed(1));
                        }
                    }

                    series.push(
                        {
                            name: legend[i],
                            type: 'line',
                            itemStyle: {
                                normal: {
                                    lineStyle: {
                                        type: 'solid'
                                    }
                                }
                            },
                            data: seriesItem
                        });
                }
            }

            var option =
            {
                color: ['#03d5c6', '#288add', '#fdbf05', '#f34704', '#f903d9', '#6d23dd', '#c088f9', '#2d05fb'],
                tooltip: {
                    trigger: 'axis'
                },
                toolbox: {
                    show: true,
                    feature: {
                        /*dataZoom: {
                            show: true,
                            title: {
                                zoom: "zoom",
                                back: "back"
                            }
                        }*/

                    }
                },
                legend: {
                    data: legend,
                    x: 'center'
                },
                dataZoom: [
                    {
                        show: true,
                        type: 'slider',
                        textStyle: {color: '#000'},
                        start: 41.6,
                        end: 58.4,
                        bottom: -3
                    }
                ],
                xAxis: [
                    {
                        type: 'category',
                        boundaryGap: false,
                        axisLine: {onZero: false},
                        data: arrXAxis
                    }
                ],
                yAxis: [
                    {
                        type: 'value',
                        scale: true
                    }
                ],
                series: series
            };
            chart.setOption(option);
            window.onresize = chart.resize;
        };
        if(fault){
            if(handleFault(fault)){
                var chart = echarts.init($('.chartDom-'+oldOrder).get(0));
                WebAPI.post('/analysis/startWorkspaceDataGenHistogram',fault).done(function(orderData){
                    renderChart(orderData);
                })
            }else{
                $('.chartDom-'+oldOrder).hide();
            }
        }
        var $orderActoin = $('.orderPro-'+oldOrder).find('.orderActoin');
        WebAPI.get( '/static/views/workflow/components/task.reply.list.html?=' + new Date().getTime().toString(16)).done(function (html) {
             $orderActoin.html(html);
             WebAPI.get('/workflow/task/comment/get/' + resultOrder.data._id).done(function(orderAction){
                if (orderAction.success) {
                    var pt = [];
                    var orderActionDom;
                    var comment = orderAction.data.comment;
                    pt.push('<tbody>');
                   for(var n=0; n < comment.length; n++){
                       pt.push('');
                       var reply = comment[n];
                       var userInfo=reply.userInfo;
                       pt.push('<tr><td class="vt"><dl class="pr wf-detail-userInfo"title="',userInfo.userfullname +'\n' +(userInfo.useremail && userInfo.useremail!='undefined' ? userInfo.useremail : ''),'"><dt class="wf-detail-userPic"><img src="',userInfo.userpic,'" class="wf-person-pic"></dt><dd class="pa wf-detail-userName ellipsis dn">',userInfo.userfullname,'</dd></dl><div class="wf-reply-info-content fl" style="width: 80%"><div class="wf-reply-user-name">',userInfo.userfullname,'</div><div class="wf-reply-time"> ');
                       var replyTime = moment(reply.time);
                       pt.push('');
                       if(replyTime.diff(new Date, 'days') < 5){
                           pt.push('',replyTime.fromNow(),'');
                       }else{
                           pt.push('',reply.replyTime,'');
                       }
                       pt.push('</div><div class="wf-reply-info">',reply.content,'</div></div>');
                       if(resultOrder.data){
                           pt.push('');
                           if( reply.userId == AppConfig.userId){
                               pt.push('<span class="pull-right delete-btn" data-reply-id="',reply.id,'"><button class="btn btn-xs btn-danger">删除</button></span>');
                           }
                           pt.push('');
                       }
                       pt.push('</td></tr> ');
                   }
                    pt.push('</tbody>');
                    orderActionDom = pt.join('');
                    $orderActoin.find('#wf-reply-table').empty().html(orderActionDom);
                }
                 return singleOrderInfo;
             });
         })
}
</script>