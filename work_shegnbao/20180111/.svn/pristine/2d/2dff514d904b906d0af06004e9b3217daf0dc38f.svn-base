# coding=utf-8from tests import TestSpecificfrom tests.utils import TestCommonimport pytest## 项目：华为（72）# 时间格式：'m5','h1','d1','M1'# 参数可以是objectid，云点名，或者真是点名，返回的是历史数据，对改=该接口，增加测试用例及assertion函数# 尽量多的提供出错的信息，不同的输入参数都要有测试的用例（objectid，云点名，或者真是点名）# added by sophia 2017/10/12
@pytest.mark.p0def test_huawei_original_point_m5():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|A11AHU_A_11_TempSaIn","@72|A14AHU_A_24_VFSA"],        "timeStart":"2017-09-01 23:00:00",        "timeEnd":"2017-09-01 23:05:00",        "timeFormat":"m5"    })    expected = {        "list":        [{            "data": [23.33, 23.33],            "dsItemId": "@72|A11AHU_A_11_TempSaIn"        },        {            "data": [1, 1],            "dsItemId": "@72|A14AHU_A_24_VFSA"        }],        "timeShaft": ["2017-09-01 23:00:00", "2017-09-01 23:05:00"]    }    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_result_equals(expected, rt)
@pytest.mark.p0def test_huawei_spot_point_m5():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|VAV_J_54_18_Room_Temp","@72|VAV_J_54_14_Air_Flow"],        "timeStart":"2017-09-01 23:00:00",        "timeEnd":"2017-09-01 23:05:00",        "timeFormat":"m5"    })    expected = {        "list":            [{                "data": [26.45, 26.45],                "dsItemId": "@72|VAV_J_54_18_Room_Temp"            },            {                "data": [49.57, 49.46],                "dsItemId": "@72|VAV_J_54_14_Air_Flow"            }],        "timeShaft": ["2017-09-01 23:00:00", "2017-09-01 23:05:00"]    }    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_result_equals(expected, rt)
@pytest.mark.p0def test_huawei_virtual_point_m5():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|VAV_G_21_05_DTUOffStatus","@72|Water_Pump_SP_KPITotalScore"],        "timeStart":"2017-09-01 23:00:00",        "timeEnd":"2017-09-01 23:05:00",        "timeFormat":"m5"    })    expected ={        "list":            [                {                    "data": [0, 0],                    "dsItemId": "@72|VAV_G_21_05_DTUOffStatus"                },                {                    "data": [99.78, 99.79],                    "dsItemId": "@72|Water_Pump_SP_KPITotalScore"                }            ],        "timeShaft": ["2017-09-01 23:00:00", "2017-09-01 23:05:00"]    }    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_result_equals(expected, rt)
@pytest.mark.p0def test_huawei_calculate_point_m5():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|VAV_F_12_17_RoomTemp_realdr","@72|HVAC_KPITotalScore"],        "timeStart":"2017-09-01 23:00:00",        "timeEnd":"2017-09-01 23:05:00",        "timeFormat":"m5"    })    expected = {        "list":            [                {                    "data": [100, 100],                    "dsItemId": "@72|VAV_F_12_17_RoomTemp_realdr"                },                {                    "data": [75, 75],                    "dsItemId": "@72|HVAC_KPITotalScore"                }            ],        "timeShaft": ["2017-09-01 23:00:00", "2017-09-01 23:05:00"]    }    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_result_equals(expected, rt)
@pytest.mark.p0def test_huawei_original_point_m5_mix():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|A11AHU_A_11_TempSaIn","@72|A14AHU_A_24_VFSA"],        "timeStart":"2017-09-01 23:00:00",        "timeEnd":"2017-09-01 23:30:00",        "timeFormat":"m5"    })    expected = {        "list":            [                {                    "data": [23.33, 23.33, 23.33, 23.33, 23.33, 23.33, 23.33],                    "dsItemId": "@72|A11AHU_A_11_TempSaIn"                },                {                    "data": [1, 1, 1, 1, 1, 1, 1],                    "dsItemId": "@72|A14AHU_A_24_VFSA"                }            ],        "timeShaft": ["2017-09-01 23:00:00", "2017-09-01 23:05:00", "2017-09-01 23:10:00", "2017-09-01 23:15:00",                      "2017-09-01 23:20:00", "2017-09-01 23:25:00", "2017-09-01 23:30:00"]    }    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_result_equals(expected, rt)
@pytest.mark.p0def test_huawei_spot_point_m5_mix():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|VAV_J_54_18_Room_Temp","@72|VAV_J_54_14_Air_Flow"],        "timeStart":"2017-09-01 23:00:00",        "timeEnd":"2017-09-01 23:30:00",        "timeFormat":"m5"    })    expected = {        "list":            [                {                    "data": [26.45, 26.45, 26.47, 26.5, 26.47, 26.5, 26.5],                    "dsItemId": "@72|VAV_J_54_18_Room_Temp"                },                {                    "data": [49.57, 49.46, 49.45, 49.77, 49.81, 49.46, 49.68], "dsItemId": "@72|VAV_J_54_14_Air_Flow"                }            ],        "timeShaft": ["2017-09-01 23:00:00", "2017-09-01 23:05:00", "2017-09-01 23:10:00", "2017-09-01 23:15:00", "2017-09-01 23:20:00",                      "2017-09-01 23:25:00", "2017-09-01 23:30:00"]    }    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_result_equals(expected, rt)
@pytest.mark.p0def test_huawei_virtual_point_m5_mix():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|VAV_G_21_05_DTUOffStatus","@72|Water_Pump_SP_KPITotalScore"],        "timeStart":"2017-09-01 23:00:00",        "timeEnd":"2017-09-01 23:30:00",        "timeFormat":"m5"    })    expected ={        "list":            [                {                    "data": [0, 0, 0, 0, 0, 0, 0],                    "dsItemId": "@72|VAV_G_21_05_DTUOffStatus"                },                {                    "data": [99.78, 99.79, 99.79, 99.79, 99.79, 99.79, 99.78],                    "dsItemId": "@72|Water_Pump_SP_KPITotalScore"                }            ],        "timeShaft": ["2017-09-01 23:00:00", "2017-09-01 23:05:00", "2017-09-01 23:10:00", "2017-09-01 23:15:00",                      "2017-09-01 23:20:00", "2017-09-01 23:25:00", "2017-09-01 23:30:00"]    }    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_result_equals(expected, rt)
@pytest.mark.p0def test_huawei_calculate_point_m5_mix():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|VAV_F_12_17_RoomTemp_realdr","@72|HVAC_KPITotalScore"],        "timeStart":"2017-09-01 23:00:00",        "timeEnd":"2017-09-01 23:30:00",        "timeFormat":"m5"    })    expected = {        "list":            [                {                    "data": [100, 100, 100, 100, 100, 100, 100],                    "dsItemId": "@72|VAV_F_12_17_RoomTemp_realdr"                },                {                    "data": [75, 75, 75, 75, 75, 75, 75],                    "dsItemId": "@72|HVAC_KPITotalScore"                }            ],        "timeShaft": ["2017-09-01 23:00:00", "2017-09-01 23:05:00", "2017-09-01 23:10:00", "2017-09-01 23:15:00",                      "2017-09-01 23:20:00", "2017-09-01 23:25:00", "2017-09-01 23:30:00"]    }    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_result_equals(expected, rt)
@pytest.mark.p0def test_huawei_original_point_h1():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|A11AHU_A_11_TempSaIn","@72|A14AHU_A_24_VFSA"],        "timeStart":"2017-09-01 00:00:00",        "timeEnd":"2017-09-01 02:00:00",        "timeFormat":"h1"    })    expected = {        "list":            [                {                    "data": [25.58, 25.35, 25.01],                    "dsItemId": "@72|A11AHU_A_11_TempSaIn"                },                {                    "data": [1, 1, 1], "dsItemId": "@72|A14AHU_A_24_VFSA"                }            ],        "timeShaft": ["2017-09-01 00:00:00", "2017-09-01 01:00:00", "2017-09-01 02:00:00"]    }    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_result_equals(expected, rt)
@pytest.mark.p0def test_huawei_spot_point_h1():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|VAV_J_54_18_Room_Temp","@72|VAV_J_54_14_Air_Flow"],        "timeStart":"2017-09-01 00:00:00",        "timeEnd":"2017-09-01 01:00:00",        "timeFormat":"h1"    })    expected = {        "list":            [                {                    "data": [26.89, 26.99],                    "dsItemId": "@72|VAV_J_54_18_Room_Temp"                },                {                    "data": [49.88, 50.22],                    "dsItemId": "@72|VAV_J_54_14_Air_Flow"                }            ],        "timeShaft": ["2017-09-01 00:00:00", "2017-09-01 01:00:00"]    }    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_result_equals(expected, rt)
@pytest.mark.p0def test_huawei_virtual_point_h1():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|VAV_G_21_05_DTUOffStatus","@72|Water_Pump_SP_KPITotalScore"],        "timeStart":"2017-09-01 00:00:00",        "timeEnd":"2017-09-01 01:00:00",        "timeFormat":"h1"    })    expected ={        "list":            [                {                    "data": [0, 0],                    "dsItemId": "@72|VAV_G_21_05_DTUOffStatus"                },                {                    "data": [99.79, 99.79],                    "dsItemId": "@72|Water_Pump_SP_KPITotalScore"                }            ],        "timeShaft": ["2017-09-01 00:00:00", "2017-09-01 01:00:00"]    }    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_result_equals(expected, rt)
@pytest.mark.p0def test_huawei_calculate_point_h1():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|VAV_F_12_17_RoomTemp_realdr","@72|HVAC_KPITotalScore"],        "timeStart":"2017-09-01 00:00:00",        "timeEnd":"2017-09-01 01:00:00",        "timeFormat":"h1"    })    expected = {        "list":            [                {                    "data": [100, 100],                    "dsItemId": "@72|VAV_F_12_17_RoomTemp_realdr"                },                {                    "data": [75, 75],                    "dsItemId": "@72|HVAC_KPITotalScore"                }            ],        "timeShaft": ["2017-09-01 00:00:00", "2017-09-01 01:00:00"]    }    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_result_equals(expected, rt)
@pytest.mark.p0def test_huawei_original_point_h1_mix():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|A11AHU_A_11_TempSaIn","@72|A14AHU_A_24_VFSA"],        "timeStart":"2017-09-01 23:00:00",        "timeEnd":"2017-09-02 23:00:00",        "timeFormat":"h1"    })    expected = {        "list":            [                {                    "data":                        [                            23.33, 23.33, 23.33, 23.33, 23.33, 23.33, 23.33, 23.33, 23.1, 23.1, 24.45, 22.88, 24.45, 22.99,                            24.11, 24.33, 21.87, 22.65, 22.65, 21.98, 24.22, 22.32, 23.77, 26.38, 26.6                        ],                    "dsItemId": "@72|A11AHU_A_11_TempSaIn"                },                {                    "data":                        [                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1                        ],                    "dsItemId": "@72|A14AHU_A_24_VFSA"                }            ],        "timeShaft": ["2017-09-01 23:00:00", "2017-09-02 00:00:00", "2017-09-02 01:00:00", "2017-09-02 02:00:00", "2017-09-02 03:00:00",                      "2017-09-02 04:00:00", "2017-09-02 05:00:00", "2017-09-02 06:00:00", "2017-09-02 07:00:00", "2017-09-02 08:00:00",                      "2017-09-02 09:00:00", "2017-09-02 10:00:00", "2017-09-02 11:00:00", "2017-09-02 12:00:00", "2017-09-02 13:00:00",                      "2017-09-02 14:00:00", "2017-09-02 15:00:00", "2017-09-02 16:00:00", "2017-09-02 17:00:00", "2017-09-02 18:00:00",                      "2017-09-02 19:00:00", "2017-09-02 20:00:00", "2017-09-02 21:00:00", "2017-09-02 22:00:00", "2017-09-02 23:00:00"]    }    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_result_equals(expected, rt)
@pytest.mark.p0def test_huawei_spot_point_h1_mix():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|VAV_J_54_18_Room_Temp","@72|VAV_J_54_14_Air_Flow"],        "timeStart":"2017-09-01 23:00:00",        "timeEnd":"2017-09-02 23:00:00",        "timeFormat":"h1"    })    expected = {        "list":            [                {                    "data": [26.45, 26.55, 26.64, 26.69, 26.77, 26.79, 26.84, 26.87, 26.89, 26.96, 27.19,                             27.11, 27.01, 27.01, 26.96, 26.94, 26.94, 26.94, 26.94, 26.92, 26.87, 26.84, 26.84, 26.92, 26.99],                    "dsItemId": "@72|VAV_J_54_18_Room_Temp"                },                {                    "data": [49.57, 49.49, 49.63, 49.84, 50.07, 50.15, 50.24, 50.14, 50.38, 50.37, 50.39, 50.86, 50.72,                             50.47, 50.93, 50.99, 50.55, 50.67, 51.37, 51.22, 50.57, 50.71, 51.38, 51.01, 50.46],                    "dsItemId": "@72|VAV_J_54_14_Air_Flow"                }            ],        "timeShaft": ["2017-09-01 23:00:00", "2017-09-02 00:00:00", "2017-09-02 01:00:00", "2017-09-02 02:00:00", "2017-09-02 03:00:00",                      "2017-09-02 04:00:00", "2017-09-02 05:00:00", "2017-09-02 06:00:00", "2017-09-02 07:00:00", "2017-09-02 08:00:00",                      "2017-09-02 09:00:00", "2017-09-02 10:00:00", "2017-09-02 11:00:00", "2017-09-02 12:00:00", "2017-09-02 13:00:00",                      "2017-09-02 14:00:00", "2017-09-02 15:00:00", "2017-09-02 16:00:00", "2017-09-02 17:00:00", "2017-09-02 18:00:00",                      "2017-09-02 19:00:00", "2017-09-02 20:00:00", "2017-09-02 21:00:00", "2017-09-02 22:00:00", "2017-09-02 23:00:00"]    }    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_result_equals(expected, rt)
@pytest.mark.p0def test_huawei_virtual_point_h1_mix():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|VAV_G_21_05_DTUOffStatus","@72|Water_Pump_SP_KPITotalScore"],        "timeStart":"2017-09-01 23:00:00",        "timeEnd":"2017-09-02 23:00:00",        "timeFormat":"h1"    })    expected ={        "list":            [                {                    "data": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],                    "dsItemId": "@72|VAV_G_21_05_DTUOffStatus"                },                {                    "data": [99.78, 99.79, 99.79, 99.78, 99.79, 99.79, 99.78, 99.79, 99.78, 99.78, 99.79, 99.78,                             99.79, 99.78, 99.79, 99.78, 99.79, 99.79, 99.79, 99.79, 99.79, 99.78, 99.78, 99.79, 99.79],                    "dsItemId": "@72|Water_Pump_SP_KPITotalScore"                }            ],        "timeShaft": ["2017-09-01 23:00:00", "2017-09-02 00:00:00", "2017-09-02 01:00:00", "2017-09-02 02:00:00", "2017-09-02 03:00:00",                      "2017-09-02 04:00:00", "2017-09-02 05:00:00", "2017-09-02 06:00:00", "2017-09-02 07:00:00", "2017-09-02 08:00:00",                      "2017-09-02 09:00:00", "2017-09-02 10:00:00", "2017-09-02 11:00:00", "2017-09-02 12:00:00", "2017-09-02 13:00:00",                      "2017-09-02 14:00:00", "2017-09-02 15:00:00", "2017-09-02 16:00:00", "2017-09-02 17:00:00", "2017-09-02 18:00:00",                      "2017-09-02 19:00:00", "2017-09-02 20:00:00", "2017-09-02 21:00:00", "2017-09-02 22:00:00", "2017-09-02 23:00:00"]    }    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_result_equals(expected, rt)
@pytest.mark.p0def test_huawei_calculate_point_h1_mix():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|VAV_F_12_17_RoomTemp_realdr","@72|HVAC_KPITotalScore"],        "timeStart":"2017-09-01 23:00:00",        "timeEnd":"2017-09-02 23:00:00",        "timeFormat":"h1"    })    expected = {        "list":            [                {                    "data": [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100],                    "dsItemId": "@72|VAV_F_12_17_RoomTemp_realdr"                },                {                    "data": [75, 75, 68.75, 68.75, 68.75, 68.75, 68.75, 68.75, 68.75, 68.75, 68.75, 68.75, 68.75, 68.75, 68.75, 68.75, 68.75,                             68.75, 68.75, 68.75, 68.75, 68.75, 68.75, 68.75, 68.75],                    "dsItemId": "@72|HVAC_KPITotalScore"                }            ],        "timeShaft": ["2017-09-01 23:00:00", "2017-09-02 00:00:00", "2017-09-02 01:00:00", "2017-09-02 02:00:00", "2017-09-02 03:00:00", "2017-09-02 04:00:00",                      "2017-09-02 05:00:00", "2017-09-02 06:00:00", "2017-09-02 07:00:00", "2017-09-02 08:00:00", "2017-09-02 09:00:00", "2017-09-02 10:00:00",                      "2017-09-02 11:00:00", "2017-09-02 12:00:00", "2017-09-02 13:00:00", "2017-09-02 14:00:00", "2017-09-02 15:00:00", "2017-09-02 16:00:00",                      "2017-09-02 17:00:00", "2017-09-02 18:00:00", "2017-09-02 19:00:00", "2017-09-02 20:00:00", "2017-09-02 21:00:00", "2017-09-02 22:00:00",                      "2017-09-02 23:00:00"]    }    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_result_equals(expected, rt)
@pytest.mark.p0def test_huawei_original_point_d1():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|A11AHU_A_11_TempSaIn","@72|A14AHU_A_24_VFSA"],        "timeStart":"2017-09-01 23:00:00",        "timeEnd":"2017-09-02 23:00:00",        "timeFormat":"d1"    })    expected = {        "list":            [                {                    "data": [23.33, 26.6],                    "dsItemId": "@72|A11AHU_A_11_TempSaIn"                },                {                    "data": [1, 1],                    "dsItemId": "@72|A14AHU_A_24_VFSA"                }            ],        "timeShaft": ["2017-09-01 23:00:00", "2017-09-02 23:00:00"]    }    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_result_equals(expected, rt)
@pytest.mark.p0def test_huawei_spot_point_d1():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|VAV_J_54_18_Room_Temp","@72|VAV_J_54_14_Air_Flow"],        "timeStart":"2017-09-01 23:00:00",        "timeEnd":"2017-09-02 23:00:00",        "timeFormat":"d1"    })    expected = {        "list":            [                {                    "data": [26.45, 26.99],                    "dsItemId": "@72|VAV_J_54_18_Room_Temp"                },                {                    "data": [49.57, 50.46], "dsItemId": "@72|VAV_J_54_14_Air_Flow"                }            ],        "timeShaft": ["2017-09-01 23:00:00", "2017-09-02 23:00:00"]    }    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_result_equals(expected, rt)
@pytest.mark.p0def test_huawei_virtual_point_d1():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|VAV_G_21_05_DTUOffStatus","@72|Water_Pump_SP_KPITotalScore"],        "timeStart":"2017-09-01 23:00:00",        "timeEnd":"2017-09-02 23:00:00",        "timeFormat":"d1"    })    expected ={        "list":            [                {                    "data": [0, 0],                    "dsItemId": "@72|VAV_G_21_05_DTUOffStatus"                },                {                    "data": [99.78, 99.79],                    "dsItemId": "@72|Water_Pump_SP_KPITotalScore"                }            ],        "timeShaft": ["2017-09-01 23:00:00", "2017-09-02 23:00:00"]    }    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_result_equals(expected, rt)
@pytest.mark.p0def test_huawei_calculate_point_d1():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|VAV_F_12_17_RoomTemp_realdr","@72|HVAC_KPITotalScore"],        "timeStart":"2017-09-01 23:00:00",        "timeEnd":"2017-09-02 23:00:00",        "timeFormat":"d1"    })    expected = {        "list":            [                {                    "data": [100, 100],                    "dsItemId": "@72|VAV_F_12_17_RoomTemp_realdr"                },                {                    "data": [75, 68.75],                    "dsItemId": "@72|HVAC_KPITotalScore"                }            ],        "timeShaft": ["2017-09-01 23:00:00", "2017-09-02 23:00:00"]    }    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_result_equals(expected, rt)
@pytest.mark.p0def test_huawei_original_point_d1_mix():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|A11AHU_A_11_TempSaIn","@72|A14AHU_A_24_VFSA"],        "timeStart":"2017-08-01 23:00:00",        "timeEnd":"2017-09-03 23:00:00",        "timeFormat":"d1"    })    expected ={        "list":            [                {                    "data": [15.71, 24, 24.11, 24.56, 24.78, 27.84, 26.94, 26.27, 25.01, 25.47, 22.99, 21.2, 25.58, 22.09,                             24.22, 23.55, 23.55, 23.55, 24.67, 26.04, 24.22, 22.43, 23.89, 24.56, 24.22, 24.11, 24.67, 24,                             23.77, 22.09, 25.12, 23.33, 26.6, 22.77],                    "dsItemId": "@72|A11AHU_A_11_TempSaIn"                },                {                    "data": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],                    "dsItemId": "@72|A14AHU_A_24_VFSA"                }            ],        "timeShaft": ["2017-08-01 23:00:00", "2017-08-02 23:00:00", "2017-08-03 23:00:00", "2017-08-04 23:00:00", "2017-08-05 23:00:00",                      "2017-08-06 23:00:00", "2017-08-07 23:00:00", "2017-08-08 23:00:00", "2017-08-09 23:00:00", "2017-08-10 23:00:00",                      "2017-08-11 23:00:00", "2017-08-12 23:00:00", "2017-08-13 23:00:00", "2017-08-14 23:00:00", "2017-08-15 23:00:00",                      "2017-08-16 23:00:00", "2017-08-17 23:00:00", "2017-08-18 23:00:00", "2017-08-19 23:00:00", "2017-08-20 23:00:00",                      "2017-08-21 23:00:00", "2017-08-22 23:00:00", "2017-08-23 23:00:00", "2017-08-24 23:00:00", "2017-08-25 23:00:00",                      "2017-08-26 23:00:00", "2017-08-27 23:00:00", "2017-08-28 23:00:00", "2017-08-29 23:00:00", "2017-08-30 23:00:00",                      "2017-08-31 23:00:00", "2017-09-01 23:00:00", "2017-09-02 23:00:00", "2017-09-03 23:00:00"]    }    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_result_equals(expected, rt)
@pytest.mark.p0def test_huawei_spot_point_d1_mix():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|VAV_J_54_18_Room_Temp","@72|VAV_J_54_14_Air_Flow"],        "timeStart":"2017-08-01 23:00:00",        "timeEnd":"2017-09-03 23:00:00",        "timeFormat":"d1"    })    expected = {        "list":            [                {                    "data": [27.31, 26.99, 27.41, 26.87, 26.77, 24.34, 26.72, 27.06, 27.04, 27.61, 27.36, 27.04, 26.25,                             27.14, 27.36, 26.99, 26.74, 26.72, 26.82, 27.36, 26.1, 26.87, 27.21, 27.66, 27.31, 26.96,                             26.82, 27.76, 27.11, 26.67, 26.79, 26.45, 26.99, 26.18],                    "dsItemId": "@72|VAV_J_54_18_Room_Temp"                },                {                    "data": [51.55, 51.38, 52.19, 49.4, 50.67, 63.84, 51.07, 50.76, 50.27, 50.72, 50.45, 50.13, 49.01, 49.54,                             50.44, 50.39, 49.38, 50.3, 50.43, 51.44, 49.62, 49.51, 50.29, 50.49, 50.43, 50.34, 49.69, 50.92,                             50.41, 50.27, 49.71, 49.57, 50.46, 49.27],                    "dsItemId": "@72|VAV_J_54_14_Air_Flow"                }            ],        "timeShaft": ["2017-08-01 23:00:00", "2017-08-02 23:00:00", "2017-08-03 23:00:00", "2017-08-04 23:00:00", "2017-08-05 23:00:00",                      "2017-08-06 23:00:00", "2017-08-07 23:00:00", "2017-08-08 23:00:00", "2017-08-09 23:00:00", "2017-08-10 23:00:00",                      "2017-08-11 23:00:00", "2017-08-12 23:00:00", "2017-08-13 23:00:00", "2017-08-14 23:00:00", "2017-08-15 23:00:00",                      "2017-08-16 23:00:00", "2017-08-17 23:00:00", "2017-08-18 23:00:00", "2017-08-19 23:00:00", "2017-08-20 23:00:00",                      "2017-08-21 23:00:00", "2017-08-22 23:00:00", "2017-08-23 23:00:00", "2017-08-24 23:00:00", "2017-08-25 23:00:00",                      "2017-08-26 23:00:00", "2017-08-27 23:00:00", "2017-08-28 23:00:00", "2017-08-29 23:00:00", "2017-08-30 23:00:00",                      "2017-08-31 23:00:00", "2017-09-01 23:00:00", "2017-09-02 23:00:00", "2017-09-03 23:00:00"]    }    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_result_equals(expected, rt)
@pytest.mark.p0def test_huawei_virtual_point_d1_mix():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|VAV_G_21_05_DTUOffStatus","@72|Water_Pump_SP_KPITotalScore"],        "timeStart":"2017-08-01 23:00:00",        "timeEnd":"2017-09-03 23:00:00",        "timeFormat":"d1"    })    expected ={        "list":            [                {                    "data": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],                    "dsItemId": "@72|VAV_G_21_05_DTUOffStatus"                },                {                    "data": [100, 100, 99.77, 99.83, 99.86, 99.89, 99.9, 99.83, 99.85, 99.86, 99.81, 99.83, 99.84, 99.85, 99.77,                             99.78, 99.8, 99.81, 99.75, 99.75, 99.77, 99.78, 99.79, 99.79, 99.79, 99.79, 99.79, 99.79, 99.83,                             99.79, 99.79, 99.78, 99.79, 99.79], "dsItemId": "@72|Water_Pump_SP_KPITotalScore"                }            ],        "timeShaft": ["2017-08-01 23:00:00", "2017-08-02 23:00:00", "2017-08-03 23:00:00", "2017-08-04 23:00:00", "2017-08-05 23:00:00",                      "2017-08-06 23:00:00", "2017-08-07 23:00:00", "2017-08-08 23:00:00", "2017-08-09 23:00:00", "2017-08-10 23:00:00",                      "2017-08-11 23:00:00", "2017-08-12 23:00:00", "2017-08-13 23:00:00", "2017-08-14 23:00:00", "2017-08-15 23:00:00",                      "2017-08-16 23:00:00", "2017-08-17 23:00:00", "2017-08-18 23:00:00", "2017-08-19 23:00:00", "2017-08-20 23:00:00",                      "2017-08-21 23:00:00", "2017-08-22 23:00:00", "2017-08-23 23:00:00", "2017-08-24 23:00:00", "2017-08-25 23:00:00",                      "2017-08-26 23:00:00", "2017-08-27 23:00:00", "2017-08-28 23:00:00", "2017-08-29 23:00:00", "2017-08-30 23:00:00",                      "2017-08-31 23:00:00", "2017-09-01 23:00:00", "2017-09-02 23:00:00", "2017-09-03 23:00:00"]    }    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_result_equals(expected, rt)
@pytest.mark.p0def test_huawei_calculate_point_d1_mix():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|VAV_F_12_17_RoomTemp_realdr","@72|HVAC_KPITotalScore"],        "timeStart":"2017-08-01 23:00:00",        "timeEnd":"2017-09-03 23:00:00",        "timeFormat":"d1"    })    expected = {        "list":            [                {                    "data":                        [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,                         100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100],                    "dsItemId": "@72|VAV_F_12_17_RoomTemp_realdr"                },                {                    "data": [68.75, 75, 68.75, 68.75, 75, 75, 81.25, 81.25, 81.25, 81.25, 81.25, 81.25, 81.25, 81.25, 81.25,                             81.25, 81.25, 81.25, 81.25, 81.25, 81.25, 81.25, 81.25, 81.25, 81.25, 87.5, 87.5, 87.5, 87.5, 87.5, 87.5, 75, 68.75, 62.5],                    "dsItemId": "@72|HVAC_KPITotalScore"                }            ],        "timeShaft": ["2017-08-01 23:00:00", "2017-08-02 23:00:00", "2017-08-03 23:00:00", "2017-08-04 23:00:00", "2017-08-05 23:00:00",                      "2017-08-06 23:00:00", "2017-08-07 23:00:00", "2017-08-08 23:00:00", "2017-08-09 23:00:00", "2017-08-10 23:00:00",                      "2017-08-11 23:00:00", "2017-08-12 23:00:00", "2017-08-13 23:00:00", "2017-08-14 23:00:00", "2017-08-15 23:00:00",                      "2017-08-16 23:00:00", "2017-08-17 23:00:00", "2017-08-18 23:00:00", "2017-08-19 23:00:00", "2017-08-20 23:00:00",                      "2017-08-21 23:00:00", "2017-08-22 23:00:00", "2017-08-23 23:00:00", "2017-08-24 23:00:00", "2017-08-25 23:00:00",                      "2017-08-26 23:00:00", "2017-08-27 23:00:00", "2017-08-28 23:00:00", "2017-08-29 23:00:00", "2017-08-30 23:00:00",                      "2017-08-31 23:00:00", "2017-09-01 23:00:00", "2017-09-02 23:00:00", "2017-09-03 23:00:00"]    }    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_result_equals(expected, rt)
@pytest.mark.p0def test_huawei_original_point_M1():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|A11AHU_A_11_TempSaIn","@72|A14AHU_A_24_VFSA"],        "timeStart":"2017-08-03 23:00:00",        "timeEnd":"2017-09-03 23:00:00",        "timeFormat":"M1"    })    expected = {        "list":            [                {                    "data": [25.58, 25.58],                    "dsItemId": "@72|A11AHU_A_11_TempSaIn"                },                {                    "data": [1, 1], "dsItemId": "@72|A14AHU_A_24_VFSA"                }            ],        "timeShaft": ["2017-08-01 00:00:00", "2017-09-01 00:00:00"]    }    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_result_equals(expected, rt)
@pytest.mark.p0def test_huawei_spot_point_M1():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|VAV_J_54_18_Room_Temp","@72|VAV_J_54_14_Air_Flow"],        "timeStart":"2017-08-03 23:00:00",        "timeEnd":"2017-09-03 23:00:00",        "timeFormat":"M1"    })    expected = {        "list":            [                {                    "data": [27.46, 26.89],                    "dsItemId": "@72|VAV_J_54_18_Room_Temp"                },                {                    "data": [51.58, 49.88], "dsItemId": "@72|VAV_J_54_14_Air_Flow"                }            ],        "timeShaft": ["2017-08-01 00:00:00", "2017-09-01 00:00:00"]    }    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_result_equals(expected, rt)
@pytest.mark.p0def test_huawei_virtual_point_M1():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|VAV_G_21_05_DTUOffStatus","@72|Water_Pump_SP_KPITotalScore"],        "timeStart":"2017-08-03 23:00:00",        "timeEnd":"2017-09-03 23:00:00",        "timeFormat":"M1"    })    expected ={        "list":            [                {                    "data": [0, 0],                    "dsItemId": "@72|VAV_G_21_05_DTUOffStatus"                },                {                    "data": [99.91, 99.79],                    "dsItemId": "@72|Water_Pump_SP_KPITotalScore"                }            ],        "timeShaft": ["2017-08-01 00:00:00", "2017-09-01 00:00:00"]    }    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_result_equals(expected, rt)
@pytest.mark.p0def test_huawei_calculate_point_M1():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|VAV_F_12_17_RoomTemp_realdr","@72|HVAC_KPITotalScore"],        "timeStart":"2017-08-03 23:00:00",        "timeEnd":"2017-09-03 23:00:00",        "timeFormat":"M1"    })    expected = {        "list":            [                {                    "data": [100, 100],                    "dsItemId": "@72|VAV_F_12_17_RoomTemp_realdr"                },                {                    "data": [68.75, 75],                    "dsItemId": "@72|HVAC_KPITotalScore"                }            ],        "timeShaft": ["2017-08-01 00:00:00", "2017-09-01 00:00:00"]    }    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_result_equals(expected, rt)
@pytest.mark.p0def test_huawei_original_point_M1_mix():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|A11AHU_A_11_TempSaIn","@72|A14AHU_A_24_VFSA"],        "timeStart":"2017-06-03 23:00:00",        "timeEnd":"2017-09-03 23:00:00",        "timeFormat":"M1"    })    expected = {        "list":            [                {                    "data": [15.37, 15.37, 25.58, 25.58],                    "dsItemId": "@72|A11AHU_A_11_TempSaIn"                },                {                    "data": [1, 1, 1, 1], "dsItemId": "@72|A14AHU_A_24_VFSA"                }            ],        "timeShaft": ["2017-06-01 00:00:00", "2017-07-01 00:00:00", "2017-08-01 00:00:00", "2017-09-01 00:00:00"]    }    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_result_equals(expected, rt)
@pytest.mark.p0def test_huawei_spot_point_M1_mix():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|VAV_J_54_18_Room_Temp","@72|VAV_J_54_14_Air_Flow"],        "timeStart":"2017-06-03 23:00:00",        "timeEnd":"2017-09-03 23:00:00",        "timeFormat":"M1"    })    expected = {        "list":            [                {                    "data": [26.72, 26.72, 27.46, 26.89],                    "dsItemId": "@72|VAV_J_54_18_Room_Temp"                },                {                    "data": [49.12, 49.12, 51.58, 49.88],                    "dsItemId": "@72|VAV_J_54_14_Air_Flow"                }            ],        "timeShaft": ["2017-06-01 00:00:00", "2017-07-01 00:00:00", "2017-08-01 00:00:00", "2017-09-01 00:00:00"]    }    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_result_equals(expected, rt)
@pytest.mark.p0def test_huawei_virtual_point_M1_mix():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|VAV_G_21_05_DTUOffStatus","@72|Water_Pump_SP_KPITotalScore"],        "timeStart":"2017-06-03 23:00:00",        "timeEnd":"2017-09-03 23:00:00",        "timeFormat":"M1"    })    expected ={        "list":            [                {                    "data": [0, 0, 0, 0],                    "dsItemId": "@72|VAV_G_21_05_DTUOffStatus"                },                {                    "data": [99.88, 99.88, 99.91, 99.79],                    "dsItemId": "@72|Water_Pump_SP_KPITotalScore"                }            ],        "timeShaft": ["2017-06-01 00:00:00", "2017-07-01 00:00:00", "2017-08-01 00:00:00", "2017-09-01 00:00:00"]    }    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_result_equals(expected, rt)
@pytest.mark.p0def test_huawei_calculate_point_M1():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|VAV_F_12_17_RoomTemp_realdr","@72|HVAC_KPITotalScore"],        "timeStart":"2017-06-03 23:00:00",        "timeEnd":"2017-09-03 23:00:00",        "timeFormat":"M1"    })    expected = {        "list":            [                {                    "data": [100, 100, 100, 100],                    "dsItemId": "@72|VAV_F_12_17_RoomTemp_realdr"                 },                {                    "data": [81.25, 81.25, 68.75, 75],                    "dsItemId": "@72|HVAC_KPITotalScore"                }            ],        "timeShaft": ["2017-06-01 00:00:00", "2017-07-01 00:00:00", "2017-08-01 00:00:00", "2017-09-01 00:00:00"]    }    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_result_equals(expected, rt)
@pytest.mark.p0def test_huawei_four_different_points_m5():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|VAV_F_12_17_RoomTemp_realdr","@72|VAV_G_21_05_DTUOffStatus","@72|VAV_J_54_18_Room_Temp","@72|A11AHU_A_11_TempSaIn"],        "timeStart":"2017-09-01 00:00:00",        "timeEnd":"2017-09-01 00:05:00",        "timeFormat":"m5"    })    expected ={        "list":            [                {                    "data": [100, 100],                    "dsItemId": "@72|VAV_F_12_17_RoomTemp_realdr"                },                {                    "data": [0, 0],                    "dsItemId": "@72|VAV_G_21_05_DTUOffStatus"                },                {                    "data": [26.89, 26.92],                    "dsItemId": "@72|VAV_J_54_18_Room_Temp"                },                {                    "data": [25.58, 25.58],                    "dsItemId": "@72|A11AHU_A_11_TempSaIn"                }            ],        "timeShaft": ["2017-09-01 00:00:00", "2017-09-01 00:05:00"]    }    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_result_equals(expected, rt)
@pytest.mark.p0def test_huawei_four_different_points_m5_mix():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|VAV_F_12_17_RoomTemp_realdr","@72|VAV_G_21_05_DTUOffStatus","@72|VAV_J_54_18_Room_Temp","@72|A11AHU_A_11_TempSaIn"],        "timeStart":"2017-09-01 00:00:00",        "timeEnd":"2017-09-01 00:30:00",        "timeFormat":"m5"    })    expected ={        "list":            [                {                    "data": [100, 100, 100, 100, 100, 100, 100],                    "dsItemId": "@72|VAV_F_12_17_RoomTemp_realdr"                },                {                    "data": [0, 0, 0, 0, 0, 0, 0],                    "dsItemId": "@72|VAV_G_21_05_DTUOffStatus"                },                {                    "data": [26.89, 26.92, 26.92, 26.92, 26.92, 26.94, 26.94],                    "dsItemId": "@72|VAV_J_54_18_Room_Temp"                },                {                    "data": [25.58, 25.58, 25.47, 25.47, 25.47, 25.47, 25.47],                    "dsItemId": "@72|A11AHU_A_11_TempSaIn"                }            ],        "timeShaft": ["2017-09-01 00:00:00", "2017-09-01 00:05:00", "2017-09-01 00:10:00", "2017-09-01 00:15:00",                      "2017-09-01 00:20:00", "2017-09-01 00:25:00", "2017-09-01 00:30:00"]    }    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_result_equals(expected, rt)
@pytest.mark.p0def test_huawei_four_different_points_h1():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|VAV_F_12_17_RoomTemp_realdr","@72|VAV_G_21_05_DTUOffStatus","@72|VAV_J_54_18_Room_Temp","@72|A11AHU_A_11_TempSaIn"],        "timeStart":"2017-09-01 00:00:00",        "timeEnd":"2017-09-01 01:00:00",        "timeFormat":"h1"    })    expected ={        "list":            [                {                    "data": [100, 100],                    "dsItemId": "@72|VAV_F_12_17_RoomTemp_realdr"                },                {                    "data": [0, 0], "dsItemId": "@72|VAV_G_21_05_DTUOffStatus"                },                {                    "data": [26.89, 26.99], "dsItemId": "@72|VAV_J_54_18_Room_Temp"                },                {                    "data": [25.58, 25.35],                    "dsItemId": "@72|A11AHU_A_11_TempSaIn"                }            ],        "timeShaft": ["2017-09-01 00:00:00", "2017-09-01 01:00:00"]    }    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_result_equals(expected, rt)
@pytest.mark.p0def test_huawei_four_different_points_h1_mix():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|VAV_F_12_17_RoomTemp_realdr","@72|VAV_G_21_05_DTUOffStatus","@72|VAV_J_54_18_Room_Temp","@72|A11AHU_A_11_TempSaIn"],        "timeStart":"2017-09-01 00:00:00",        "timeEnd":"2017-09-02 00:00:00",        "timeFormat":"h1"    })    expected ={        "list":            [                {                    "data": [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,                             100, 100, 100, 100, 100, 100, 100, 100, 100],                    "dsItemId": "@72|VAV_F_12_17_RoomTemp_realdr"                },                {                    "data": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],                    "dsItemId": "@72|VAV_G_21_05_DTUOffStatus"                },                {                    "data": [26.89, 26.99, 26.99, 27.01, 27.06, 27.09, 27.11, 27.14, 26.55, 26.18, 26.15,                             26.18, 26.1, 26.03, 25.83, 25.96, 26.03, 26.05, 26.01, 25.78, 25.59, 25.93, 26.28, 26.45, 26.55],                    "dsItemId": "@72|VAV_J_54_18_Room_Temp"                },                {                    "data": [25.58, 25.35, 25.01, 24.89, 24.89, 25.01, 24.89, 24.78, 22.77, 22.77, 23.21, 22.88,                             23.1, 23.1, 23.21, 22.88, 23.1, 23.1, 23.1, 22.99, 23.1, 23.55, 23.44, 23.33, 23.33],                    "dsItemId": "@72|A11AHU_A_11_TempSaIn"                }            ],        "timeShaft": ["2017-09-01 00:00:00", "2017-09-01 01:00:00", "2017-09-01 02:00:00", "2017-09-01 03:00:00", "2017-09-01 04:00:00",                      "2017-09-01 05:00:00", "2017-09-01 06:00:00", "2017-09-01 07:00:00", "2017-09-01 08:00:00", "2017-09-01 09:00:00",                      "2017-09-01 10:00:00", "2017-09-01 11:00:00", "2017-09-01 12:00:00", "2017-09-01 13:00:00", "2017-09-01 14:00:00",                      "2017-09-01 15:00:00", "2017-09-01 16:00:00", "2017-09-01 17:00:00", "2017-09-01 18:00:00", "2017-09-01 19:00:00",                      "2017-09-01 20:00:00", "2017-09-01 21:00:00", "2017-09-01 22:00:00", "2017-09-01 23:00:00", "2017-09-02 00:00:00"]    }    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_result_equals(expected, rt)
@pytest.mark.p0def test_huawei_four_different_points_d1():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|VAV_F_12_17_RoomTemp_realdr","@72|VAV_G_21_05_DTUOffStatus","@72|VAV_J_54_18_Room_Temp","@72|A11AHU_A_11_TempSaIn"],        "timeStart":"2017-09-01 00:00:00",        "timeEnd":"2017-09-02 00:00:00",        "timeFormat":"d1"    })    expected ={        "list":            [                {                    "data": [100, 100],                    "dsItemId": "@72|VAV_F_12_17_RoomTemp_realdr"                },                {                    "data": [0, 0],                    "dsItemId": "@72|VAV_G_21_05_DTUOffStatus"                },                {                    "data": [26.89, 26.55],                    "dsItemId": "@72|VAV_J_54_18_Room_Temp"                },                {                    "data": [25.58, 23.33], "dsItemId": "@72|A11AHU_A_11_TempSaIn"                }            ],        "timeShaft": ["2017-09-01 00:00:00", "2017-09-02 00:00:00"]    }    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_result_equals(expected, rt)
@pytest.mark.p0def test_huawei_four_different_points_d1_mix():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|VAV_F_12_17_RoomTemp_realdr","@72|VAV_G_21_05_DTUOffStatus","@72|VAV_J_54_18_Room_Temp","@72|A11AHU_A_11_TempSaIn"],        "timeStart":"2017-09-01 00:00:00",        "timeEnd":"2017-10-04 00:00:00",        "timeFormat":"d1"    })    expected ={        "list":            [                {                    "data": [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,                             100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100],                    "dsItemId": "@72|VAV_F_12_17_RoomTemp_realdr"                },                {                    "data": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],                    "dsItemId": "@72|VAV_G_21_05_DTUOffStatus"                },                {                    "data": [26.89, 26.55, 27.04, 26.3, 27.06, 27.38, 27.41, 26.99, 26.69, 26.67, 27.04, 26.69, 26.6,                             26.4, 26.52, 26.23, 26.13, 26.6, 26.69, 26.79, 26.25, 26.15, 25.96, 25.69, 25.88, 25.61, 25.98, 25.78, 25.59,                             25.2, 25.05, 25.05, 25.78, 24.17],                    "dsItemId": "@72|VAV_J_54_18_Room_Temp"                },                {                    "data": [25.58, 23.33, 26.04, 22.99, 23.66, 23.77, 25.12, 25.81, 23.77, 24.67, 24.78, 27.16, 23.66, 24.33, 27.16,                             25.58, 26.94, 22.99, 22.65, 22.21, 21.98, 21.09, 21.42, 21.76, 20.86, 22.77, 23.66, 24.22, 21.54, 21.42, 20.64, 20.64, 24.67, 24.22],                    "dsItemId": "@72|A11AHU_A_11_TempSaIn"                }            ],        "timeShaft": ["2017-09-01 00:00:00", "2017-09-02 00:00:00", "2017-09-03 00:00:00", "2017-09-04 00:00:00", "2017-09-05 00:00:00", "2017-09-06 00:00:00",                      "2017-09-07 00:00:00", "2017-09-08 00:00:00", "2017-09-09 00:00:00", "2017-09-10 00:00:00", "2017-09-11 00:00:00", "2017-09-12 00:00:00",                      "2017-09-13 00:00:00", "2017-09-14 00:00:00", "2017-09-15 00:00:00", "2017-09-16 00:00:00", "2017-09-17 00:00:00", "2017-09-18 00:00:00",                      "2017-09-19 00:00:00", "2017-09-20 00:00:00", "2017-09-21 00:00:00", "2017-09-22 00:00:00", "2017-09-23 00:00:00", "2017-09-24 00:00:00",                      "2017-09-25 00:00:00", "2017-09-26 00:00:00", "2017-09-27 00:00:00", "2017-09-28 00:00:00", "2017-09-29 00:00:00", "2017-09-30 00:00:00",                      "2017-10-01 00:00:00", "2017-10-02 00:00:00", "2017-10-03 00:00:00", "2017-10-04 00:00:00"]    }    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_result_equals(expected, rt)
@pytest.mark.p0def test_huawei_four_different_points_M1():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|VAV_F_12_17_RoomTemp_realdr","@72|VAV_G_21_05_DTUOffStatus","@72|VAV_J_54_18_Room_Temp","@72|A11AHU_A_11_TempSaIn"],        "timeStart":"2017-09-01 00:00:00",        "timeEnd":"2017-10-01 00:00:00",        "timeFormat":"M1"    })    expected ={        "list":            [                {                    "data": [100, 100],                    "dsItemId": "@72|VAV_F_12_17_RoomTemp_realdr"                },                {                    "data": [0, 0],                    "dsItemId": "@72|VAV_G_21_05_DTUOffStatus"                },                {                    "data": [26.89, 25.05],                    "dsItemId": "@72|VAV_J_54_18_Room_Temp"                },                {                    "data": [25.58, 20.64],                    "dsItemId": "@72|A11AHU_A_11_TempSaIn"                }            ],        "timeShaft": ["2017-09-01 00:00:00", "2017-10-01 00:00:00"]    }    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_result_equals(expected, rt)
@pytest.mark.p0def test_huawei_four_different_points_M1_mix():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|VAV_F_12_17_RoomTemp_realdr","@72|VAV_G_21_05_DTUOffStatus","@72|VAV_J_54_18_Room_Temp","@72|A11AHU_A_11_TempSaIn"],        "timeStart":"2017-07-01 00:00:00",        "timeEnd":"2017-10-01 00:00:00",        "timeFormat":"M1"    })    expected ={        "list":            [                {                    "data": [100, 100, 100, 100],                    "dsItemId": "@72|VAV_F_12_17_RoomTemp_realdr"                },                {                    "data": [0, 0, 0, 0],                    "dsItemId": "@72|VAV_G_21_05_DTUOffStatus"                },                {                    "data": [26.72, 27.46, 26.89, 25.05],                    "dsItemId": "@72|VAV_J_54_18_Room_Temp"                },                {                    "data": [15.37, 25.58, 25.58, 20.64],                    "dsItemId": "@72|A11AHU_A_11_TempSaIn"                }            ],        "timeShaft": ["2017-07-01 00:00:00", "2017-08-01 00:00:00", "2017-09-01 00:00:00", "2017-10-01 00:00:00"]    }    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_result_equals(expected, rt)# check the not existed projectId
@pytest.mark.p0def test_huawei_d1_mix_wrongId():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@456687782|VAV_F_12_17_RoomTemp_realdr"],        "timeStart":"2017-09-01 00:00:00",        "timeEnd":"2017-10-02 00:00:00",        "timeFormat":"d1"    })    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_not_existed(rt)# check the timeStart is wrong
@pytest.mark.p0def test_huawei_d1_mix_wrongTS():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|VAV_F_12_17_RoomTemp_realdr"],        "timeStart":"2017-09-01 00:00",        "timeEnd":"2017-10-02 00:00:00",        "timeFormat":"d1"    })    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_invaild_time_string(rt)
@pytest.mark.p0def test_huawei_m5_new_tSFloat():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|VAV_F_12_17_RoomTemp_realdr"],        "timeStart":"123.568",        "timeEnd":"2017-10-02 00:00:00",        "timeFormat":"d1"    })    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_invaild_time_string(rt)# check the timeEnd is wrong
@pytest.mark.p0def test_huawei_d1_mix_wrongTE():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|VAV_F_12_17_RoomTemp_realdr"],        "timeStart":"2017-09-01 00:00:00",        "timeEnd":"2017-10-02 00:00",        "timeFormat":"d1"    })    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_invaild_time_string(rt)
@pytest.mark.p0def test_huawei_m5_new_tEFloat():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|VAV_F_12_17_RoomTemp_realdr"],        "timeStart":"2017-10-02 00:00:00",        "timeEnd":"123.568",        "timeFormat":"d1"    })    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_invaild_time_string(rt)# check the timeEnd is earier than timeSatrt
@pytest.mark.p0def test_huawei_d1_mix_tEEailier():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|VAV_F_12_17_RoomTemp_realdr"],        "timeStart":"2017-10-02 00:00:00",        "timeEnd":"2017-09-01 00:00:00",        "timeFormat":"d1"    })    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_error(TestSpecific.AnalysisStartWorkspaceDataGenHistogram.START_TIME_GT_END_TIME, rt)# check both timeSart and timeEnd are wrong
@pytest.mark.p0def test_huawei_d1_mix_wrongTBoth():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|VAV_F_12_17_RoomTemp_realdr"],        "timeStart":"2017-09-01 00:00",        "timeEnd":"2017-10-02 00:00",        "timeFormat":"d1"    })    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_invaild_time_string(rt)# check both timeSart and timeEnd are float second
@pytest.mark.p0def test_huawei_m5_new_wrongTFloat():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|VAV_F_12_17_RoomTemp_realdr"],        "timeStart":"4563.12568",        "timeEnd":"7899.456612",        "timeFormat":"d1"    })    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_invaild_time_string(rt)# check the timeFormat of m5 out of range
@pytest.mark.p0def test_huawei_m5_mix_outTimeRange():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|VAV_F_12_17_RoomTemp_realdr"],        "timeStart":"2017-02-01 00:00:00",        "timeEnd":"2017-10-02 00:00:00",        "timeFormat":"m5"    })    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_error(                                                 TestSpecific.AnalysisStartWorkspaceDataGenHistogram.M5_DAYS_RANGE, rt)# check the timeFormat of h1 out of range
@pytest.mark.p0def test_huawei_h1_mix_outTimeRange():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|VAV_F_12_17_RoomTemp_realdr"],        "timeStart":"2017-02-01 00:00:00",        "timeEnd":"2017-10-02 00:00:00",        "timeFormat":"h1"    })    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_error(TestSpecific.AnalysisStartWorkspaceDataGenHistogram.H1_DAYS_RANGE, rt)# check the timeFormat of d1 out of range
@pytest.mark.p0def test_huawei_d1_mix_outTimeRange():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|VAV_F_12_17_RoomTemp_realdr"],        "timeStart":"2015-02-01 00:00:00",        "timeEnd":"2017-10-02 00:00:00",        "timeFormat":"d1"    })    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_error(                                                 TestSpecific.AnalysisStartWorkspaceDataGenHistogram.D1_DAYS_RANGE, rt)# check the timeFormat of m5 out of project start time
@pytest.mark.p0def test_huawei_m5_mix_outTimeRangeLong():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|VAV_F_12_17_RoomTemp_realdr"],        "timeStart":"2013-02-01 00:00:00",        "timeEnd":"2017-10-02 00:00:00",        "timeFormat":"m5"    })    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_error(                                                 TestSpecific.AnalysisStartWorkspaceDataGenHistogram.M5_DAYS_RANGE, rt)# check the timeFormat of h1 out of project start time
@pytest.mark.p0def test_huawei_h1_mix_outTimeRangeLong():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|VAV_F_12_17_RoomTemp_realdr"],        "timeStart":"2013-02-01 00:00:00",        "timeEnd":"2017-10-02 00:00:00",        "timeFormat":"h1"    })    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_error(TestSpecific.AnalysisStartWorkspaceDataGenHistogram.H1_DAYS_RANGE, rt)# check the timeFormat of d1 out of project start time
@pytest.mark.p0def test_huawei_d1_mix_outTimeRangeLong():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|VAV_F_12_17_RoomTemp_realdr"],        "timeStart":"2013-02-01 00:00:00",        "timeEnd":"2017-10-02 00:00:00",        "timeFormat":"d1"    })    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_error(                                                 TestSpecific.AnalysisStartWorkspaceDataGenHistogram.D1_DAYS_RANGE, rt)# check the timeFormat is wrong
@pytest.mark.p0def test_huawei_d1_mix_wrongTimeFormat():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|VAV_F_12_17_RoomTemp_realdr"],        "timeStart":"2017-09-01 00:00:00",        "timeEnd":"2017-10-02 00:00:00",        "timeFormat":"D1"    })    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_error(TestSpecific.AnalysisStartWorkspaceDataGenHistogram.TIME_FORMAT, rt)# check the timeFormat is normal string
@pytest.mark.p0def test_huawei_d1_mix_wrongTimeFormat_normalStr():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|VAV_F_12_17_RoomTemp_realdr"],        "timeStart":"2017-09-01 00:00:00",        "timeEnd":"2017-10-02 00:00:00",        "timeFormat":"ERT"    })    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_error(TestSpecific.AnalysisStartWorkspaceDataGenHistogram.TIME_FORMAT, rt)# check the dsItemIds is empty list
@pytest.mark.p0def test_huawei_d1_mix_emptyDsItemIdst():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":[],        "timeStart":"2017-09-01 00:00:00",        "timeEnd":"2017-10-02 00:00:00",        "timeFormat":"d1"    })    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_no_history_data(rt)# check the pointList is blank
@pytest.mark.p0def test_huawei_d1_mix_blankDsItemIds():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":[ ],        "timeStart":"2017-09-01 00:00:00",        "timeEnd":"2017-10-02 00:00:00",        "timeFormat":"d1"    })    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_no_history_data(rt)
@pytest.mark.p0def test_huawei_d1_mix_blankStringDsItemIds():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":[" "],        "timeStart":"2017-09-01 00:00:00",        "timeEnd":"2017-10-02 00:00:00",        "timeFormat":"d1"    })    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_not_existed(rt)# check the pointList is wrong
@pytest.mark.p0def test_huawei_d1_mix_wrongDsItemIds():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":['rtyyrrrrr'],        "timeStart":"2017-09-01 00:00:00",        "timeEnd":"2017-10-02 00:00:00",        "timeFormat":"d1"    })    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_not_existed(rt)
@pytest.mark.p0def test_huawei_d1_mix_specialCharactersDsItemIds():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["%$#^"],        "timeStart":"2017-09-01 00:00:00",        "timeEnd":"2017-10-02 00:00:00",        "timeFormat":"d1"    })    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_not_existed(rt)
@pytest.mark.p0def test_huawei_d1_mix_wrongPoint():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|yyy3445"],        "timeStart":"2017-09-01 00:00:00",        "timeEnd":"2017-10-02 00:00:00",        "timeFormat":"d1"    })    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_not_existed(rt)
@pytest.mark.p0def test_huawei_d1_mix_wrongBlankPoint():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72| "],        "timeStart":"2017-09-01 00:00:00",        "timeEnd":"2017-10-02 00:00:00",        "timeFormat":"d1"    })    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_not_existed(rt)#backend matter is fixing# def test_huawei_d1_mix_wrongNullPoint():#     rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({#         "dsItemIds":["@72|"],#         "timeStart":"2017-09-01 00:00:00",#         "timeEnd":"2017-10-02 00:00:00",#         "timeFormat":"d1"#     })#     TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_not_existed(rt)
@pytest.mark.p0def test_huawei_d1_mix_specialCharactersPoint():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":["@72|%$#^"],        "timeStart":"2017-09-01 00:00:00",        "timeEnd":"2017-10-02 00:00:00",        "timeFormat":"d1"    })    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_not_existed(rt)
@pytest.mark.p0def test_huawei_allWrong():    rt = TestCommon.AnalysisStartWorkspaceDataGenHistogram.run({        "dsItemIds":[],        "timeStart":"2017-09-01 00:00",        "timeEnd":"2017-10-02 00:00",        "timeFormat":"eee"    })    TestCommon.AnalysisStartWorkspaceDataGenHistogram.assert_invaild_time_string(rt)