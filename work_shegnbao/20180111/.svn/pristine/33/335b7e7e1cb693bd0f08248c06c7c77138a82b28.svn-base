{% extends "wxTemplate.html" %}
{% block title %}我的关注{% endblock %}
{% block style %}
    <style type="text/css">
        .mt-10{
            margin-top: 10px
        }
        .hide-page{
            display: none;
        }
    </style>
{% endblock %}
{% block content %}
<div class="container mt-10">
    <div class="row split-page" id="0">
        <div class="col-xs-12">
            <div class="thumbnail">
              <canvas id="myChart-0"></canvas>
              <p style='display:none' id='data-0' chart-type='line'>
                    {
                        "labels" : ["January","February","March","April","May","June","July"],
                        "datasets" : [
                            {
                                "fillColor" : "rgba(220,220,220,0.5)",
                                "strokeColor" : "rgba(220,220,220,1)",
                                "pointColor" : "rgba(220,220,220,1)",
                                "pointStrokeColor" : "#fff",
                                "data" : [65,59,90,81,56,55,40]
                            },
                            {
                                "fillColor" : "rgba(151,187,205,0.5)",
                                "strokeColor" : "rgba(151,187,205,1)",
                                "pointColor" : "rgba(151,187,205,1)",
                                "pointStrokeColor" : "#fff",
                                "data" : [28,48,40,19,96,27,100]
                            }
                        ]
                    }
              </p>
              <div class="caption">
                <h3>温度曲线图</h3>
                <p>ras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.</p>
              </div>
            </div>
        </div>
    </div>
    <div class="row split-page hide-page" id="1">
        <div class="col-xs-12">
            <div class="thumbnail">
              <canvas id="myChart-1"></canvas>
              <p style='display:none' id='data-1' chart-type='line'>
                    {
                        "labels" : ["test1","test2","test3","test4","test5","test6","test7"],
                        "datasets" : [
                            {
                                "fillColor" : "rgba(220,220,220,0.5)",
                                "strokeColor" : "rgba(220,220,220,1)",
                                "pointColor" : "rgba(220,220,220,1)",
                                "pointStrokeColor" : "#fff",
                                "data" : [65,59,90,81,56,55,40]
                            }
                        ]
                    }
              </p>
              <div class="caption">
                <h3>湿度曲线图</h3>
                <p>湿度曲线图湿度曲线图湿度曲线图湿度曲线图湿度曲线图湿度曲线图湿度曲线图湿度曲线图.</p>
              </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block script %}
<script src="/static/scripts/lib/Chart.min.js"></script>
<script type="text/javascript">
            var startX = 0, startY = 0, endX = 0, endY = 0;  
            var currentPage = 0, totalPage = document.getElementsByClassName('split-page').length;
            var change = 0;
            function touchStartFunc(evt) {  
                if(evt.touches.length > 1){
                    return true;
                }
                try  
                {  
                    //evt.preventDefault(); //阻止触摸时浏览器的缩放、滚动条滚动等  
                    var touch = evt.touches[0];
                    var x = Number(touch.pageX);
                    var y = Number(touch.pageY);
                    startX = x;  
                    startY = y;  
                }  
                catch (e) { }
            }  

            function touchMoveFunc(evt) {  
                if(evt.touches.length > 1){
                    return true;
                }
                try  
                {  
                    //evt.preventDefault(); //阻止触摸时浏览器的缩放、滚动条滚动等  
                    var touch = evt.touches[0];
                    var x = Number(touch.pageX);
                    var y = Number(touch.pageY);
                    if (x - startX < 0 && (x - startX < -50)) {  
                        change = 1;
                        
                    }else if(x - startX > 0 && (x - startX > 50)){
                        change = -1;
                    } 
                }  
                catch (e) { }  
            }  
  
            function touchEndFunc(evt) {  
                if(evt.touches.length > 1){
                    return true;
                }
                try {  
                    //evt.preventDefault(); //阻止触摸时浏览器的缩放、滚动条滚动等  
                    if(change === 1){
                        if(currentPage < totalPage-1){
                            var ele = document.getElementById(''+currentPage);
                            ele.style.display = 'none';
                            currentPage += 1;
                            var next_ele = document.getElementById(''+currentPage);
                            next_ele.style.display = 'block';
                            renderGraph(currentPage);
                        }

                    }else if(change === -1){
                        if(currentPage > 0){
                            var ele = document.getElementById(''+currentPage);
                            ele.style.display = 'none';
                            currentPage -= 1;
                            var next_ele = document.getElementById(''+currentPage);
                            next_ele.style.display = 'block';
                            renderGraph(currentPage);
                        }
                    }
                    change = 0;

                }  
                catch (e) {}  
            }  
   
            function bindEvent() {  
                document.addEventListener('touchstart', touchStartFunc, false);  
                document.addEventListener('touchmove', touchMoveFunc, false);  
                document.addEventListener('touchend', touchEndFunc, false);  
            }   
            bindEvent();
    </script>  

<script>
    function buildChart(type, data, ctx){
        switch(type){
            case 'line': return new Chart(ctx).Line(data);
        }
    }
    function renderGraph(id){
        var canvasId = "myChart-" + id;
        var dataId = "data-" +id;
        var canvas = document.getElementById(canvasId);
        if(!canvas){
            return;
        }
        var rendered = canvas.getAttribute('rendered');
        if(!rendered){
            canvas.width = canvas.parentElement.clientWidth;
            canvas.height = canvas.parentElement.clientHeight;
            var ctx = canvas.getContext("2d");
            var data_ele = document.getElementById(dataId);
            data = data_ele.innerText;
            if(data){
                var type = data_ele.getAttribute('chart-type');
                try{
                    data = JSON.parse(data);
                    buildChart(type, data, ctx);
                    canvas.setAttribute('rendered', true);
                }catch(e){
                    console.log(e);
                }
            }
        }
    }

    renderGraph(0);
    
</script>
{% endblock %}