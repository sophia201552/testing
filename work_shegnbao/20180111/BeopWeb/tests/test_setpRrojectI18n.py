import pytestfrom beopWeb.mod_admin import ProjectI18nimport jsonimport randomkey_test="TEST_zh"+str(random.randint(1,300))@pytest.mark.p0@pytest.mark.parametrize(('data'), [    ({"id":216,"lang":"zh","resource":{key_test:key_test}}),    ({"id":None,"lang":"zh","resource":{key_test:key_test}}),    ({"id":"ertyy","lang":"zh","resource":{key_test:key_test}}),])def test_do_set_project_i18n(data):    rt = ProjectI18n.do_set_project_i18n(data)    rt = json.loads(bytes.decode(rt.data))    if data.get("id")!=216:        assert not rt.get("success"), 'set_project_i18n fail'    else:        assert rt.get("success"), 'set_project_i18n fail'        acutal = ProjectI18n.get_project_i18n(data.get("id"))        acutal = json.loads(bytes.decode(acutal.data))        actual_zh = acutal.get('data').get("resource").get('zh')        for key in actual_zh.keys():            assert key == key_test,'not equal ,expected={0},acutal={1}'.format(key_test,key)            assert actual_zh.get(key)==key_test,'not equal ,expected={0},acutal={1}'.format(key_test,actual_zh.get(key))