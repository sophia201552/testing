.hotTable {
  width: 100%;
  height: 100%;
  position: relative;
}
/* skin header-color- */
.hotTable.header_color_7da2f5 :global(.ht_clone_top) th {
  background-color: #7da2f5;
}
.hotTable.header_color_7da2f5 :global(.ht_clone_top) th:global(.ht__highlight) {
  background-color: #7da2f5;
}
.hotTable.header_height_40 :global(.ht_clone_top) th {
  line-height: 36px; 
}

/* checkBox start */
.checkbox-all{
  position: absolute;
  top: 50%;
  left: 50%;
  margin-top: -8px;
  margin-left: -8px;
}
/* label.checkbox-wrapper>span.checkbox>input.checkbox-input+span.checkbox-inner*/
.checkbox-wrapper{
  position: relative;
  cursor: pointer;
  font-size: 12px;
  display: inline-block;
  margin: 0;
  vertical-align: text-top;
}
.checkbox-wrapper .checkbox{
  white-space: nowrap;
  cursor: pointer;
  outline: none;
  display: inline-block;
  line-height: 1;
  position: relative;
  vertical-align: text-bottom;
  margin: 0;
}
.checkbox-wrapper .checkbox .checkbox-input{
  position: absolute;
  left: 0;
  z-index: 1;
  cursor: pointer;
  opacity: 0;
  filter: alpha(opacity=0);
  top: 0;
  bottom: 0;
  right: 0;
  width: 100%;
  height: 100%;
  line-height: normal;
}
.checkbox-wrapper .checkbox .checkbox-inner{
  position: relative;
  top: 0;
  left: 0;
  display: block;
  width: 16px;
  height: 16px;
  border: 1px solid #d9d9d9;
  border-radius: 2px;
  background-color: #fff;
  -webkit-transition: all .3s;
  transition: all .3s;
}
.checkbox-wrapper .checkbox .checkbox-inner::after{
  -webkit-transform: rotate(45deg) scale(0);
  -ms-transform: rotate(45deg) scale(0);
  transform: rotate(45deg) scale(0);
  position: absolute;
  left: 4px;
  top: 1px;
  display: table;
  width: 5px;
  height: 8px;
  border: 2px solid #fff;
  border-top: 0;
  border-left: 0;
  content: " ";
  -webkit-transition: all .1s cubic-bezier(.71,-.46,.88,.6);
  transition: all .1s cubic-bezier(.71,-.46,.88,.6);
}
.checkbox-wrapper .checkbox.checked .checkbox-inner::after{
  -webkit-transform: rotate(45deg) scale(1);
  -ms-transform: rotate(45deg) scale(1);
  transform: rotate(45deg) scale(1);
  position: absolute;
  display: table;
  border: 2px solid #fff;
  border-top: 0;
  border-left: 0;
  content: " ";
  -webkit-transition: all .2s cubic-bezier(.12,.4,.29,1.46) .1s;
  transition: all .2s cubic-bezier(.12,.4,.29,1.46) .1s;
}
.checkbox-wrapper .checkbox.indeterminate .checkbox-inner::after{
  content: " ";
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
  position: absolute;
  left: 2px;
  top: 5px;
  width: 8px;
  height: 1px;
}
.checkbox-wrapper .checkbox-input:focus+.checkbox-inner, 
.checkbox-wrapper:hover .checkbox-inner, 
.checkbox-wrapper .checkbox:hover .checkbox-inner{
  border-color: #108ee9;
}
.checkbox-wrapper .checkbox.checked .checkbox-inner,
.checkbox-wrapper .checkbox.indeterminate .checkbox-inner{
  background-color: #108ee9;
  border-color: #108ee9;
}
.checkbox-wrapper .checkbox.checked::after{
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: 2px;
  border: 1px solid #108ee9;
  content: " ";
  -webkit-animation-fill-mode: both;
  animation-fill-mode: both;
  visibility: hidden;
}
/* end */

/* https://docs.handsontable.com/0.35.1/tutorial-styling.html */
/* Table
Background */
.hotTable :global(.ht_master) tr td {
  /* background-color: #fff; */
}

/* Headers
Background */
/* All headers */
.hotTable :global(.handsontable) th {
  /* background-color: #fff; */
}

/* Row headers */
.hotTable :global(.ht_clone_left) th {
  /* background-color: #fff; */
}

/* Column headers */
.hotTable :global(.ht_clone_top) th {
  /* background-color: #7da2f5;
  line-height: 36px; */
}
.hotTable :global(.ht_clone_top) th:global(.ht__highlight) {
  /* background-color: #7da2f5; */
}
/* Borders */
/* Row headers */
/* Bottom */
.hotTable :global(.ht_clone_top_left_corner) th {
  /* border-bottom: 1px solid #F00; */
}

/* Left and right */
.hotTable :global(.ht_clone_left) th {
  /* border-right: 1px solid #F00;
  border-left: 1px solid #F00; */
}

/* Column headers */
/* Top, bottom and right */
.hotTable :global(.ht_clone_top) th {
  /* border-top: 1px solid #F00;
  border-right: 1px solid #F00;
  border-bottom: 1px solid #F00; */
}

/* Left */
.hotTable :global(.ht_clone_top_left_corner) th {
  /* border-right: 1px solid #F00; */
}

/* Corner
Background */

.hotTable :global(.ht_clone_top_left_corner) th {
  /* background-color: #F00; */
}
/* Borders */

.hotTable :global(.ht_clone_top_left_corner) th {
  /* border: 1px solid #F00; */
}

/* Rows
Background */

/* Every odd row */
.hotTable :global(.ht_master) tr:nth-of-type(odd) > td {
  /* background-color: #f00; */
}

/* Every even row */
.hotTable :global(.ht_master) tr:nth-of-type(even) > td {
  /* background-color: #f00; */
}

/* Selected row  */
/* Add a custom class name in the configuration: currentRowClassName: "foo"; */
.hotTable :global(.ht_master) tr:global(.foo) > td {
  /* background-color: #f00; */
}

/* Specific row (2) */
.hotTable :global(.ht_master) tr:nth-child(2) > td {
  /* background-color: #f00; */
}
/* Borders */

/* Bottom */
.hotTable :global(.ht_master) tr > td {
  /* border-bottom: 1px solid #F00; */
}

/* Right */
.hotTable :global(.ht_master) tr > td {
  /* border-right: 1px solid #F00; */
}
/* Columns
Background */

/* Every odd column */
.hotTable :global(.ht_master) tr > td:nth-of-type(odd) {
  /* background-color: #f00; */
}

/* Every even column */
.hotTable :global(.ht_master) tr > td:nth-of-type(even) {
  /* background-color: #f00; */
}

/* Selected column  */
/* Add a custom class name in the configuration: currentColClassName: "foo"; */
.hotTable :global(.ht_master) tr > td:global(.foo) {
  /* background-color: #f00; */
}

/* Specific column (B) */
.hotTable :global(.ht_master) tr > td:nth-child(3) {
  /* background-color: #f00; */
}
/* Cell
Background */

/* Selected cell */
.hotTable :global(.ht_master) tr > td:global(.current) {
  /* background-color: #F00; */
}

/* Specific cell (B2) */
.hotTable :global(.ht_master) tr:nth-child(2) > td:nth-child(3) {
  /* background-color: #F00; */
}

/* Edit mode */
.hotTable :global(.handsontableInput) {
  /* background-color: #F00!important; */
}
/* Selection
Background */

.hotTable :global(.handsontable) td:global(.area) {
  /* background-color: #F00; */
}
