//Service: "/strategy/diagnosis/<strategyId>", 获取某个诊断策略 strategyId: ObjectId
//         "/strategy/diagnosis/<projectId>",  获取某项目下所有诊断策略 projectId: int
//         "/strategy/diagnosis/all", 获取全部诊断策略
//return
{
    "arrStrategy": [{
        //编号
        "_id": "565558adf18a890a2448075b",
        //项目ID
        "projId": 72,
        //名称
        "name": "冷机1号供回水温度监测",
        //状态： 0，未启用；1，启用；
        "status": 0,
        //运行值
        "value": [{ //策略所用数值。数组：批量处理，冷机1、2、3、4都用同一套规则
            "point1": {
                "type": 10, //10:数据源实时值； 11：数据源历史值； 1：静态变量；
                "value": "@72|Ch001_temp", //点名
                "data": 34 //点值
            },
            "point2": {
                "type": 10, //20:数据源实时值； 30：数据源历史值； 1：静态变量；
                "value": "@72|Ch001_temp", //点名
                "data": {
                    "data": [12, 20, 35, 25],
                    "timeShaft": ["20170101", "20170102"]
                }
            }
        }, { //数组：批量处理，冷机1、2、3、4都用同一套规则
            "point1": {
                "type": 10, //10:数据源实时值； 11：数据源历史值； 1：静态变量；
                "value": "@72|Ch002_temp", //点名
                "data": 34 //点值
            },
            "point2": {
                "type": 10, //10:数据源实时值； 11：数据源历史值； 1：静态变量；
                "value": "@72|Ch002_temp", //点名
                "data": {
                    "data": [12, 20, 35, 25],
                    "timeShaft": ["20170101", "20170102"]
                }
            }
        }],
        "rule": {
            "content": "" //如下
        }
    }]
}

//arrStrategy.rule.content:

// Engine: VAV
// InputVariable: OnOffStatus
//   enabled: true
//   range: 0.000 1.000
//   term: Off Triangle 0.000 0.000 0.500
//   term: On Triangle 0.500 1.000 1.000
// InputVariable: CoolingHeatingSeason
//   enabled: true
//   range: 0.000 1.000
//   term: Cooling Triangle 0.000 0.000 0.500
//   term: Heating Triangle 0.500 1.000 1.000
//   term: Off Triangle 0.250 0.500 0.750
// InputVariable: SupplyAirTemp
//   enabled: false
//   range: 12.000 25.000
//   term: Small Triangle 12.000 12.000 20.000
//   term: Big Triangle 20.000 25.000 25.000
//   term: CoolingNormal Trapezoid 16.000 18.000 22.000 22.000
//   term: HeatingNormal Trapezoid 14.000 16.000 20.000 20.000
// InputVariable: SupplyAirTemp_SeriesCheck
//   enabled: false
//   range: -0.500 8.500
//   term: Dead Rectangle 0.500 1.500
//   term: AboveMax Rectangle 1.500 2.500
//   term: BelowMin Rectangle 2.500 3.500
//   term: Oscilliating Rectangle 3.500 4.500
//   term: Big Rectangle 4.500 5.500
//   term: Small Rectangle 5.500 6.500
//   term: Unstable Rectangle 6.500 7.500
// InputVariable: SupplyAirTempSetpoints
//   enabled: false
//   range: 12.000 22.000
//   term: Small Triangle 12.000 12.000 20.000
//   term: Big Triangle 20.000 25.000 25.000
//   term: CoolingNormal Trapezoid 16.000 18.000 22.000 22.000
//   term: HeatingNormal Trapezoid 14.000 16.000 20.000 20.000
// InputVariable: ZoneAirT
//   enabled: true
//   range: 16.000 30.000
//   term: CoolingSmall Trapezoid 16.000 16.000 20.000 22.000
//   term: CoolingNormal Trapezoid 22.000 23.250 25.750 27.000
//   term: CoolingBig Triangle 27.000 30.000 30.000
//   term: HeatingSmall Triangle 16.000 16.000 18.000
//   term: HeatingNormal Trapezoid 18.000 19.000 22.000 24.000
//   term: HeatingBig Trapezoid 24.000 25.000 30.000 30.000
// InputVariable: ZoneAirT_SeriesCheck
//   enabled: false
//   range: -0.500 8.500
//   term: Dead Rectangle 0.500 1.500
//   term: AboveMax Rectangle 1.500 2.500
//   term: BelowMin Rectangle 2.500 3.500
//   term: Oscilliating Rectangle 3.500 4.500
//   term: Big Rectangle 4.500 5.500
//   term: Small Rectangle 5.500 6.500
//   term: Unstable Rectangle 6.500 7.500
// InputVariable: ZoneAirTempSetpoint
//   enabled: true
//   range: 16.000 30.000
//   term: CoolingSmall Trapezoid 16.000 16.000 20.000 22.000
//   term: CoolingNormal Trapezoid 22.000 23.250 25.750 27.000
//   term: CoolingBig Triangle 27.000 30.000 30.000
//   term: HeatingSmall Triangle 16.000 16.000 18.000
//   term: HeatingNormal Trapezoid 18.000 19.000 22.000 24.000
//   term: HeatingBig Trapezoid 24.000 25.000 30.000 30.000
// InputVariable: AirFlowRate
//   enabled: false
//   range: 0.000 200.000
//   term: Small Triangle 0.000 0.000 50.000
//   term: Big Triangle 100.000 200.000 200.000
//   term: Normal Triangle 50.000 75.000 100.000
// InputVariable: AirFlowRate_SeriesCheck
//   enabled: false
//   range: -0.500 8.500
//   term: Dead Rectangle 0.500 1.500
//   term: AboveMax Rectangle 1.500 2.500
//   term: BelowMin Rectangle 2.500 3.500
//   term: Oscilliating Rectangle 3.500 4.500
//   term: Big Rectangle 4.500 5.500
//   term: Small Rectangle 5.500 6.500
//   term: Unstable Rectangle 6.500 7.500
// InputVariable: AirFlowRateSetpoints
//   enabled: false
//   range: 0.000 200.000
//   term: Small Triangle 0.000 0.000 50.000
//   term: Big Triangle 100.000 200.000 200.000
//   term: Normal Triangle 50.000 75.000 100.000
// InputVariable: ZoneDamperRatio
//   enabled: true
//   range: 0.000 100.000
//   term: Small Triangle 0.000 0.000 90.000
//   term: Big Triangle 10.000 100.000 100.000
//   term: Off Triangle 0.000 0.000 10.000
//   term: Open Triangle 90.000 100.000 100.000
//   term: NeutralRange Rectangle 5.000 95.000
// InputVariable: ZoneDamperRatioSetpoint
//   enabled: true
//   range: 0.000 100.000
//   term: Small Triangle 0.000 0.000 90.000
//   term: Big Triangle 10.000 100.000 100.000
//   term: Off Triangle 0.000 0.000 10.000
//   term: Open Triangle 90.000 100.000 100.000
// InputVariable: ZoneDamperRatio_SeriesCheck
//   enabled: false
//   range: -0.500 8.500
//   term: Dead Rectangle 0.500 1.500
//   term: AboveMax Rectangle 1.500 2.500
//   term: BelowMin Rectangle 2.500 3.500
//   term: Oscilliating Rectangle 3.500 4.500
//   term: Big Rectangle 4.500 5.500
//   term: Small Rectangle 5.500 6.500
//   term: Unstable Rectangle 6.500 7.500
// InputVariable: MaxFlowRate
//   enabled: false
//   range: -10.000 50.000
// InputVariable: MinFlowRate
//   enabled: false
//   range: -10.000 50.000
// InputVariable: ZoneAirDT
//   enabled: true
//   range: -3.000 3.000
//   term: Small Triangle -3.000 -3.000 -1.500
//   term: Big Triangle 1.500 3.000 3.000
//   term: Normal Triangle -1.500 0.000 1.500
// InputVariable: ZoneAirFlowToMax
//   enabled: true
//   range: -30.000 30.000
//   term: Small Triangle -30.000 -30.000 -15.000
//   term: Big Triangle 15.000 30.000 30.000
//   term: Nearby Triangle -15.000 0.000 15.000
// InputVariable: ZoneAirFlowToMin
//   enabled: true
//   range: -30.000 30.000
//   term: Small Triangle -30.000 -30.000 -15.000
//   term: Big Triangle 15.000 30.000 30.000
//   term: Nearby Triangle -15.000 0.000 15.000
// InputVariable: ZoneAirFlowToSP
//   enabled: true
//   range: -30.000 30.000
//   term: Small Triangle -30.000 -30.000 -15.000
//   term: Big Triangle 15.000 30.000 30.000
//   term: Nearby Triangle -15.000 0.000 15.000
// InputVariable: AHUSATemp
//   enabled: false
//   range: 12.000 22.000
//   term: Small Triangle 12.000 12.000 16.000
//   term: Big Triangle 20.000 22.000 22.000
//   term: CoolingNormal Trapezoid 16.000 18.000 20.000 20.000
//   term: HeatingNormal Trapezoid 16.000 18.000 20.000 20.000
// InputVariable: AHUSATemp_SeriesCheck
//   enabled: false
//   range: -0.500 8.500
//   term: Dead Rectangle 0.500 1.500
//   term: AboveMax Rectangle 1.500 2.500
//   term: BelowMin Rectangle 2.500 3.500
//   term: Oscilliating Rectangle 3.500 4.500
//   term: Big Rectangle 4.500 5.500
//   term: Small Rectangle 5.500 6.500
//   term: Unstable Rectangle 6.500 7.500






// ###############################################################################################################  
// OutputVariable: ZoneAirTempSettingTooCold
//   enabled: true
//   range: 0.000 1.000
//   accumulation: Maximum
//   defuzzifier: Centroid 200
//   default: 0.000
//   lock-previous: false
//   lock-range: false
//   term: Small Gaussian 0.000 0.300
//   term: Big Gaussian 1.000 0.300
// OutputVariable: ZoneAirTempSettingTooHot
//   enabled: true
//   range: 0.000 1.000
//   accumulation: Maximum
//   defuzzifier: Centroid 200
//   default: 0.000
//   lock-previous: false
//   lock-range: false
//   term: Small Gaussian 0.000 0.300
//   term: Big Gaussian 1.000 0.300
// OutputVariable: ZoneAirTempDeadValue
//   enabled: true
//   range: 0.000 1.000
//   accumulation: Maximum
//   defuzzifier: Centroid 200
//   default: 0.000
//   lock-previous: false
//   lock-range: false
//   term: Small Gaussian 0.000 0.300
//   term: Big Gaussian 1.000 0.300
// OutputVariable: ZoneAirTempTooCold
//   enabled: true
//   range: 0.000 1.000
//   accumulation: Maximum
//   defuzzifier: Centroid 200
//   default: 0.000
//   lock-previous: false
//   lock-range: false
//   term: Small Gaussian 0.000 0.300
//   term: Big Gaussian 1.000 0.300
// OutputVariable: ZoneAirTempTooHot
//   enabled: true
//   range: 0.000 1.000
//   accumulation: Maximum
//   defuzzifier: Centroid 200
//   default: 0.000
//   lock-previous: false
//   lock-range: false
//   term: Small Gaussian 0.000 0.300
//   term: Big Gaussian 1.000 0.300
// OutputVariable: ZoneAirTempAbnormallyCold
//   enabled: true
//   range: 0.000 1.000
//   accumulation: Maximum
//   defuzzifier: Centroid 200
//   default: 0.000
//   lock-previous: false
//   lock-range: false
//   term: Small Gaussian 0.000 0.300
//   term: Big Gaussian 1.000 0.300
// OutputVariable: ZoneAirTempAbnormallyHot
//   enabled: true
//   range: 0.000 1.000
//   accumulation: Maximum
//   defuzzifier: Centroid 200
//   default: 0.000
//   lock-previous: false
//   lock-range: false
//   term: Small Gaussian 0.000 0.300
//   term: Big Gaussian 1.000 0.300
// OutputVariable: ZoneAirTempOscillating
//   enabled: true
//   range: 0.000 1.000
//   accumulation: Maximum
//   defuzzifier: Centroid 200
//   default: 0.000
//   lock-previous: false
//   lock-range: false
//   term: Small Gaussian 0.000 0.300
//   term: Big Gaussian 1.000 0.300
// OutputVariable: ZoneAirTempUnstable
//   enabled: true
//   range: 0.000 1.000
//   accumulation: Maximum
//   defuzzifier: Centroid 200
//   default: 0.000
//   lock-previous: false
//   lock-range: false
//   term: Small Gaussian 0.000 0.300
//   term: Big Gaussian 1.000 0.300
// OutputVariable: SupplyAirTempDeadValue
//   enabled: true
//   range: 0.000 1.000
//   accumulation: Maximum
//   defuzzifier: Centroid 200
//   default: 0.000
//   lock-previous: false
//   lock-range: false
//   term: Small Gaussian 0.000 0.300
//   term: Big Gaussian 1.000 0.300
// OutputVariable: SupplyAirTempTooCold
//   enabled: true
//   range: 0.000 1.000
//   accumulation: Maximum
//   defuzzifier: Centroid 200
//   default: 0.000
//   lock-previous: false
//   lock-range: false
//   term: Small Gaussian 0.000 0.300
//   term: Big Gaussian 1.000 0.300
// OutputVariable: SupplyAirTempTooHot
//   enabled: true
//   range: 0.000 1.000
//   accumulation: Maximum
//   defuzzifier: Centroid 200
//   default: 0.000
//   lock-previous: false
//   lock-range: false
//   term: Small Gaussian 0.000 0.300
//   term: Big Gaussian 1.000 0.300
// OutputVariable: SupplyAirTempAbnormallyCold
//   enabled: true
//   range: 0.000 1.000
//   accumulation: Maximum
//   defuzzifier: Centroid 200
//   default: 0.000
//   lock-previous: false
//   lock-range: false
//   term: Small Gaussian 0.000 0.300
//   term: Big Gaussian 1.000 0.300
// OutputVariable: SupplyAirTempAbnormallyHot
//   enabled: true
//   range: 0.000 1.000
//   accumulation: Maximum
//   defuzzifier: Centroid 200
//   default: 0.000
//   lock-previous: false
//   lock-range: false
//   term: Small Gaussian 0.000 0.300
//   term: Big Gaussian 1.000 0.300
// OutputVariable: SupplyAirTempOscillating
//   enabled: true
//   range: 0.000 1.000
//   accumulation: Maximum
//   defuzzifier: Centroid 200
//   default: 0.000
//   lock-previous: false
//   lock-range: false
//   term: Small Gaussian 0.000 0.300
//   term: Big Gaussian 1.000 0.300
// OutputVariable: SupplyAirTempUnstable
//   enabled: true
//   range: 0.000 1.000
//   accumulation: Maximum
//   defuzzifier: Centroid 200
//   default: 0.000
//   lock-previous: false
//   lock-range: false
//   term: Small Gaussian 0.000 0.300
//   term: Big Gaussian 1.000 0.300
// OutputVariable: ZoneDamperRatioDeadValue
//   enabled: true
//   range: 0.000 1.000
//   accumulation: Maximum
//   defuzzifier: Centroid 200
//   default: 0.000
//   lock-previous: false
//   lock-range: false
//   term: Small Gaussian 0.000 0.300
//   term: Big Gaussian 1.000 0.300
// OutputVariable: CoolingZoneDamperRatioTooBig
//   enabled: true
//   range: 0.000 1.000
//   accumulation: Maximum
//   defuzzifier: Centroid 200
//   default: 0.000
//   lock-previous: false
//   lock-range: false
//   term: Small Gaussian 0.000 0.300
//   term: Big Gaussian 1.000 0.300
// OutputVariable: CoolingZoneDamperRatioTooSmall
//   enabled: true
//   range: 0.000 1.000
//   accumulation: Maximum
//   defuzzifier: Centroid 200
//   default: 0.000
//   lock-previous: false
//   lock-range: false
//   term: Small Gaussian 0.000 0.300
//   term: Big Gaussian 1.000 0.300
// OutputVariable: HeatingZoneDamperRatioTooBig
//   enabled: true
//   range: 0.000 1.000
//   accumulation: Maximum
//   defuzzifier: Centroid 200
//   default: 0.000
//   lock-previous: false
//   lock-range: false
//   term: Small Gaussian 0.000 0.300
//   term: Big Gaussian 1.000 0.300
// OutputVariable: HeatingZoneDamperRatioTooSmall
//   enabled: true
//   range: 0.000 1.000
//   accumulation: Maximum
//   defuzzifier: Centroid 200
//   default: 0.000
//   lock-previous: false
//   lock-range: false
//   term: Small Gaussian 0.000 0.300
//   term: Big Gaussian 1.000 0.300
// OutputVariable: CoolingManualZoneDamperRatioTooBig
//   enabled: true
//   range: 0.000 1.000
//   accumulation: Maximum
//   defuzzifier: Centroid 200
//   default: 0.000
//   lock-previous: false
//   lock-range: false
//   term: Small Gaussian 0.000 0.300
//   term: Big Gaussian 1.000 0.300
// OutputVariable: CoolingManualZoneDamperRatioTooSmall
//   enabled: true
//   range: 0.000 1.000
//   accumulation: Maximum
//   defuzzifier: Centroid 200
//   default: 0.000
//   lock-previous: false
//   lock-range: false
//   term: Small Gaussian 0.000 0.300
//   term: Big Gaussian 1.000 0.300
// OutputVariable: HeatingManualZoneDamperRatioTooBig
//   enabled: true
//   range: 0.000 1.000
//   accumulation: Maximum
//   defuzzifier: Centroid 200
//   default: 0.000
//   lock-previous: false
//   lock-range: false
//   term: Small Gaussian 0.000 0.300
//   term: Big Gaussian 1.000 0.300
// OutputVariable: HeatingManualZoneDamperRatioTooSmall
//   enabled: true
//   range: 0.000 1.000
//   accumulation: Maximum
//   defuzzifier: Centroid 200
//   default: 0.000
//   lock-previous: false
//   lock-range: false
//   term: Small Gaussian 0.000 0.300
//   term: Big Gaussian 1.000 0.300
// OutputVariable: ZoneDamperRatioAbnormallyBig
//   enabled: true
//   range: 0.000 1.000
//   accumulation: Maximum
//   defuzzifier: Centroid 200
//   default: 0.000
//   lock-previous: false
//   lock-range: false
//   term: Small Gaussian 0.000 0.300
//   term: Big Gaussian 1.000 0.300
// OutputVariable: ZoneDamperRatioAbnormallySmall
//   enabled: true
//   range: 0.000 1.000
//   accumulation: Maximum
//   defuzzifier: Centroid 200
//   default: 0.000
//   lock-previous: false
//   lock-range: false
//   term: Small Gaussian 0.000 0.300
//   term: Big Gaussian 1.000 0.300
// OutputVariable: ZoneDamperRatioOscillating
//   enabled: true
//   range: 0.000 1.000
//   accumulation: Maximum
//   defuzzifier: Centroid 200
//   default: 0.000
//   lock-previous: false
//   lock-range: false
//   term: Small Gaussian 0.000 0.300
//   term: Big Gaussian 1.000 0.300
// OutputVariable: ZoneDamperRatioUnstable
//   enabled: true
//   range: 0.000 1.000
//   accumulation: Maximum
//   defuzzifier: Centroid 200
//   default: 0.000
//   lock-previous: false
//   lock-range: false
//   term: Small Gaussian 0.000 0.300
//   term: Big Gaussian 1.000 0.300
// OutputVariable: AirFlowRateDeadValue
//   enabled: true
//   range: 0.000 1.000
//   accumulation: Maximum
//   defuzzifier: Centroid 200
//   default: 0.000
//   lock-previous: false
//   lock-range: false
//   term: Small Gaussian 0.000 0.300
//   term: Big Gaussian 1.000 0.300
// OutputVariable: AirFlowRateTooSmall
//   enabled: true
//   range: 0.000 1.000
//   accumulation: Maximum
//   defuzzifier: Centroid 200
//   default: 0.000
//   lock-previous: false
//   lock-range: false
//   term: Small Gaussian 0.000 0.300
//   term: Big Gaussian 1.000 0.300
// OutputVariable: AirFlowRateTooBig
//   enabled: true
//   range: 0.000 1.000
//   accumulation: Maximum
//   defuzzifier: Centroid 200
//   default: 0.000
//   lock-previous: false
//   lock-range: false
//   term: Small Gaussian 0.000 0.300
//   term: Big Gaussian 1.000 0.300
// OutputVariable: AirFlowRateAbnormallySmall
//   enabled: true
//   range: 0.000 1.000
//   accumulation: Maximum
//   defuzzifier: Centroid 200
//   default: 0.000
//   lock-previous: false
//   lock-range: false
//   term: Small Gaussian 0.000 0.300
//   term: Big Gaussian 1.000 0.300
// OutputVariable: AirFlowRateAbnormallyBig
//   enabled: true
//   range: 0.000 1.000
//   accumulation: Maximum
//   defuzzifier: Centroid 200
//   default: 0.000
//   lock-previous: false
//   lock-range: false
//   term: Small Gaussian 0.000 0.300
//   term: Big Gaussian 1.000 0.300
// OutputVariable: AirFlowRateOscillating
//   enabled: true
//   range: 0.000 1.000
//   accumulation: Maximum
//   defuzzifier: Centroid 200
//   default: 0.000
//   lock-previous: false
//   lock-range: false
//   term: Small Gaussian 0.000 0.300
//   term: Big Gaussian 1.000 0.300
// OutputVariable: AirFlowRateUnstable
//   enabled: true
//   range: 0.000 1.000
//   accumulation: Maximum
//   defuzzifier: Centroid 200
//   default: 0.000
//   lock-previous: false
//   lock-range: false
//   term: Small Gaussian 0.000 0.300
//   term: Big Gaussian 1.000 0.300
// OutputVariable: MaxFlowRateTooSmall
//   enabled: true
//   range: 0.000 1.000
//   accumulation: Maximum
//   defuzzifier: Centroid 200
//   default: 0.000
//   lock-previous: false
//   lock-range: false
//   term: Small Gaussian 0.000 0.300
//   term: Big Gaussian 1.000 0.300
// OutputVariable: MinFlowRateTooBig
//   enabled: true
//   range: 0.000 1.000
//   accumulation: Maximum
//   defuzzifier: Centroid 200
//   default: 0.000
//   lock-previous: false
//   lock-range: false
//   term: Small Gaussian 0.000 0.300
//   term: Big Gaussian 1.000 0.300
// RuleBlock: Rules
//   enabled: true
//   conjunction: Minimum
//   disjunction: Maximum
//   activation: Minimum
//   rule: if OnOffStatus is On and AHUSATemp_SeriesCheck is not AboveMax and ZoneDamperRatio_SeriesCheck is AboveMax then ZoneDamperRatioAbnormallyBig is Big
//   rule: if OnOffStatus is On and AHUSATemp_SeriesCheck is not BelowMin and ZoneDamperRatio_SeriesCheck is BelowMin then ZoneDamperRatioAbnormallySmall is Big
//   rule: if OnOffStatus is On and AHUSATemp_SeriesCheck is not Big and ZoneDamperRatio_SeriesCheck is Big and CoolingHeatingSeason is Cooling then CoolingZoneDamperRatioTooBig is Big
//   rule: if OnOffStatus is On and AHUSATemp_SeriesCheck is not Big and ZoneDamperRatio_SeriesCheck is Big and CoolingHeatingSeason is Heating then HeatingZoneDamperRatioTooBig is Big
//   rule: if OnOffStatus is On and AHUSATemp_SeriesCheck is not Small and ZoneDamperRatio_SeriesCheck is Small and CoolingHeatingSeason is Cooling then CoolingZoneDamperRatioTooSmall is Big
//   rule: if OnOffStatus is On and AHUSATemp_SeriesCheck is not Small and ZoneDamperRatio_SeriesCheck is Small and CoolingHeatingSeason is Heating then HeatingZoneDamperRatioTooSmall is Big
//   rule: if OnOffStatus is On and AHUSATemp_SeriesCheck is not Oscilliating and ZoneDamperRatio_SeriesCheck is Oscilliating then ZoneDamperRatioOscillating is Big
//   rule: if OnOffStatus is On and AHUSATemp_SeriesCheck is not Unstable and ZoneDamperRatio_SeriesCheck is Unstable then  ZoneDamperRatioUnstable is Big
//   rule: if OnOffStatus is On and ZoneDamperRatio_SeriesCheck is Dead or ZoneDamperRatioAbnormallyBig is Big or ZoneDamperRatioAbnormallySmall is Big then CoolingZoneDamperRatioTooSmall is Small and CoolingZoneDamperRatioTooBig is Small and HeatingZoneDamperRatioTooBig is Small and HeatingZoneDamperRatioTooSmall is Small
//   rule: if OnOffStatus is On and AirFlowRate is Normal and ZoneDamperRatio is Off then ZoneDamperRatioAbnormallySmall is Big
//   rule: if OnOffStatus is On and SupplyAirTemp_SeriesCheck is Dead then SupplyAirTempDeadValue is Big
//   rule: if OnOffStatus is On and AHUSATemp_SeriesCheck is not AboveMax and SupplyAirTemp_SeriesCheck is AboveMax then SupplyAirTempAbnormallyHot is Big
//   rule: if OnOffStatus is On and AHUSATemp_SeriesCheck is not BelowMin and SupplyAirTemp_SeriesCheck is BelowMin then SupplyAirTempAbnormallyCold is Big
//   rule: if OnOffStatus is On and AHUSATemp_SeriesCheck is not Big and SupplyAirTemp_SeriesCheck is Big then SupplyAirTempTooHot is Big
//   rule: if OnOffStatus is On and AHUSATemp_SeriesCheck is not Small and SupplyAirTemp_SeriesCheck is Small then SupplyAirTempTooCold is Big
//   rule: if OnOffStatus is On and AHUSATemp_SeriesCheck is not Oscilliating and SupplyAirTemp_SeriesCheck is Oscilliating then SupplyAirTempOscillating is Big
//   rule: if OnOffStatus is On and AHUSATemp_SeriesCheck is not Unstable and SupplyAirTemp_SeriesCheck is Unstable then  SupplyAirTempUnstable is Big
//   rule: if ZoneDamperRatioOscillating is Big or ZoneDamperRatioUnstable is Big then SupplyAirTempOscillating is Small and SupplyAirTempUnstable is Small
//   rule: if OnOffStatus is On and ZoneAirT_SeriesCheck is Dead then ZoneAirTempDeadValue is Big
//   rule: if OnOffStatus is On and AHUSATemp_SeriesCheck is not AboveMax and ZoneAirT_SeriesCheck is AboveMax then ZoneAirTempAbnormallyHot is Big
//   rule: if OnOffStatus is On and AHUSATemp_SeriesCheck is not BelowMin and ZoneAirT_SeriesCheck is BelowMin then ZoneAirTempAbnormallyCold is Big
//   rule: if OnOffStatus is On and AHUSATemp_SeriesCheck is not Big and ZoneAirT_SeriesCheck is Big then ZoneAirTempTooHot is Big
//   rule: if OnOffStatus is On and AHUSATemp_SeriesCheck is not Small and ZoneAirT_SeriesCheck is Small then ZoneAirTempTooCold is Big
//   rule: if OnOffStatus is On and AHUSATemp_SeriesCheck is not Oscilliating and ZoneAirT_SeriesCheck is Oscilliating then ZoneAirTempOscillating is Big
//   rule: if OnOffStatus is On and AHUSATemp_SeriesCheck is not Unstable and ZoneAirT_SeriesCheck is Unstable then  ZoneAirTempUnstable is Big
//   rule: if OnOffStatus is On and SupplyAirTempOscillating is Big or SupplyAirTempUnstable is Big then ZoneAirTempOscillating is Small and ZoneAirTempUnstable is Small
//   rule: if ZoneAirTempDeadValue is Big or ZoneAirTempAbnormallyCold is Big or ZoneAirTempAbnormallyHot is Big then ZoneAirTempTooCold is Small and ZoneAirTempTooHot is Small
//   rule: if OnOffStatus is On and AirFlowRate_SeriesCheck is Dead then AirFlowRateDeadValue is Big
//   rule: if OnOffStatus is On and AirFlowRate_SeriesCheck is BelowMin then AirFlowRateAbnormallySmall is Big
//   rule: if OnOffStatus is On and AirFlowRate_SeriesCheck is Big then AirFlowRateTooBig is Big
//   rule: if OnOffStatus is On and AirFlowRate_SeriesCheck is Small then AirFlowRateTooSmall is Big
//   rule: if OnOffStatus is On and AirFlowRate_SeriesCheck is Oscilliating then AirFlowRateOscillating is Big
//   rule: if OnOffStatus is On and AirFlowRate_SeriesCheck is Unstable then AirFlowRateUnstable is Big
//   rule: if OnOffStatus is On and AirFlowRateAbnormallySmall is Big and ZoneDamperRatio is Off then AirFlowRateAbnormallySmall is Small
//   rule: if OnOffStatus is On and CoolingHeatingSeason is Cooling and ZoneAirTempSetpoint is CoolingBig then ZoneAirTempSettingTooHot is Big
//   rule: if OnOffStatus is On and CoolingHeatingSeason is Cooling and ZoneAirT is not CoolingBig then ZoneAirTempSettingTooHot is Small
//   rule: if OnOffStatus is On and CoolingHeatingSeason is Cooling and ZoneAirTempSetpoint is CoolingSmall then ZoneAirTempSettingTooCold is Big
//   rule: if OnOffStatus is On and CoolingHeatingSeason is Cooling and ZoneAirT is not CoolingSmall then ZoneAirTempSettingTooCold is Small
//   rule: if OnOffStatus is On and CoolingHeatingSeason is Cooling and ZoneAirDT is Big and ZoneDamperRatio is not Big then CoolingZoneDamperRatioTooSmall is Big
//   rule: if OnOffStatus is On and CoolingHeatingSeason is Cooling and ZoneAirDT is Small and ZoneDamperRatio is not Small then CoolingZoneDamperRatioTooBig is Big
//   rule: if OnOffStatus is On and CoolingHeatingSeason is Cooling and ZoneAirT is CoolingSmall and ZoneDamperRatio is Off then ZoneAirTempTooCold is Big
//   rule: if OnOffStatus is On and CoolingHeatingSeason is Cooling and ZoneAirT is CoolingBig and ZoneDamperRatio is Open then ZoneAirTempTooHot is Big
//   rule: if OnOffStatus is On and CoolingHeatingSeason is Cooling and ZoneAirDT is Big and ZoneDamperRatio is not Big then ZoneAirTempTooHot is Small
//   rule: if OnOffStatus is On and CoolingHeatingSeason is Cooling and ZoneAirDT is Small and ZoneDamperRatio is not Small then ZoneAirTempTooHot is Small
//   rule: if OnOffStatus is On and CoolingHeatingSeason is Cooling and ZoneAirFlowToMax is Nearby  then CoolingZoneDamperRatioTooSmall is Small
//   rule: if OnOffStatus is On and CoolingHeatingSeason is Cooling and ZoneAirFlowToMin is Nearby then CoolingZoneDamperRatioTooBig is Small
//   rule: if OnOffStatus is On and CoolingHeatingSeason is Cooling and AirFlowRate_SeriesCheck is BelowMin and ZoneDamperRatio is Open and ZoneAirTempTooCold is Big then CoolingZoneDamperRatioTooBig is Small and MinFlowRateTooBig is Big
//   rule: if OnOffStatus is On and CoolingHeatingSeason is Cooling and ZoneAirFlowToMax is Nearby and ZoneDamperRatio is not Open and ZoneAirTempTooHot is Big then CoolingZoneDamperRatioTooSmall is Small and MaxFlowRateTooSmall is Big
//   rule: if OnOffStatus is On and CoolingHeatingSeason is Cooling and ZoneDamperRatio_SeriesCheck is Dead and ZoneAirT is CoolingSmall and ZoneDamperRatio is not Off then CoolingManualZoneDamperRatioTooBig is Big
//   rule: if OnOffStatus is On and CoolingHeatingSeason is Cooling and ZoneDamperRatio_SeriesCheck is Dead and ZoneAirT is CoolingBig and ZoneDamperRatio is not Open then CoolingManualZoneDamperRatioTooSmall is Big
//   rule: if OnOffStatus is On and CoolingHeatingSeason is Heating and ZoneAirTempSetpoint is HeatingBig then ZoneAirTempSettingTooHot is Big
//   rule: if OnOffStatus is On and CoolingHeatingSeason is Heating and ZoneAirT is not HeatingBig then ZoneAirTempSettingTooHot is Small
//   rule: if OnOffStatus is On and CoolingHeatingSeason is Heating and ZoneAirTempSetpoint is HeatingSmall then ZoneAirTempSettingTooCold is Big
//   rule: if OnOffStatus is On and CoolingHeatingSeason is Heating and ZoneAirT is not HeatingSmall then ZoneAirTempSettingTooCold is Small
//   rule: if OnOffStatus is On and CoolingHeatingSeason is Heating and ZoneAirDT is Big and ZoneDamperRatio is not Small then HeatingZoneDamperRatioTooBig is Big
//   rule: if OnOffStatus is On and CoolingHeatingSeason is Heating and ZoneAirDT is Small and ZoneDamperRatio is not Big then HeatingZoneDamperRatioTooSmall is Big
//   rule: if OnOffStatus is On and CoolingHeatingSeason is Heating and ZoneAirT is HeatingBig and ZoneDamperRatio is Off then ZoneAirTempTooHot is Big
//   rule: if OnOffStatus is On and CoolingHeatingSeason is Heating and ZoneAirT is HeatingSmall and ZoneDamperRatio is Open then ZoneAirTempTooCold is Big
//   rule: if OnOffStatus is On and CoolingHeatingSeason is Heating and ZoneAirDT is Big and ZoneDamperRatio is not Small then ZoneAirTempTooHot is Small
//   rule: if OnOffStatus is On and CoolingHeatingSeason is Heating and ZoneAirDT is Small and ZoneDamperRatio is not Big then ZoneAirTempTooHot is Small
//   rule: if OnOffStatus is On and CoolingHeatingSeason is Heating and ZoneAirFlowToMax is Nearby then HeatingZoneDamperRatioTooSmall is Small
//   rule: if OnOffStatus is On and CoolingHeatingSeason is Heating and ZoneAirFlowToMin is Nearby then HeatingZoneDamperRatioTooBig is Small
//   rule: if OnOffStatus is On and CoolingHeatingSeason is Heating and AirFlowRate_SeriesCheck is BelowMin and ZoneDamperRatio is Open and ZoneAirTempTooHot is Big then HeatingZoneDamperRatioTooBig is Small and MinFlowRateTooBig is Big
//   rule: if OnOffStatus is On and CoolingHeatingSeason is Heating and ZoneAirFlowToMax is Nearby and ZoneDamperRatio is not Open and ZoneAirTempTooCold is Big then HeatingZoneDamperRatioTooSmall is Small and MaxFlowRateTooSmall is Big
//   rule: if OnOffStatus is On and CoolingHeatingSeason is Heating and ZoneDamperRatio_SeriesCheck is Dead and ZoneAirT is HeatingBig and ZoneDamperRatio is not Off then HeatingManualZoneDamperRatioTooBig is Big
//   rule: if OnOffStatus is On and CoolingHeatingSeason is Heating and ZoneDamperRatio_SeriesCheck is Dead and ZoneAirT is HeatingSmall and ZoneDamperRatio is not Open then HeatingManualZoneDamperRatioTooSmall is Big