__author__ = 'murphy'

import time, datetime, unittest
from interfaceTest.Methods.BeopTools import *
import numpy as np


class Calc026(unittest.TestCase):
    testCaseID = 'Calc026'
    projectName = "MultiProjects"
    buzName = '突变因子'
    start = 0.0
    now = 0
    arrPointNameOri = ["powermeter00_101_eng",
                    "powermeter00_102_eng",
                    "powermeter01_101_eng",
                    "powermeter01_201_eng",
                    "powermeter01_301_eng",
                    "powermeter01_401_eng",
                    "powermeter01_501_eng",
                    "powermeter01_601_eng",
                    "powermeter01_701_eng",
                    "powermeter02_101_eng",
                    "powermeter02_102_eng",
                    "powermeter02_103_eng",
                    "powermeter02_104_eng",
                    "powermeter02_105_eng",
                    "powermeter02_201_eng",
                    "powermeter02_202_eng",
                    "powermeter02_203_eng",
                    "powermeter02_204_eng",
                    "powermeter02_301_eng",
                    "powermeter02_302_eng",
                    "powermeter02_303_eng",
                    "powermeter02_401_eng",
                    "powermeter02_501_eng",
                    "powermeter02_502_eng",
                    "powermeter03_101_eng",
                    "powermeter03_102_eng",
                    "powermeter03_103_eng",
                    "powermeter03_104_eng",
                    "powermeter03_105_eng",
                    "powermeter03_106_eng",
                    "powermeter03_107_eng",
                    "powermeter03_108_eng",
                    "powermeter03_109_eng",
                    "powermeter03_110_eng",
                    "powermeter03_111_eng",
                    "powermeter03_112_eng",
                    "powermeter03_113_eng",
                    "powermeter03_114_eng",
                    "powermeter03_115_eng",
                    "powermeter03_116_eng",
                    "powermeter03_201_eng",
                    "powermeter03_202_eng",
                    "powermeter03_203_eng",
                    "powermeter03_204_eng",
                    "powermeter03_205_eng",
                    "powermeter03_206_eng",
                    "powermeter03_207_eng",
                    "powermeter03_208_eng",
                    "powermeter03_209_eng",
                    "powermeter03_210_eng",
                    "powermeter03_301_eng",
                    "powermeter03_302_eng",
                    "powermeter03_303_eng",
                    "powermeter03_401_eng",
                    "powermeter03_501_eng",
                    "powermeter04_05_101_eng",
                    "powermeter04_05_201_eng",
                    "powermeter04_101_eng",
                    "powermeter04_102_eng",
                    "powermeter04_103_eng",
                    "powermeter04_104_eng",
                    "powermeter04_105_eng",
                    "powermeter04_106_eng",
                    "powermeter04_107_eng",
                    "powermeter04_108_eng",
                    "powermeter04_109_eng",
                    "powermeter04_201_eng",
                    "powermeter04_202_eng",
                    "powermeter04_203_eng",
                    "powermeter04_204_eng",
                    "powermeter04_205_eng",
                    "powermeter04_301_eng",
                    "powermeter04_302_eng",
                    "powermeter04_303_eng",
                    "powermeter04_304_eng",
                    "powermeter04_401_eng",
                    "powermeter04_402_eng",
                    "powermeter04_403_eng",
                    "powermeter04_404_eng",
                    "powermeter06_100_eng",
                    "powermeter06_103_eng",
                    "powermeter06_104_eng",
                    "powermeter07_101_eng",
                    "powermeter07_102_eng",
                    "powermeter07_103_eng",
                    "powermeter07_104_eng",
                    "powermeter07_105_eng",
                    "powermeter07_106_eng",
                    "powermeter07_107_eng",
                    "powermeter07_108_eng",
                    "powermeter07_109_eng",
                    "powermeter07_110_eng",
                    "powermeter07_201_eng",
                    "powermeter07_202_eng",
                    "powermeter07_203_eng",
                    "powermeter07_204_eng",
                    "powermeter07_205_eng",
                    "powermeter07_206_eng",
                    "powermeter07_207_eng",
                    "powermeter07_208_eng",
                    "powermeter07_209_eng",
                    "powermeter07_210_eng",
                    "powermeter11_101_eng",
                    "powermeter11_201_eng",
                    "powermeter12_101_eng",
                    "Air02_501_accumulatedflow_Dec",
                    "Air02_501_accumulatedflow_Int",
                    "Air02_501_instantaneousflow",
                    "Air02_accumulatedflow_Dec",
                    "Air02_accumulatedflow_Int",
                    "Air02_instantaneousflow",
                    "Air03_accumulatedflow_Dec",
                    "Air03_accumulatedflow_Int",
                    "Air03_instantaneousflow",
                    "Air04_accumulatedflow_Dec",
                    "Air04_accumulatedflow_Int",
                    "Air04_instantaneousflow",
                    "Air06_accumulatedflow_Dec",
                    "Air06_accumulatedflow_Int",
                    "Air06_instantaneousflow",
                    "Room_RH_01",
                    "Room_RH_02",
                    "Room_RH_03",
                    "Room_RH_04",
                    "Room_RH_05",
                    "Room_RH_06",
                    "Room_RH_07",
                    "Room_RH_08",
                    "Room_RH_09",
                    "Room_RH_10",
                    "Room_RH_11",
                    "Room_RH_12",
                    "Room_RH_13",
                    "Room_RH_14",
                    "Room_RH_15",
                    "Room_RH_16",
                    "Room_RH_17",
                    "Room_RH_18",
                    "Room_RH_19",
                    "Room_RH_20",
                    "Room_RH_21",
                    "Room_RH_22",
                    "Room_RH_23",
                    "Room_RH_24",
                    "Room_RH_25",
                    "Room_RH_26",
                    "Room_T_01",
                    "Room_T_02",
                    "Room_T_03",
                    "Room_T_04",
                    "Room_T_05",
                    "Room_T_06",
                    "Room_T_07",
                    "Room_T_08",
                    "Room_T_09",
                    "Room_T_10",
                    "Room_T_11",
                    "Room_T_12",
                    "Room_T_13",
                    "Room_T_14",
                    "Room_T_15",
                    "Room_T_16",
                    "Room_T_17",
                    "Room_T_18",
                    "Room_T_19",
                    "Room_T_20",
                    "Room_T_21",
                    "Room_T_22",
                    "Room_T_23",
                    "Room_T_24",
                    "Room_T_25",
                    "Room_T_26",
                    "Watervalve_OnOff_01",
                    "Watervalve_OnOff_02",
                    "Watervalve_OnOff_03",
                    "Watervalve_OnOff_04",
                    "Watervalve_OnOff_05",
                    "Watervalve_OnOff_06",
                    "Watervalve_OnOff_07",
                    "Watervalve_OnOff_08",
                    "Watervalve_OnOff_09",
                    "Watervalve_OnOff_10",
                    "Watervalve_OnOff_11"]
    arrPointNameCalc = ["WQMonit008_TDS_r",
                        "WQMonit008_TDS_r",
                        "WQMonit008_COD_r",
                        "WQMonit008_TP_r",
                        "WQMonit008_TN_r",
                        "WQMonit008_NH3_N_r",
                        "WQMonit008_PH_r",
                        "WQMonit007_TDS_r",
                        "WQMonit007_COD_r",
                        "WQMonit007_TP_r",
                        "WQMonit007_TN_r",
                        "WQMonit007_NH3_N_r",
                        "WQMonit007_PH_r",
                        "WQMonit006_TDS_r",
                        "WQMonit006_COD_r",
                        "WQMonit006_TP_r",
                        "WQMonit006_TN_r",
                        "WQMonit006_NH3_N_r",
                        "WQMonit006_PH_r",
                        "WQMonit005_TDS_r",
                        "WQMonit005_COD_r",
                        "WQMonit005_TP_r",
                        "WQMonit005_TN_r",
                        "WQMonit005_NH3_N_r",
                        "WQMonit005_PH_r",
                        "WQMonit004_TDS_r",
                        "WQMonit004_COD_r",
                        "WQMonit004_TP_r",
                        "WQMonit004_TN_r",
                        "WQMonit004_NH3_N_r",
                        "WQMonit004_PH_r",
                        "WQMonit003_TDS_r",
                        "WQMonit003_COD_r",
                        "WQMonit003_TP_r",
                        "WQMonit003_TN_r",
                        "WQMonit003_NH3_N_r",
                        "WQMonit003_PH_r",
                        "WQMonit002_TDS_r",
                        "WQMonit002_COD_r",
                        "WQMonit002_TP_r",
                        "WQMonit002_TN_r",
                        "WQMonit002_NH3_N_r",
                        "WQMonit001_TDS_r",
                        "WQMonit001_COD_r",
                        "WQMonit001_TP_r",
                        "WQMonit001_TN_r",
                        "WQMonit001_NH3_N_r",
                        "WQMonit002_PH_r",
                        "WQMonit001_PH_r",
                        "WQMonit008_ZD_r",
                        "WQMonit007_ZD_r",
                        "WQMonit006_ZD_r",
                        "WQMonit005_ZD_r",
                        "WQMonit004_ZD_r",
                        "WQMonit003_ZD_r",
                        "WQMonit002_ZD_r",
                        "WQMonit001_ZD_r",
                        "WQMonit008_SD_r",
                        "WQMonit007_SD_r",
                        "WQMonit006_SD_r",
                        "WQMonit005_SD_r",
                        "WQMonit004_SD_r",
                        "WQMonit003_SD_r",
                        "WQMonit002_SD_r",
                        "WQMonit001_SD_r",
                        "WQMonit008_DO_r",
                        "WQMonit007_DO_r",
                        "WQMonit006_DO_r",
                        "WQMonit005_DO_r",
                        "WQMonit004_DO_r",
                        "WQMonit003_DO_r",
                        "WQMonit002_DO_r",
                        "WQMonit001_DO_r",
                        "WQMonit008_Temp_r",
                        "WQMonit007_Temp_r",
                        "WQMonit006_Temp_r",
                        "WQMonit005_Temp_r",
                        "WQMonit004_Temp_r",
                        "WQMonit003_Temp_r",
                        "WQMonit002_Temp_r",
                        "WQMonit001_ZD_rr",
                        "WQMonit001_SD_rr",
                        "WQMonit001_DO_rr",
                        "WQMonit001_Temp_r",
                        "powermeter01_701_xz_eng",
                        "powermeter01_601_xz_eng",
                        "powermeter01_501_xz_eng",
                        "powermeter01_401_xz_eng",
                        "powermeter01_301_xz_eng",
                        "powermeter01_201_xz_eng",
                        "powermeter01_101_xz_eng",
                        "powermeter06_100_xz_eng",
                        "powermeter11_201_xz_eng",
                        "powermeter02_500_eng",
                        "powermeter05_000_eng",
                        "powermeter04_000_eng",
                        "powermeter11_101_xz_eng",
                        "powermeter07_200_xz_eng",
                        "powermeter02_300_xz_eng",
                        "powermeter07_200_eng",
                        "powermeter02_300_eng",
                        "powermeter04_000_engH",
                        "powermeter11_201_xz_engH",
                        "powermeter07_210_engH",
                        "powermeter07_209_engH",
                        "powermeter07_208_engH",
                        "powermeter07_207_engH",
                        "powermeter07_206_engH",
                        "powermeter07_205_engH",
                        "powermeter07_204_engH",
                        "powermeter07_203_engH",
                        "powermeter07_202_engH",
                        "powermeter07_201_engH",
                        "powermeter07_200_xz_engH",
                        "powermeter11_101_xz_engH",
                        "powermeter01_701_engH",
                        "powermeter01_601_engH",
                        "powermeter01_501_engH",
                        "powermeter01_401_engH",
                        "powermeter01_301_engH",
                        "powermeter01_201_engH",
                        "powermeter01_101_engH",
                        "powermeter04_000_engD",
                        "powermeter11_201_xz_engD",
                        "powermeter07_210_engD",
                        "powermeter07_209_engD",
                        "powermeter07_208_engD",
                        "powermeter07_207_engD",
                        "powermeter07_206_engD",
                        "powermeter07_205_engD",
                        "powermeter07_204_engD",
                        "powermeter07_203_engD",
                        "powermeter07_202_engD",
                        "powermeter07_201_engD",
                        "powermeter07_200_xz_engD",
                        "powermeter11_101_xz_engD",
                        "powermeter01_701_engD",
                        "powermeter01_601_engD",
                        "powermeter01_501_engD",
                        "powermeter01_401_engD",
                        "powermeter01_301_engD",
                        "powermeter01_201_engD",
                        "powermeter01_101_engD",
                        "powermeter04_000_engW",
                        "powermeter11_101_xz_engW",
                        "powermeter11_201_xz_engW",
                        "powermeter04_000_engM",
                        "powermeter11_201_xz_engM",
                        "powermeter07_210_engM",
                        "powermeter07_209_engM",
                        "powermeter07_208_engM",
                        "powermeter07_207_engM",
                        "powermeter07_206_engM",
                        "powermeter07_205_engM",
                        "powermeter07_204_engM",
                        "powermeter07_203_engM",
                        "powermeter07_202_engM",
                        "powermeter07_201_engM",
                        "powermeter07_200_xz_engM",
                        "powermeter11_101_xz_engM",
                        "powermeter01_701_engM",
                        "powermeter01_601_engM",
                        "powermeter01_501_engM",
                        "powermeter01_401_engM",
                        "powermeter01_301_engM",
                        "powermeter01_201_engM",
                        "powermeter01_101_engM"]
    arrPointNameCalc2 = ["powermeter06_qita_energy",
                        "powermeter03_kongzhifa_energy",
                        "powermeter03_ruanshui_energy",
                        "powermeter02_chanrao_energy",
                        "powermeter02_jingshui_energy",
                        "plant001_energy",
                        "powermeter07_others_xz_energy",
                        "powermeter12_000_energy",
                        "powermeter11_000_energy",
                        "powermeter06_000_energy",
                        "powermeter06_biluchejian_energy",
                        "powermeter07_000_energy",
                        "powermeter07_sushe_energy",
                        "powermeter05_000_energy",
                        "powermeter01_office_xz_energy",
                        "powermeter04_chuisu_xz_energy",
                        "powermeter03_zhusu_xz_energy",
                        "powermeter02_zidonghua_xz_energy",
                        "powermeter01_office_energy",
                        "powermeter03_000_energy",
                        "powermeter02_000_energy",
                        "powermeter01_000_energy",
                        "powermeter04_000_energy",
                        "powermeter03_zhusu_energy",
                        "powermeter04_chuisu_energy",
                        "powermeter02_zidonghua_energy",
                         "plant001_energyH",
                         "powermeter06_biluchejian_energyH",
                         "powermeter06_qita_energyH",
                         "powermeter03_kongzhifa_energyH",
                         "powermeter03_ruanshui_energyH",
                         "powermeter02_chanrao_energyH",
                         "powermeter02_jingshui_energyH",
                         "powermeter07_others_xz_energyH",
                         "powermeter12_000_energyH",
                         "powermeter11_000_energyH",
                         "powermeter07_000_energyH",
                         "powermeter06_000_energyH",
                         "powermeter05_000_energyH",
                         "powermeter03_000_energyH",
                         "powermeter02_000_energyH",
                         "powermeter01_000_energyH",
                         "powermeter04_000_energyH",
                         "powermeter03_zhusu_energyH",
                         "powermeter04_chuisu_energyH",
                         "powermeter02_zidonghua_energyH",
                         "powermeter06_biluchejian_energyD",
                         "powermeter06_qita_energyD",
                         "powermeter03_kongzhifa_energyD",
                         "powermeter03_ruanshui_energyD",
                         "powermeter02_chanrao_energyD",
                         "powermeter02_jingshui_energyD",
                         "powermeter07_others_xz_energyD",
                         "powermeter12_000_energyD",
                         "powermeter11_000_energyD",
                         "powermeter07_000_energyD",
                         "powermeter06_000_energyD",
                         "powermeter05_000_energyD",
                         "plant001_energyD",
                         "powermeter03_000_energyD",
                         "powermeter02_000_energyD",
                         "powermeter01_000_energyD",
                         "powermeter04_000_energyD",
                         "powermeter03_zhusu_energyD",
                         "powermeter04_chuisu_energyD",
                         "powermeter02_zidonghua_energyD",
                         "powermeter12_000_energyW",
                         "powermeter11_000_energyW",
                         "powermeter07_000_energyW",
                         "powermeter06_000_energyW",
                         "powermeter05_000_energyW",
                         "powermeter03_000_energyW",
                         "powermeter02_000_energyW",
                         "powermeter01_000_energyW",
                         "powermeter04_000_energyW",
                         "powermeter03_zhusu_energyW",
                         "powermeter04_chuisu_energyW",
                         "powermeter02_zidonghua_energyW",
                         "powermeter06_biluchejian_energyM",
                         "powermeter06_qita_energyM",
                         "powermeter03_kongzhifa_energyM",
                         "powermeter03_ruanshui_energyM",
                         "powermeter02_chanrao_energyM",
                         "powermeter02_jingshui_energyM",
                         "powermeter07_others_xz_energyM",
                         "powermeter12_000_energyM",
                         "powermeter11_000_energyM",
                         "powermeter07_000_energyM",
                         "powermeter06_000_energyM",
                         "powermeter05_000_energyM",
                         "plant001_energyM",
                         "powermeter03_000_energyM",
                         "powermeter02_000_energyM",
                         "powermeter01_000_energyM",
                         "powermeter04_000_energyM",
                         "powermeter03_zhusu_energyM",
                         "powermeter04_chuisu_energyM",
                         "powermeter02_zidonghua_energyM",
                         "powermeter12_000_energyM_Ratio",
                         "powermeter12_000_energyD_Ratio",
                         "powermeter11_000_energyM_Ratio",
                         "powermeter07_000_energyM_Ratio",
                         "powermeter06_000_energyM_Ratio",
                         "powermeter05_000_energyM_Ratio",
                         "powermeter11_000_energyD_Ratio",
                         "powermeter07_000_energyD_Ratio",
                         "powermeter06_000_energyD_Ratio",
                         "powermeter05_000_energyD_Ratio",
                         "powermeter04_000_energyM_Ratio",
                         "powermeter03_000_energyM_Ratio",
                         "powermeter02_000_energyM_Ratio",
                         "powermeter01_000_energyM_Ratio",
                         "powermeter04_000_energyD_Ratio",
                         "powermeter03_000_energyD_Ratio",
                         "powermeter02_000_energyD_Ratio",
                         "powermeter01_000_energyD_Ratio"]

    errors = []

    def setUp(self):
        self.start = datetime.datetime.now()
        self.logger = BeopTools.init_log(r'%s\log\%s.txt' % (sys.path[0], self.testCaseID))

    def tearDown(self):
        self.offline = False
        use1 = str((datetime.datetime.now() - self.start).seconds)
        use = use1 + "s"
        print("本次用例执行时间为%s" % use)
        self.now = time.strftime("%Y-%m-%d %H:%M:%S", time.localtime())

    def Test(self):
        prjId = 396
        prjName = '开能环保'
        startTime = time.strftime("%Y-%m-%d %H:%M:%S",time.localtime())
        zeroTime = time.strftime("%Y-%m-%d 00:00:00",time.localtime())

        # 原始点
        dictData = self.GetHistoryData(prjId, prjName, self.arrPointNameOri, zeroTime, startTime)
        self.CalcContain(dictData)

        # 计算点
        dictData = self.GetHistoryData(prjId, prjName, self.arrPointNameCalc, zeroTime, startTime)
        self.CalcContain(dictData)

        dictData = self.GetHistoryData(prjId, prjName, self.arrPointNameCalc2, zeroTime, startTime)
        self.CalcContain(dictData)

        BeopTools.raiseError(self.errors, self.testCaseID)
        print('开能环保点值突变，测试完成！')

    def GetHistoryData(self, projId, projName, arrPtName, timeStart, timeEnd):
        rt = None
        a = BeopTools()
        data = {
                "projectId":str(projId),
                "pointList":arrPtName,
                "timeStart":timeStart,
                "timeEnd":timeEnd,
                "timeFormat":"h1"
                }
        url = "http://%s/get_history_data_padded_reduce"%app.config['SERVERIP']
        try:
            rt = a.postJsonToken(url, data, 20)
        except Exception as e:
            print(e.__str__())
            self.errors.append("错误信息[%s]%s---访问%s接口失败,请检查!" % (BeopTools.getTime(), self.testCaseID, url, ))
        if rt and isinstance(rt, dict):
            value = rt.get('data')
            if value:
                return value
            else:
                strPtName = ''
                for i in range(len(arrPtName)):
                    strPtName += arrPtName[i] + ','
                self.errors.append("错误信息%s项目 在%s~%s没有获取到历史数据!点名列表:%s" % (projName, timeStart, timeEnd, strPtName))
        else:
            self.errors.append("错误信息[%s]%s---接口:%s 参数:%s 返回结果不正确!为%s" % (BeopTools.nowTime(), self.testCaseID, self.url, json.dumps(data), json.dumps(rt)))
        return {}

    def CalcContain(self, dictData):
        for name in dictData:
            arr = dictData.get(name)
            if len(arr) > 0:
                self.CalcMutationValue(arr, name)

    def CalcMutationValue(self, arrData, name):
        avg = np.mean(arrData)
        flag = np.std(arrData) * 6
        for val in arrData:
            if abs(val - avg) > flag:
                self.errors.append('点：' + name + '值：' + val + '明显突变！')


if __name__ == '__main__':
    suite = unittest.TestSuite()
    suite.addTest(Calc026('Test'))
    runner = unittest.TextTestRunner()
    result = runner.run(suite)
