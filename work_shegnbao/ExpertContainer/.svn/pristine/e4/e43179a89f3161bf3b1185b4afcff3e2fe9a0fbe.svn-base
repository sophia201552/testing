# coding=utf-8
from ExpertContainer.api.views import *
import pytest
import json

expected = [{'sample': 'get_act_time()', 'name': 'get_act_time', 'dis_cription': 'get the current system time',
             'api_type': 'time function', 'add_id': 0}, {'sample': 'time_get_day_begin()', 'name': 'time_get_day_begin',
                                                         'dis_cription': "get time format for today's zero hour",
                                                         'api_type': 'time function', 'add_id': 0},
            {'sample': 'time_get_week_begin()', 'name': 'time_get_week_begin',
             'dis_cription': "get zero hour for this week's monday ", 'api_type': 'time function', 'add_id': 0},
            {'sample': 'time_get_hour_begin()', 'name': 'time_get_hour_begin',
             'dis_cription': 'get time format for this hour and the minute is 0', 'api_type': 'time function',
             'add_id': 0}, {'sample': 'time_get_month_begin()', 'name': 'time_get_month_begin',
                            'dis_cription': 'get time format for this month at the first day',
                            'api_type': 'time function', 'add_id': 0},
            {'sample': 'time_get_year_begin()', 'name': 'time_get_year_begin',
             'dis_cription': 'get the frist day of this year', 'api_type': 'time function', 'add_id': 0},
            {'sample': 'time_to_string(get_act_time())', 'name': 'time_to_string',
             'dis_cription': 'format time object to string', 'api_type': 'time function', 'add_id': 0},
            {'sample': "time_from_string('2016-1-1 10:00:00')", 'name': 'time_from_string',
             'dis_cription': 'format date string to time object', 'api_type': 'time function', 'add_id': 0}, {
                'sample': "equipTag = 'Chiller' \npointMap = {'ChOnOff':'Ch001_ChOnOff'        ,'ChLeaveEvapTemp':'Ch001_ChLeaveEvapTemp','AmperRatio': 'Ch001_CurrentPercentage'        ,'ModeOnOff':'Ch001_AutoMode',} \ndiagnosis_equipment_chiller('冷热源','冷水系统', '1#冷水机组',equipTag, pointMap)",
                'name': 'diagnosis_equipment_chiller', 'dis_cription': 'diagnosis chiller',
                'api_type': 'diagnosis function', 'add_id': 1}, {
                'sample': "equipTag = 'singleSensor' \npointMap = {'point': 'ZL_F9_FAU001_RH'}\ndiagnosis_equipment_sensor_common('末端',sensor['page'], sensor['label'],equipTag, pointMap,1, 99)",
                'name': 'diagnosis_equipment_sensor_common', 'dis_cription': 'diagnosis sensor',
                'api_type': 'diagnosis function', 'add_id': 1},
            {'sample': 'diagnosis_rank_this_day(projId)', 'name': 'diagnosis_rank_this_day',
             'dis_cription': 'Statistical diagnosis of today', 'api_type': 'diagnosis function', 'add_id': 1},
            {'sample': 'diagnosis_rank_this_week(projId)', 'name': 'diagnosis_rank_this_week',
             'dis_cription': 'Statistical diagnosis of this week', 'api_type': 'diagnosis function', 'add_id': 1},
            {'sample': "diagnosis_rank_in_time_range(projId,'2016-09-06 00:00:00','2016-09-06 11:00:00')",
             'name': 'diagnosis_rank_in_time_range', 'dis_cription': 'Statistical diagnosis of the given time',
             'api_type': 'diagnosis function', 'add_id': 1},
            {'sample': 'stat_fault_by_faultname(projId)', 'name': 'stat_fault_by_faultname',
             'dis_cription': 'Failure number and failure long statistics of earlier this month', 'api_type': '诊断',
             'add_id': 1},
            {'sample': "stat_fault_worktime_by_faultname(projId,'2016-09-06 00:00:00','2016-09-06 11:00:00')",
             'name': 'stat_fault_worktime_by_faultname', 'dis_cription': 'Failure number and failure long statistics',
             'api_type': '诊断', 'add_id': 1},
            {'sample': 'stat_fault_by_buildingId(projId)', 'name': 'stat_fault_by_buildingId',
             'dis_cription': 'Failure number and failure long statistics of each building of earlier this month',
             'api_type': '诊断', 'add_id': 1}, {'sample': 'stat_fault_by_zoneId(projId)', 'name': 'stat_fault_by_zoneId',
                                              'dis_cription': 'Failure number and failure long statistics of each zone of earlier this month',
                                              'api_type': '诊断', 'add_id': 1}, {
                'sample': "stat_fault_by_faultname_time(projId,'2016-09-06 00:00:00','2016-09-08 11:00:00','08:00:00','17:00:00')",
                'name': 'stat_fault_by_faultname_time',
                'dis_cription': 'Failure number and failure long statistics of earlier this month in work time',
                'api_type': '诊断', 'add_id': 1}, {
                'sample': "get_energy_by_faultNames(projId,['Zone air temperature setpoint too cold'],'2016-09-06 00:00:00','2016-09-08 11:00:00','08:00:00','Day')",
                'name': 'get_energy_by_faultNames', 'dis_cription': 'For the fault of the energy consumption',
                'api_type': '诊断', 'add_id': 1},
            {'sample': "get_energy_all_by_time(projId,'2016-09-06 00:00:00','2016-09-08 11:00:00')",
             'name': 'get_energy_all_by_time',
             'dis_cription': 'Statistics total number of article, waste of energy consumption', 'api_type': '诊断',
             'add_id': 1}, {'sample': "get_energy_by_systemName(projId,'2016-09-06 00:00:00','2016-09-08 11:00:00')",
                            'name': 'get_energy_by_systemName',
                            'dis_cription': 'Statistics total number of article, waste of energy consumption group by system name',
                            'api_type': '诊断', 'add_id': 1}, {
                'sample': "get_energylist_by_faultName_order_by_energy(projId,'2016-09-06 00:00:00','2016-09-08 11:00:00')",
                'name': 'get_energylist_by_faultName_order_by_energy',
                'dis_cription': 'In descending order section energy waste of energy consumption information',
                'api_type': '诊断', 'add_id': 1},
            {'sample': "get_new_order_num(projId,'2016-09-06 00:00:00','2016-09-08 11:00:00')",
             'name': 'get_new_order_num', 'dis_cription': 'The number of new work order', 'api_type': '诊断',
             'add_id': 1}, {'sample': "get_finished_order_num(projId,'2016-09-06 00:00:00','2016-09-08 11:00:00')",
                            'name': 'get_finished_order_num', 'dis_cription': 'The number of finished work order',
                            'api_type': '诊断', 'add_id': 1},
            {'sample': "get_response_time_avg(projId,'2016-09-06 00:00:00','2016-09-08 11:00:00')",
             'name': 'get_response_time_avg', 'dis_cription': 'The average response time', 'api_type': '诊断',
             'add_id': 1}, {'sample': "get_data('pointName')", 'name': 'get_data', 'dis_cription': 'get the real data',
                            'api_type': 'data get', 'add_id': 1},
            {'sample': "get_data_at_time('pointName','2016-1-1 10:00:00')", 'name': 'get_data_at_time',
             'dis_cription': 'get the data of the given time', 'api_type': 'data get', 'add_id': 1},
            {'sample': "get_his_data_time_range(['pointName'],'2016-1-1 10:00:00','2016-1-1 11:00:00','m5')",
             'name': 'get_his_data_time_range',
             'dis_cription': 'get the history data which time between two given times', 'api_type': 'data get',
             'add_id': 1}, {'sample': "get_avg_data_of_last_hour('pointName')", 'name': 'get_avg_data_of_last_hour',
                            'dis_cription': 'get average value of last hour', 'api_type': 'data get', 'add_id': 1},
            {'sample': "get_history_data_of_last_hour('pointName')", 'name': 'get_history_data_of_last_hour',
             'dis_cription': 'get the history data of last hour', 'api_type': 'data get', 'add_id': 1},
            {'sample': "get_status_timeratio_of_last_hour('pointName', nStatus)",
             'name': 'get_status_timeratio_of_last_hour',
             'dis_cription': 'get the percentage of two status of last hour', 'api_type': 'data get', 'add_id': 1},
            {'sample': 'get_storage_by_projId()', 'name': 'get_storage_by_projId', 'dis_cription': 'get storage',
             'api_type': '数据获取', 'add_id': 1},
            {'sample': 'get_fault_notice_count()', 'name': 'get_fault_notice_count', 'dis_cription': 'get notice count',
             'api_type': '数据获取', 'add_id': 1}, {
                'sample': "calc_avg_if_run(['point_name1','point_name2'],'your condition',['run_point_name1','run_point_name2'])",
                'name': 'calc_avg_if_run',
                'dis_cription': 'get average value of some points at running status,for example,effective average value of current',
                'api_type': 'energy calculation', 'add_id': 1},
            {'sample': "calc_count_in_day('pointName','m5',-1)", 'name': 'calc_count_in_day',
             'dis_cription': 'get count of open and close', 'api_type': 'energy calculation', 'add_id': 1},
            {'sample': "calc_sum_hour('pointName',1/12.0,'m5')", 'name': 'calc_sum_hour',
             'dis_cription': 'get sum value of the data in last hour', 'api_type': 'energy calculation', 'add_id': 1},
            {'sample': "calc_sum_day('pointName',1/12.0,'m5')", 'name': 'calc_sum_day',
             'dis_cription': 'get sum value of the data in today', 'api_type': 'energy calculation', 'add_id': 1},
            {'sample': "calc_sum_last_day('pointName',1/12.0,'m5')", 'name': 'calc_sum_last_day',
             'dis_cription': 'get sum value of the data in yesterday', 'api_type': 'energy calculation', 'add_id': 1},
            {'sample': "calc_sum_one_day('pointName',1/12.0,'m5','2016-1-1 10:00:00')", 'name': 'calc_sum_one_day',
             'dis_cription': 'get sum value of the data in one day', 'api_type': 'energy calculation', 'add_id': 1},
            {'sample': "calc_sum_this_week('pointName',1/12.0,'m5')", 'name': 'calc_sum_this_week',
             'dis_cription': 'get sum value of the data in this week', 'api_type': 'energy calculation', 'add_id': 1},
            {'sample': "calc_sum_one_week('pointName',1/12.0,'m5',-1)", 'name': 'calc_sum_one_week',
             'dis_cription': 'get sum value of the data in a week which is a few weeks ago',
             'api_type': 'energy calculation', 'add_id': 1},
            {'sample': "calc_sum_this_month('pointName',1.0,'h1')", 'name': 'calc_sum_this_month',
             'dis_cription': 'get sum value of the data in this month', 'api_type': 'energy calculation', 'add_id': 1},
            {'sample': "calc_sum_one_month('pointName',1.0,'h1',6)", 'name': 'calc_sum_one_month',
             'dis_cription': 'get sum value of the data in one month', 'api_type': 'energy calculation', 'add_id': 1},
            {'sample': "calc_sum_this_year('pointName',1.0)", 'name': 'calc_sum_this_year',
             'dis_cription': 'get sum value of the data in this year', 'api_type': 'energy calculation', 'add_id': 1},
            {'sample': "calc_sum_last_year('pointName',1.0)", 'name': 'calc_sum_last_year',
             'dis_cription': 'get sum value of the data in last year', 'api_type': 'energy calculation', 'add_id': 1},
            {'sample': "calc_sum_year('pointName',1.0,2016)", 'name': 'calc_sum_year',
             'dis_cription': 'get sum value of the data in one year', 'api_type': 'energy calculation', 'add_id': 1},
            {'sample': "calc_sum_in_points(['pointName1','pointName2'])", 'name': 'calc_sum_in_points',
             'dis_cription': 'get sum value of some real data', 'api_type': 'energy calculation', 'add_id': 1},
            {'sample': "calc_power_by_run('point_name',A float number)", 'name': 'calc_power_by_run',
             'dis_cription': 'get pump power', 'api_type': 'energy calculation', 'add_id': 1},
            {'sample': "calc_power_by_amp('point_name',A float number)", 'name': 'calc_power_by_amp',
             'dis_cription': 'get cooling machine power', 'api_type': 'energy calculation', 'add_id': 1},
            {'sample': "calc_power_by_vsd_run('point_name',A float number,A float number)",
             'name': 'calc_power_by_vsd_run', 'dis_cription': 'get variable frequency pump power',
             'api_type': 'energy calculation', 'add_id': 1},
            {'sample': "calc_delta_if_run('a_point_name', 'b_point_name', 'run_point_name')",
             'name': 'calc_delta_if_run', 'dis_cription': 'Calculate the difference, such as reaching the temperature',
             'api_type': 'energy calculation', 'add_id': 1},
            {'sample': "calc_max_in_points(['pointname1','pointname2','pointname3'])", 'name': 'calc_max_in_points',
             'dis_cription': 'get max value of some data', 'api_type': 'energy calculation', 'add_id': 1},
            {'sample': "calc_min_in_points(['pointname1','pointname2','pointname3'])", 'name': 'calc_min_in_points',
             'dis_cription': 'get min value of some data', 'api_type': 'energy calculation', 'add_id': 1},
            {'sample': "calc_max_in_day('pointname','m5')", 'name': 'calc_max_in_day',
             'dis_cription': 'get max value of the data in this day', 'api_type': 'energy calculation', 'add_id': 1}, {
                'sample': "calc_load_wo_flow('EnterEvapPointName', 'LeaveEvapPointName', A float number, 'OnOffPointName')",
                'name': 'calc_load_wo_flow', 'dis_cription': 'get chiller load', 'api_type': 'energy calculation',
                'add_id': 1}, {
                'sample': "calc_load_w_flow('EnterEvapPointName', 'LeaveEvapPointName', 'flowPointName', 'OnOffPointName')",
                'name': 'calc_load_w_flow', 'dis_cription': 'get chiller load', 'api_type': 'energy calculation',
                'add_id': 1},
            {'sample': "calc_eff_smooth('LoadPointName', 'powerPointName')", 'name': 'calc_eff_smooth',
             'dis_cription': 'get the efficiency of some point', 'api_type': 'energy calculation', 'add_id': 1},
            {'sample': "calc_compare_same_time_diff_day('pointName','m5')", 'name': 'calc_compare_same_time_diff_day',
             'dis_cription': 'compared with the same time in yesterday', 'api_type': 'energy calculation', 'add_id': 1},
            {'sample': "calc_subtraction_for_given_time('pointName','2016-7-1 10:00:00')",
             'name': 'calc_subtraction_for_given_time',
             'dis_cription': 'Calculates the difference between the value of the current time and the value of a given time',
             'api_type': 'energy calculation', 'add_id': 1},
            {'sample': "calc_accumulate(strAccumPointName, pointName, strBirthTime, 'm5', 1.0)",
             'name': 'calc_accumulate',
             'dis_cription': "From the beginning of the 'birthTime', the value of the 'pointName' added to the 'strAccumPointName', every five minutes accumulated once",
             'api_type': 'energy calculation', 'add_id': 1},
            {'sample': "log_str('my test point is:%s'%(get_data('test'))", 'name': 'log_str',
             'dis_cription': 'output your log information', 'api_type': 'time function', 'add_id': 0},
            {'sample': "patch_data_sharp_clock(4, None, '2016-10-09 11:05:00')", 'name': 'patch_data_sharp_clock',
             'dis_cription': 'fix data at moment', 'api_type': 'time function', 'add_id': 1},
            {'sample': '', 'name': 'get_work_order_status', 'dis_cription': 'get order status',
             'api_type': 'time function', 'add_id': 0},
            {'sample': '', 'name': 'send_work_order', 'dis_cription': 'send order', 'api_type': 'time function',
             'add_id': 0},
            {'sample': "get_work_order_id('问题通知222222222', 'golding.gu@rnbtech.com.hk')", 'name': 'get_work_order_id',
             'dis_cription': 'get order ID', 'api_type': 'time function', 'add_id': 0},
            {'sample': 'close_work_order(10243)', 'name': 'close_work_order', 'dis_cription': 'close order',
             'api_type': 'time function', 'add_id': 0},
            {'sample': 'get_fault_last_update_time_status()', 'name': 'get_fault_last_update_time_status',
             'dis_cription': 'get diagnosis fault latest status', 'api_type': 'time function', 'add_id': 0},
            {'sample': "calc_monthly_delta_of_accum('accumPointName')", 'name': 'calc_monthly_delta_of_accum',
             'dis_cription': '计算累积量在本月内的增量', 'api_type': 'time function', 'add_id': 0},
            {'sample': ' http_post_json(url, data,t=30)', 'name': 'http_post_json', 'dis_cription': 'Post json数据至url',
             'api_type': 'time function', 'add_id': 0},
            {'sample': ' http_get_json(url, timeout=10)', 'name': 'http_get_json', 'dis_cription': '从url获取json数据',
             'api_type': 'time function', 'add_id': 0},
            {'sample': 'http_post_form(url, data,t=30)', 'name': 'http_post_form', 'dis_cription': 'Post form数据至url',
             'api_type': 'time function', 'add_id': 0},
            {'sample': 'http_post_json_with_cookie(url, data,t=30)', 'name': 'http_post_json_with_cookie',
             'dis_cription': 'Post带cookie的json数据至url', 'api_type': 'time function', 'add_id': 0},
            {'sample': 'http_get_with_cookie(url,timeout=10)', 'name': 'http_get_with_cookie',
             'dis_cription': '从url获取json数据其中获取时发送cookie信息', 'api_type': 'time function', 'add_id': 0},
            {'sample': 'http_get_data_text(url,timeout=10)', 'name': 'http_get_data_text',
             'dis_cription': '从url获取str数据', 'api_type': 'time function', 'add_id': 0},
            {'sample': 'http_post_data_files(url,files,timeout=10)', 'name': 'http_post_data_files',
             'dis_cription': 'post文件至url', 'api_type': 'time function', 'add_id': 0},
            {'sample': '', 'name': 'send_work_order', 'dis_cription': 'send order', 'api_type': 'time function',
             'add_id': 0}, {
                'sample': 'send_work_order_smart(strWorkOrderName, fn, executeNameList, nDelayLimitMinutes, nSolveMinutes)',
                'name': 'send_work_order_smart', 'dis_cription': 'send order', 'api_type': 'time function',
                'add_id': 0},
            {'sample': "calc_hourly_delta_of_accum('pointName')", 'name': 'calc_hourly_delta_of_accum',
             'dis_cription': '计算本项目某个点本小时（相对于小时初）的增量', 'api_type': 'energy calculation', 'add_id': 0},
            {'sample': "calc_daily_delta_of_accum('pointName')", 'name': 'calc_daily_delta_of_accum',
             'dis_cription': '计算本项目某个点本日（相对于今日零点零分）的增量', 'api_type': 'energy calculation', 'add_id': 0},
            {'sample': "calc_weekly_delta_of_accum('pointName')", 'name': 'calc_weekly_delta_of_accum',
             'dis_cription': '计算本项目某个点本周（相对于本周一零点零分）的增量', 'api_type': 'energy calculation', 'add_id': 0},
            {'sample': "calc_monthly_delta_of_accum('pointName')", 'name': 'calc_monthly_delta_of_accum',
             'dis_cription': '计算本项目某个点本月（相对于本月一日零点零分）的增量', 'api_type': 'energy calculation', 'add_id': 0},
            {'sample': "filter_point_only_increase('pointName')", 'name': 'filter_point_only_increase',
             'dis_cription': '过滤突降的数据错点', 'api_type': 'data get', 'add_id': 1},
            {'sample': "filter_point_gt_zero('pointName')", 'name': 'filter_point_gt_zero',
             'dis_cription': '过滤不大于灵的数据错点', 'api_type': 'data get', 'add_id': 1},
            {'sample': 'sys_get_mq_count()', 'name': 'sys_get_mq_count', 'dis_cription': 'no documents till now',
             'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'time_get_last_week_begin()', 'name': 'time_get_last_week_begin',
             'dis_cription': 'no documents till now', 'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'time_get_last_day_begin()', 'name': 'time_get_last_day_begin',
             'dis_cription': 'no documents till now', 'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'time_get_last_month_begin()', 'name': 'time_get_last_month_begin',
             'dis_cription': 'no documents till now', 'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'send_beopmsg()', 'name': 'send_beopmsg', 'dis_cription': 'no documents till now',
             'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'send_alarm_simple()', 'name': 'send_alarm_simple', 'dis_cription': 'no documents till now',
             'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'create_all_energy_standard_point_by_tag()', 'name': 'create_all_energy_standard_point_by_tag',
             'dis_cription': 'no documents till now', 'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'get_hours_ago_fault_sent_user()', 'name': 'get_hours_ago_fault_sent_user',
             'dis_cription': 'no documents till now', 'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'send_fault_notice_by_email()', 'name': 'send_fault_notice_by_email',
             'dis_cription': 'no documents till now', 'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'send_message_by_phonenum()', 'name': 'send_message_by_phonenum',
             'dis_cription': 'no documents till now', 'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'get_hours_ago_web_report_sent_user()', 'name': 'get_hours_ago_web_report_sent_user',
             'dis_cription': 'no documents till now', 'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'send_web_report()', 'name': 'send_web_report', 'dis_cription': 'no documents till now',
             'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'set_data()', 'name': 'set_data', 'dis_cription': 'no documents till now',
             'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'set_data_algorithm()', 'name': 'set_data_algorithm', 'dis_cription': 'no documents till now',
             'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'set_data_virtual()', 'name': 'set_data_virtual', 'dis_cription': 'no documents till now',
             'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'set_data_calcpoint()', 'name': 'set_data_calcpoint', 'dis_cription': 'no documents till now',
             'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'set_data_time_range()', 'name': 'set_data_time_range', 'dis_cription': 'no documents till now',
             'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'set_data_history_of_this_point()', 'name': 'set_data_history_of_this_point',
             'dis_cription': 'no documents till now', 'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'set_data_history()', 'name': 'set_data_history', 'dis_cription': 'no documents till now',
             'api_type': 'unsorted', 'add_id': 0}, {'sample': 'get_third_party_data()', 'name': 'get_third_party_data',
                                                    'dis_cription': 'no documents till now', 'api_type': 'unsorted',
                                                    'add_id': 0},
            {'sample': 'get_data_time_range()', 'name': 'get_data_time_range', 'dis_cription': 'no documents till now',
             'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'get_his_data_with_time()', 'name': 'get_his_data_with_time',
             'dis_cription': 'no documents till now', 'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'get_data_float()', 'name': 'get_data_float', 'dis_cription': 'no documents till now',
             'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'get_status_change_of_last_hour()', 'name': 'get_status_change_of_last_hour',
             'dis_cription': 'no documents till now', 'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'get_last_value()', 'name': 'get_last_value', 'dis_cription': 'no documents till now',
             'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'get_data_all_of_project()', 'name': 'get_data_all_of_project',
             'dis_cription': 'no documents till now', 'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'set_clear_data_from_site()', 'name': 'set_clear_data_from_site',
             'dis_cription': 'no documents till now', 'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'set_data_from_site()', 'name': 'set_data_from_site', 'dis_cription': 'no documents till now',
             'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'copy_data_to_other_project()', 'name': 'copy_data_to_other_project',
             'dis_cription': 'no documents till now', 'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'get_lost_time_ratio_of_today()', 'name': 'get_lost_time_ratio_of_today',
             'dis_cription': 'no documents till now', 'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'get_history_data_of_today()', 'name': 'get_history_data_of_today',
             'dis_cription': 'no documents till now', 'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'filter_point_energy_consumption()', 'name': 'filter_point_energy_consumption',
             'dis_cription': 'no documents till now', 'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'patch_data_sharp_clock_every_day()', 'name': 'patch_data_sharp_clock_every_day',
             'dis_cription': 'no documents till now', 'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'json_to_data()', 'name': 'json_to_data', 'dis_cription': 'no documents till now',
             'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'json_from_data()', 'name': 'json_from_data', 'dis_cription': 'no documents till now',
             'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'get_weather_data()', 'name': 'get_weather_data', 'dis_cription': 'no documents till now',
             'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'weather_get_by_id()', 'name': 'weather_get_by_id', 'dis_cription': 'no documents till now',
             'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'aq_get_by_cityname()', 'name': 'aq_get_by_cityname', 'dis_cription': 'no documents till now',
             'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'get_work_order_create_time()', 'name': 'get_work_order_create_time',
             'dis_cription': 'no documents till now', 'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'finish_work_order()', 'name': 'finish_work_order', 'dis_cription': 'no documents till now',
             'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'reset_work_order_if_open()', 'name': 'reset_work_order_if_open',
             'dis_cription': 'no documents till now', 'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'send_diagnosis_notice()', 'name': 'send_diagnosis_notice',
             'dis_cription': 'no documents till now', 'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'send_diagnosis_notice_by_object()', 'name': 'send_diagnosis_notice_by_object',
             'dis_cription': 'no documents till now', 'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'diagnosis_equipment_valve()', 'name': 'diagnosis_equipment_valve',
             'dis_cription': 'no documents till now', 'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'diagnosis_equipment_ahu()', 'name': 'diagnosis_equipment_ahu',
             'dis_cription': 'no documents till now', 'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'diagnosis_equipment_sensor_t()', 'name': 'diagnosis_equipment_sensor_t',
             'dis_cription': 'no documents till now', 'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'diagnosis_equipment_sensor_p()', 'name': 'diagnosis_equipment_sensor_p',
             'dis_cription': 'no documents till now', 'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'get_failure_number_and_failure_time_of_statistics()',
             'name': 'get_failure_number_and_failure_time_of_statistics', 'dis_cription': 'no documents till now',
             'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'statistics_realtime_fault_algorithm()', 'name': 'statistics_realtime_fault_algorithm',
             'dis_cription': 'no documents till now', 'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'fault_need_check()', 'name': 'fault_need_check', 'dis_cription': 'no documents till now',
             'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'get_fault_data()', 'name': 'get_fault_data', 'dis_cription': 'no documents till now',
             'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'kpi_calc_from_fault()', 'name': 'kpi_calc_from_fault', 'dis_cription': 'no documents till now',
             'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'kpi_sum()', 'name': 'kpi_sum', 'dis_cription': 'no documents till now', 'api_type': 'unsorted',
             'add_id': 0}, {'sample': 'kpi_sum_root()', 'name': 'kpi_sum_root', 'dis_cription': 'no documents till now',
                            'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'send_data_to_mqtt()', 'name': 'send_data_to_mqtt', 'dis_cription': 'no documents till now',
             'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'send_points_to_mqtt()', 'name': 'send_points_to_mqtt', 'dis_cription': 'no documents till now',
             'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'http_get_directly_text()', 'name': 'http_get_directly_text',
             'dis_cription': 'no documents till now', 'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'air_calc_ts_by_t_rh()', 'name': 'air_calc_ts_by_t_rh', 'dis_cription': 'no documents till now',
             'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'air_calc_tl_by_t_rh()', 'name': 'air_calc_tl_by_t_rh', 'dis_cription': 'no documents till now',
             'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'air_calc_h()', 'name': 'air_calc_h', 'dis_cription': 'no documents till now',
             'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'air_calc_x()', 'name': 'air_calc_x', 'dis_cription': 'no documents till now',
             'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'calibration_by_baseline()', 'name': 'calibration_by_baseline',
             'dis_cription': 'no documents till now', 'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'set_data_to_site()', 'name': 'set_data_to_site', 'dis_cription': 'no documents till now',
             'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'get_global_storage()', 'name': 'get_global_storage', 'dis_cription': 'no documents till now',
             'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'set_global_storage()', 'name': 'set_global_storage', 'dis_cription': 'no documents till now',
             'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'cloudpoint_exist()', 'name': 'cloudpoint_exist', 'dis_cription': 'no documents till now',
             'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'cloudpoint_create_virtual()', 'name': 'cloudpoint_create_virtual',
             'dis_cription': 'no documents till now', 'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'get_latest_time()', 'name': 'get_latest_time', 'dis_cription': 'no documents till now',
             'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'hisdata_op_remove_history_data()', 'name': 'hisdata_op_remove_history_data',
             'dis_cription': 'no documents till now', 'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'hisdata_op_remove_history_data_in_timerange()',
             'name': 'hisdata_op_remove_history_data_in_timerange', 'dis_cription': 'no documents till now',
             'api_type': 'unsorted', 'add_id': 0}, {'sample': 'remove_mutation_data()', 'name': 'remove_mutation_data',
                                                    'dis_cription': 'no documents till now', 'api_type': 'unsorted',
                                                    'add_id': 0},
            {'sample': 'hisdata_op_remove_data_by_value()', 'name': 'hisdata_op_remove_data_by_value',
             'dis_cription': 'no documents till now', 'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'update_history_data_replace_value()', 'name': 'update_history_data_replace_value',
             'dis_cription': 'no documents till now', 'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'hisdata_op_replace_pointname()', 'name': 'hisdata_op_replace_pointname',
             'dis_cription': 'no documents till now', 'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'get_cloudpoints_list()', 'name': 'get_cloudpoints_list',
             'dis_cription': 'no documents till now', 'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'get_rawpoints_list()', 'name': 'get_rawpoints_list', 'dis_cription': 'no documents till now',
             'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'autotest_check_name_conflict()', 'name': 'autotest_check_name_conflict',
             'dis_cription': 'no documents till now', 'api_type': 'unsorted', 'add_id': 0},
            {'sample': 'get_web_service_info()', 'name': 'get_web_service_info',
             'dis_cription': 'no documents till now', 'api_type': 'unsorted', 'add_id': 0}]


@pytest.mark.p0
def test_correct():
    rt = do_getAPITreeEnList()
    assert rt, 'actual is null'
    assert len(rt) >= len(expected), 'actual length is not equal to expected,acutal is {0},expected is {1}'.format(
        len(rt), len(expected))

    for item in expected:
        assert item in rt, 'expected value {0} is not in actual'.format(item)
