# -*- encoding=utf-8 -*-
__author__ = 'Eric'

# global api
# 添加的时候请注意顺序：有相同前缀的越短的排在前，大概一样长的按照字母顺序排
#api_type 1:时间函数，4:取数，5:能耗计算,0:系统功能,2诊断

api_type = {1:"时间函数",4:"数据获取",5:"能耗计算",0:"系统功能",2:"诊断"}
api_type_en = {1:"time function",4:"data get",5:"energy calculation",0:"time function",2:"diagnosis function"}

helpMapping_list = \
    [
     
        {'name':'get_act_time', 'add_id':0,'api_type':api_type.get(1),'dis_cription':'获取当前时间', 'sample':'get_act_time()'},
        {'name':'get_server_time', 'add_id':0,'api_type':api_type.get(1),'dis_cription':'获取服务器执行的时间', 'sample':'get_server_time()'},
        {'name':'time_get_day_begin','add_id':0,'api_type':api_type.get(1),'dis_cription':'获取当天的开始时间', 'sample':'time_get_day_begin()'},
        {'name':'time_get_week_begin','add_id':0,'api_type':api_type.get(1),'dis_cription':'获取本周的开始时间', 'sample':'time_get_week_begin()'},
        {'name':'time_get_hour_begin','add_id':0,'api_type':api_type.get(1),'dis_cription':'获取本小时的开始时间', 'sample':'time_get_hour_begin()'},
        {'name':'time_get_month_begin','add_id':0,'api_type':api_type.get(1),'dis_cription':'获取本月的开始时间', 'sample':'time_get_month_begin()'},
        {'name':'time_get_year_begin','add_id':0,'api_type':api_type.get(1),'dis_cription':'获取本年的开始时间', 'sample':'time_get_year_begin()'},
        {'name':'time_to_string','add_id':0,'api_type':api_type.get(1),'dis_cription':'时间对象转日期字符串','sample':"time_to_string(get_act_time())"},
        {'name':'time_from_string','add_id':0,'api_type':api_type.get(1),'dis_cription':'日期字符串转时间对象', 'sample':"time_from_string('2016-1-1 10:00:00')"},

        {'name':'diagnosis_equipment_chiller','add_id':1, 'api_type':api_type.get(2),'dis_cription':'冷机诊断','sample':"equipTag = 'Chiller' \npointMap = {'ChOnOff':'Ch001_ChOnOff'\
        ,'ChLeaveEvapTemp':'Ch001_ChLeaveEvapTemp','AmperRatio': 'Ch001_CurrentPercentage'\
        ,'ModeOnOff':'Ch001_AutoMode',} \ndiagnosis_equipment_chiller('冷热源','冷水系统', '1#冷水机组',equipTag, pointMap)"},
        {'name':'diagnosis_equipment_sensor_common','add_id':1, 'api_type':api_type.get(2),'dis_cription':'传感器诊断','sample':"equipTag = 'singleSensor' \npointMap = {'point': 'ZL_F9_FAU001_RH'}\ndiagnosis_equipment_sensor_common('末端',sensor['page'], sensor['label'],equipTag, pointMap,1, 99)"},
        {'name':'diagnosis_rank_this_day','add_id':1, 'api_type':api_type.get(2),'dis_cription':'当天的诊断统计','sample':"diagnosis_rank_this_day(projId)"},
        {'name':'diagnosis_rank_this_week','add_id':1, 'api_type':api_type.get(2),'dis_cription':'本周的诊断统计','sample':"diagnosis_rank_this_week(projId)"},
        {'name':'diagnosis_rank_in_time_range','add_id':1, 'api_type':api_type.get(2),'dis_cription':'范围时间内的诊断统计','sample':"diagnosis_rank_in_time_range(projId,'2016-09-06 00:00:00','2016-09-06 11:00:00')"},
        {'name':'stat_fault_by_faultname','add_id':1, 'api_type':api_type.get(2),'dis_cription':'本月初到当天的故障个数及故障发生时长的统计','sample':"stat_fault_by_faultname(projId)"},
        {'name':'stat_fault_worktime_by_faultname','add_id':1, 'api_type':api_type.get(2),'dis_cription':'根据给定时间统计的故障个数及故障发生时长','sample':"stat_fault_worktime_by_faultname(projId,'2016-09-06 00:00:00','2016-09-06 11:00:00')"},
        {'name':'stat_fault_by_buildingId','add_id':1, 'api_type':api_type.get(2),'dis_cription':'本月初到当天每个组的故障个数及故障发生时长的统计','sample':"stat_fault_by_buildingId(projId)"},
        {'name':'stat_fault_by_zoneId','add_id':1, 'api_type':api_type.get(2),'dis_cription':'本月初到当天每个页面的故障个数及故障发生时长的统计','sample':"stat_fault_by_zoneId(projId)"},
        {'name':'stat_fault_by_faultname_time','add_id':1, 'api_type':api_type.get(2),'dis_cription':'本月初到当天的工作时间故障个数及故障发生时长的统计','sample':"stat_fault_by_faultname_time(projId,'2016-09-06 00:00:00','2016-09-08 11:00:00','08:00:00','17:00:00')"},
        {'name':'get_energy_by_faultNames','add_id':1, 'api_type':api_type.get(2),'dis_cription':'故障所对应的能耗','sample':"get_energy_by_faultNames(projId,['风阀过大'],'2016-09-06 00:00:00','2016-09-08 11:00:00','08:00:00','Day')"},
        {'name':'get_energy_all_by_time','add_id':1, 'api_type':api_type.get(2),'dis_cription':'统计给定时间段内 故障总条数 、能耗浪费','sample':"get_energy_all_by_time(projId,'2016-09-06 00:00:00','2016-09-08 11:00:00')"},
        {'name':'get_energy_all_by_time_v2','add_id':1, 'api_type':api_type.get(2),'dis_cription':'统计给定时间段内 故障总条数 、能耗浪费','sample':"get_energy_all_by_time_v2(projId,'2016-09-06 00:00:00','2016-09-08 11:00:00')"},
        {'name':'get_energy_by_systemName','add_id':1, 'api_type':api_type.get(2),'dis_cription':'统计给定时间段内 按systemname统计的故障条数、能耗浪费','sample':"get_energy_by_systemName(projId,'2016-09-06 00:00:00','2016-09-08 11:00:00')"},
        {'name':'get_energy_by_systemName_v2','add_id':1, 'api_type':api_type.get(2),'dis_cription':'统计给定时间段内 按systemname统计的故障条数、能耗浪费','sample':"get_energy_by_systemName_v2(projId,'2016-09-06 00:00:00','2016-09-08 11:00:00')"},
        {'name':'get_energylist_by_faultName_order_by_energy','add_id':1, 'api_type':api_type.get(2),'dis_cription':'按节能量降序排列的能耗浪费信息','sample':"get_energylist_by_faultName_order_by_energy(projId,'2016-09-06 00:00:00','2016-09-08 11:00:00')"},
        {'name':'get_energylist_by_faultName_order_by_energy_v2','add_id':1, 'api_type':api_type.get(2),'dis_cription':'按节能量降序排列的能耗浪费信息(新版诊断)','sample':"get_energylist_by_faultName_order_by_energy_v2(projId,'2016-09-06 00:00:00','2016-09-08 11:00:00')"},
        {'name':'get_new_order_num','add_id':1, 'api_type':api_type.get(2),'dis_cription':'新增工单的数量','sample':"get_new_order_num(projId,'2016-09-06 00:00:00','2016-09-08 11:00:00')"},
        {'name':'get_new_order_num_v2','add_id':1, 'api_type':api_type.get(2),'dis_cription':'新增工单的数量','sample':"get_new_order_num_v2(projId,'2016-09-06 00:00:00','2016-09-08 11:00:00')"},
        {'name':'get_finished_order_num','add_id':1, 'api_type':api_type.get(2),'dis_cription':'完成工单的数量','sample':"get_finished_order_num(projId,'2016-09-06 00:00:00','2016-09-08 11:00:00')"},
        {'name':'get_finished_order_num_v2','add_id':1, 'api_type':api_type.get(2),'dis_cription':'完成工单的数量','sample':"get_finished_order_num_v2(projId,'2016-09-06 00:00:00','2016-09-08 11:00:00')"},
        {'name':'get_response_time_avg','add_id':1, 'api_type':api_type.get(2),'dis_cription':'平均响应时间','sample':"get_response_time_avg(projId,'2016-09-06 00:00:00','2016-09-08 11:00:00')"},
        {'name':'get_response_time_avg_v2','add_id':1, 'api_type':api_type.get(2),'dis_cription':'平均响应时间(新版诊断)','sample':"get_response_time_avg_v2(projId,'2016-09-06 00:00:00','2016-09-08 11:00:00')"},

        {'name':'get_data', 'add_id':1,'api_type':api_type.get(4),'dis_cription':'获取点的实时值,默认为浮点数格式', 'sample':"get_data('pointName')"},
        {'name':'get_data_int', 'add_id':1,'api_type':api_type.get(4),'dis_cription':'获取点的实时值整形格式', 'sample':"get_data_int('pointName')"},
        {'name':'get_data_string', 'add_id':1,'api_type':api_type.get(4),'dis_cription':'获取点的实时值字符串格式', 'sample':"get_data_string('pointName')"},
        {'name':'get_data_json', 'add_id':1,'api_type':api_type.get(4),'dis_cription':'获取点的实时值json字典格式', 'sample':"get_data_json('pointName')"},
        {'name':'get_data_at_time', 'add_id':1,'api_type':api_type.get(4),'dis_cription':'获取点的某一时刻的值', 'sample':"get_data_at_time(['pointName'],'2016-1-1 10:00:00')"},
        {'name':'get_his_data_time_range', 'add_id':1,'api_type':api_type.get(4),'dis_cription':'获取点的某段时间的历史值', 'sample':"get_his_data_time_range(['pointName'],'2016-1-1 10:00:00','2016-1-1 11:00:00','m5')"},
        {'name':'get_avg_data_of_last_hour', 'add_id':1,'api_type':api_type.get(4),'dis_cription':'获取点的上一小时的平均值', 'sample':"get_avg_data_of_last_hour('pointName')"},
        {'name':'get_history_data_of_last_hour', 'add_id':1,'api_type':api_type.get(4),'dis_cription':'获取点的上一小时的历史值', 'sample':"get_history_data_of_last_hour('pointName')"},
        {'name':'get_status_timeratio_of_last_hour', 'add_id':1,'api_type':api_type.get(4),'dis_cription':'计算上一个小时的状态比', 'sample':"get_status_timeratio_of_last_hour('pointName', nStatus)"},
        {'name':'get_last_update_time_value', 'add_id':1,'api_type':api_type.get(4),'dis_cription':'获取最近一次的更新时间和值', 'sample':"get_last_update_time_value('pointName')"},
        {'name':'get_last_update_delta_minutes_of_this_point', 'add_id':0,'api_type':api_type.get(4),'dis_cription':'获取当前这个点多久（返回分钟数）没有更新', 'sample':"get_last_update_delta_minutes_of_this_point()"},
        {'name':'num_join_int64', 'add_id':0,'api_type':api_type.get(4),'dis_cription':'获取如电表高低位数据的10进制值', 'sample':"num_join_int64(0,0,15139,4268) 返回结果为992153772"},
        {'name': 'statistics_equipment_intact_rate_pandect', 'add_id': 0, 'api_type': api_type.get(4), 'dis_cription': '获取项目设备完好率','sample': "statistics_equipment_intact_rate_pandect(72, 'en')"},
        {'name': 'statistics_equipment_intact_rate_pandect_v2', 'add_id': 0, 'api_type': api_type.get(4), 'dis_cription': '获取项目设备完好率(新版诊断)','sample': "statistics_equipment_intact_rate_pandect_v2(293)"},
        {'name': 'patrol_complete_rate', 'add_id': 0, 'api_type': api_type.get(4),'dis_cription': '通过巡更项目id获取巡更的完成率', 'sample': "patrol_complete_rate(144)"},
        {'name': 'get_storage_by_projId', 'add_id': 1, 'api_type': api_type.get(4),'dis_cription': '获取该项目存储空间', 'sample': "get_storage_by_projId()"},
        {'name': 'get_fault_notice_count', 'add_id': 1, 'api_type': api_type.get(4), 'dis_cription': '获取当前notice数量', 'sample': "get_fault_notice_count()"},
        {'name':'calc_avg_of_last_hour_nozero', 'add_id':1,'api_type':api_type.get(5),'dis_cription':'计算多个值最近1小时内到现在为止连续非零平均数', 'sample':"calc_avg_if_run(['point_name1','point_name2'],'your condition',['run_point_name1','run_point_name2'])"},
        {'name':'calc_avg_if_run', 'add_id':1,'api_type':api_type.get(5),'dis_cription':'计算多个值在运行状态下的平均值,比如计算电流百分比的有效平均值', 'sample':"calc_avg_if_run(['point_name1','point_name2'],'your condition',['run_point_name1','run_point_name2'])"},
        {'name':'calc_count_in_day', 'add_id':1,'api_type':api_type.get(5),'dis_cription':'计算一天的开关次数,时间间隔为1小时', 'sample':"calc_count_in_day('pointName','m5',-1)"},
        {'name':'calc_sum_hour', 'add_id':1,'api_type':api_type.get(5),'dis_cription':'计算上一小时的该点的和', 'sample':"calc_sum_hour('pointName',1/12.0,'m5')"},
        {'name':'calc_sum_day', 'add_id':1,'api_type':api_type.get(5),'dis_cription':'计算当日的该点的和', 'sample':"calc_sum_day('pointName',1/12.0,'m5')"},
        {'name':'calc_sum_last_day', 'add_id':1,'api_type':api_type.get(5),'dis_cription':'计算昨日的该点的和', 'sample':"calc_sum_last_day('pointName',1/12.0,'m5')"},
        {'name':'calc_sum_one_day', 'add_id':1,'api_type':api_type.get(5),'dis_cription':'计算某一日的该点的和', 'sample':"calc_sum_one_day('pointName',1/12.0,'m5','2016-1-1 10:00:00')"},
        {'name':'calc_sum_this_week', 'add_id':1,'api_type':api_type.get(5),'dis_cription':'计算本周的该点的和', 'sample':"calc_sum_this_week('pointName',1/12.0,'m5')"},
        {'name':'calc_sum_one_week', 'add_id':1,'api_type':api_type.get(5),'dis_cription':'计算某一周的该点的和', 'sample':"calc_sum_one_week('pointName',1/12.0,'m5',-1)"},
        {'name':'calc_sum_this_month', 'add_id':1,'api_type':api_type.get(5),'dis_cription':'计算本月的该点的和', 'sample':"calc_sum_this_month('pointName',1.0,'h1')"},
        {'name':'calc_sum_one_month', 'add_id':1,'api_type':api_type.get(5),'dis_cription':'计算某月的该点的和', 'sample':"calc_sum_one_month('pointName',1.0,'h1',6)"},
        {'name':'calc_sum_this_year', 'add_id':1,'api_type':api_type.get(5),'dis_cription':'计算今年的该点的和', 'sample':"calc_sum_this_year('pointName',1.0)"},
        {'name':'calc_sum_last_year', 'add_id':1,'api_type':api_type.get(5),'dis_cription':'计算去年的该点的和', 'sample':"calc_sum_last_year('pointName',1.0)"},
        {'name':'calc_sum_year', 'add_id':1,'api_type':api_type.get(5),'dis_cription':'计算某一年的该点的和', 'sample':"calc_sum_year('pointName',1.0,2016)"},
        {'name':'calc_sum_in_points', 'add_id':1,'api_type':api_type.get(5),'dis_cription':'计算多个点的实时值的和', 'sample':"calc_sum_in_points(['pointName1','pointName2'])"},
        {'name':'calc_power_by_run', 'add_id':1,'api_type':api_type.get(5),'dis_cription':'计算水泵功率', 'sample':"calc_power_by_run('point_name',A float number)"},
        {'name':'calc_power_by_amp', 'add_id':1,'api_type':api_type.get(5),'dis_cription':'计算冷机功率', 'sample':"calc_power_by_amp('point_name',A float number)"},
        {'name':'calc_power_by_vsd_run', 'add_id':1,'api_type':api_type.get(5),'dis_cription':'计算变频泵功率', 'sample':"calc_power_by_vsd_run('point_name',A float number,A float number)"},
        {'name':'calc_delta_if_run', 'add_id':1,'api_type':api_type.get(5),'dis_cription':'计算差值,比如趋近温度', 'sample':"calc_delta_if_run('a_point_name', 'b_point_name', 'run_point_name')"},
        {'name':'calc_max_in_points', 'add_id':1,'api_type':api_type.get(5),'dis_cription':'计算多个值的最大值', 'sample':"calc_max_in_points(['pointname1','pointname2','pointname3'])"},
        {'name':'calc_min_in_points', 'add_id':1,'api_type':api_type.get(5),'dis_cription':'计算多个值的最小值', 'sample':"calc_min_in_points(['pointname1','pointname2','pointname3'])"},
        {'name':'calc_max_in_day', 'add_id':1,'api_type':api_type.get(5),'dis_cription':'求一天中的最大值', 'sample':"calc_max_in_day('pointname','m5')"},
        {'name':'calc_load_wo_flow', 'add_id':1,'api_type':api_type.get(5),'dis_cription':'计算冷机冷量', 'sample':"calc_load_wo_flow('EnterEvapPointName', 'LeaveEvapPointName', A float number, 'OnOffPointName')"},
        {'name':'calc_load_w_flow', 'add_id':1,'api_type':api_type.get(5),'dis_cription':'计算冷机冷量', 'sample':"calc_load_w_flow('EnterEvapPointName', 'LeaveEvapPointName', 'flowPointName', 'OnOffPointName')"},
        {'name':'calc_eff_smooth', 'add_id':1,'api_type':api_type.get(5),'dis_cription':'计算效率', 'sample':"calc_eff_smooth('LoadPointName', 'powerPointName')"},
        {'name':'calc_compare_same_time_diff_day','add_id':1,'api_type':api_type.get(5),'dis_cription':'同时刻数据对比', 'sample':"calc_compare_same_time_diff_day('pointName','m5')"},
        {'name':'calc_subtraction_for_given_time','add_id':1,'api_type':api_type.get(5),'dis_cription':'计算该点的实时值与给定时间的值之间的差', 'sample':"calc_subtraction_for_given_time('pointName','2016-7-1 10:00:00')"},
        {'name': 'calc_accumulate', 'add_id':1,'api_type':api_type.get(5),'dis_cription':'pointName每五分钟累加一次,从birthTime开始累加,累加到strAccumPointName上,成为一个永久累积量', 'sample':"calc_accumulate(strAccumPointName, pointName, strBirthTime, 'm5', 1.0)"},
        {'name':'log_str', 'add_id':0, 'api_type':api_type.get(0),'dis_cription':'输出自定义log信息','sample':"log_str('我的测试点:%s'%(get_data('test'))"},
        {'name':'patch_data_sharp_clock', 'add_id':1, 'api_type':api_type.get(0),'dis_cription':'补一个项目制定时刻的历史数据','sample':"patch_data_sharp_clock(4, None, '2016-10-09 11:05:00')"},

        {'name':'weather_get_by_cityname', 'add_id':0,'api_type':api_type.get(0),'dis_cription':'获取气象数据', 'sample':"weather_get_by_cityname('shanghai')"},
        {'name':'weather_get_by_cityid', 'add_id':0,'api_type':api_type.get(0),'dis_cription':'获取气象数据', 'sample':"weather_get_by_cityid('AU2147714')"},
        {'name':'get_work_order_status', 'add_id':0,'api_type':api_type.get(0),'dis_cription':'获取工单状态', 'sample':""},
        {'name':'send_work_order', 'add_id':0,'api_type':api_type.get(0),'dis_cription':'发送工单', 'sample':""},
        {'name':'send_message_by_email', 'add_id':0,'api_type':api_type.get(0),'dis_cription':'发送邮件消息', 'sample':"send_message_by_email(userIdList, strSubject, strContent)"},
        {'name':'send_message_by_app', 'add_id':0,'api_type':api_type.get(0),'dis_cription':'发送app推送消息', 'sample':"send_message_by_app(userIdList, strSubject, strContent)"},
        {'name':'send_message_by_mobile', 'add_id':0,'api_type':api_type.get(0),'dis_cription':'发送手机短信消息', 'sample':"send_message_by_mobile( userIdList, strContent)"},
        {'name':'get_work_order_id', 'add_id':0,'api_type':api_type.get(0),'dis_cription':'获取工单ID', 'sample':"get_work_order_id('问题通知222222222', 'golding.gu@rnbtech.com.hk')"},
        {'name':'close_work_order', 'add_id':0,'api_type':api_type.get(0),'dis_cription':'关闭工单', 'sample':"close_work_order(10243)"},
        {'name': 'get_fault_last_update_time_status', 'add_id': 0, 'api_type': api_type.get(0), 'dis_cription': '获取诊断fault最新的状态','sample': "get_fault_last_update_time_status()"},
        {'name': "weather_get_from_weather_com", 'api_type': api_type.get(0), 'dis_cription': '获取国际城市天气，湿度等','sample': "weather_get_from_weather_com('CHXX0116:1:CH')"},
        {'name': 'calc_hourly_delta_of_accum','add_id':0,'api_type':api_type.get(5),'dis_cription':'计算本项目某个点本小时（相对于小时初）的增量',
         'sample':"calc_hourly_delta_of_accum('pointName')"},
        {'name': 'calc_daily_delta_of_accum','add_id':0,'api_type':api_type.get(5),'dis_cription':'计算本项目某个点本日（相对于今日零点零分）的增量',
         'sample':"calc_daily_delta_of_accum('pointName')"},
        {'name': 'calc_weekly_delta_of_accum','add_id':0,'api_type':api_type.get(5),'dis_cription':'计算本项目某个点本周（相对于本周一零点零分）的增量',
         'sample':"calc_weekly_delta_of_accum('pointName')"},
        {'name': 'calc_monthly_delta_of_accum','add_id':0,'api_type':api_type.get(5),'dis_cription':'计算本项目某个点本月（相对于本月一日零点零分）的增量',
         'sample':"calc_monthly_delta_of_accum('pointName')"},



        {'name':'calc_weekly_delta_of_accum', 'add_id':0,'api_type':api_type.get(0),'dis_cription':'计算累积量在本周内的增量', 'sample':"calc_weekly_delta_of_accum('accumPointName')"},
        {'name':'calc_daily_delta_of_accum', 'add_id':0,'api_type':api_type.get(0),'dis_cription':'计算累积量在本日内的增量', 'sample':"calc_daily_delta_of_accum('accumPointName')"},
        {'name':'calc_hourly_delta_of_accum', 'add_id':0,'api_type':api_type.get(0),'dis_cription':'计算累积量在本小时内的增量', 'sample':"calc_hourly_delta_of_accum('accumPointName')"},
        {'name':'calc_monthly_delta_of_accum', 'add_id':0,'api_type':api_type.get(0),'dis_cription':'计算累积量在本月内的增量', 'sample':"calc_monthly_delta_of_accum('accumPointName')"},

        {'name':'http_post_json', 'add_id':0,'api_type':api_type.get(0),'dis_cription':'Post json数据至url', 'sample':" http_post_json(url, data,t=30)"},
        {'name':'http_get_json', 'add_id':0,'api_type':api_type.get(0),'dis_cription':'从url获取json数据', 'sample':" http_get_json(url, timeout=10)"},
        {'name':'http_post_form', 'add_id':0,'api_type':api_type.get(0),'dis_cription':'Post form数据至url', 'sample':"http_post_form(url, data,t=30)"},
        {'name':'http_post_json_with_cookie', 'add_id':0,'api_type':api_type.get(0),'dis_cription':'Post带cookie的json数据至url', 'sample':"http_post_json_with_cookie(url, data,t=30)"},
        {'name':'http_get_with_cookie', 'add_id':0,'api_type':api_type.get(0),'dis_cription':'从url获取json数据其中获取时发送cookie信息', 'sample':"http_get_with_cookie(url,timeout=10)"},
        {'name':'http_get_data_text', 'add_id':0,'api_type':api_type.get(0),'dis_cription':'从url获取str数据', 'sample':"http_get_data_text(url,timeout=10)"},
        {'name':'http_post_data_files', 'add_id':0,'api_type':api_type.get(0),'dis_cription':'post文件至url', 'sample':"http_post_data_files(url,files,timeout=10)"},
        {'name': 'send_work_order_smart', 'add_id': 0, 'api_type': api_type.get(0), 'dis_cription': '发送工单','sample': "send_work_order_smart(strWorkOrderName, fn, executeNameList, nDelayLimitMinutes, nSolveMinutes)"},
        {'name': 'get_pm25_from_web', 'add_id': 0, 'api_type': api_type.get(0), 'dis_cription': '获取pm等天气数据','sample':'get_pm25_from_web("shanghai")'},
        {'name': 'get_pm25_from_web_v2', 'add_id': 0, 'api_type': api_type.get(0), 'dis_cription': '获取pm等天气数据后面可接具体区域','sample':'get_pm25_from_web_v2("shanghai","浦东川沙")'},
        {'name': 'patch_data_sharp_clock_every_hour', 'add_id': 0, 'api_type': api_type.get(0), 'dis_cription': '自动每小时补数','sample': "patch_data_sharp_clock_every_hour(projId, pointList,5)"},
        {'name': 'checkCaseStatus', 'add_id': 0, 'api_type': api_type.get(0), 'dis_cription': '获取Case是否最近是否发送过','sample':'checkCaseStatus("Base001",30)'},
        {'name': 'setCaseNoticeTime', 'add_id': 0, 'api_type': api_type.get(0), 'dis_cription': '报警之前填入时间至数据库','sample':'setCaseNoticeTime("Base001")'},
        {'name': 'patch_data_sharp_clock_in_time_range', 'add_id': 0, 'api_type': api_type.get(0), 'dis_cription': '自动每天补数','sample': "patch_data_sharp_clock_every_day(projId, pointList, 0,15)"},
        {'name':'filter_point_only_increase', 'add_id':1,'api_type':api_type.get(4),  'dis_cription': '过滤突降的数据错点','sample': "filter_point_only_increase('pointName')"},

        {'name':'filter_point_gt_zero', 'add_id':1,'api_type':api_type.get(4), 'dis_cription': '过滤不大于零的数据错点','sample': "filter_point_gt_zero('pointName')"},
        {'name': 'filter_point_change_limit_ratio', 'add_id': 1, 'api_type': api_type.get(4), 'dis_cription': '过滤超过波动范围的值','sample': "filter_point_change_limit_ratio('pointName',2)"},

        {'name':'invoke_web_service', 'add_id':3,'api_type':api_type.get(0),'dis_cription':'调用webservice', 'sample':"invoke_web_service(url,method,params)"},
    ]

helpMapping_list_en = \
    [
     
        {'name':'get_act_time', 'add_id':0,'api_type':api_type_en.get(1),'dis_cription':'get the current system time', 'sample':'get_act_time()'},
        {'name':'time_get_day_begin','add_id':0,'api_type':api_type_en.get(1),'dis_cription':"get time format for today's zero hour", 'sample':'time_get_day_begin()'},
        {'name':'time_get_week_begin','add_id':0,'api_type':api_type_en.get(1),'dis_cription':"get zero hour for this week's monday ", 'sample':'time_get_week_begin()'},
        {'name':'time_get_hour_begin','add_id':0,'api_type':api_type_en.get(1),'dis_cription':'get time format for this hour and the minute is 0', 'sample':'time_get_hour_begin()'},
        {'name':'time_get_month_begin','add_id':0,'api_type':api_type_en.get(1),'dis_cription':'get time format for this month at the first day', 'sample':'time_get_month_begin()'},
        {'name':'time_get_year_begin','add_id':0,'api_type':api_type_en.get(1),'dis_cription':'get the frist day of this year', 'sample':'time_get_year_begin()'},
        {'name':'time_to_string','add_id':0,'api_type':api_type_en.get(1),'dis_cription':'format time object to string','sample':"time_to_string(get_act_time())"},
        {'name':'time_from_string','add_id':0,'api_type':api_type_en.get(1),'dis_cription':'format date string to time object', 'sample':"time_from_string('2016-1-1 10:00:00')"},
        
        {'name':'diagnosis_equipment_chiller','add_id':1, 'api_type':api_type_en.get(2),'dis_cription':'diagnosis chiller','sample':"equipTag = 'Chiller' \npointMap = {'ChOnOff':'Ch001_ChOnOff'\
        ,'ChLeaveEvapTemp':'Ch001_ChLeaveEvapTemp','AmperRatio': 'Ch001_CurrentPercentage'\
        ,'ModeOnOff':'Ch001_AutoMode',} \ndiagnosis_equipment_chiller('冷热源','冷水系统', '1#冷水机组',equipTag, pointMap)"},
        {'name':'diagnosis_equipment_sensor_common','add_id':1, 'api_type':api_type_en.get(2),'dis_cription':'diagnosis sensor','sample':"equipTag = 'singleSensor' \npointMap = {'point': 'ZL_F9_FAU001_RH'}\ndiagnosis_equipment_sensor_common('末端',sensor['page'], sensor['label'],equipTag, pointMap,1, 99)"},
        {'name':'diagnosis_rank_this_day','add_id':1, 'api_type':api_type_en.get(2),'dis_cription':'Statistical diagnosis of today','sample':"diagnosis_rank_this_day(projId)"},
        {'name':'diagnosis_rank_this_week','add_id':1, 'api_type':api_type_en.get(2),'dis_cription':'Statistical diagnosis of this week','sample':"diagnosis_rank_this_week(projId)"},
        {'name':'diagnosis_rank_in_time_range','add_id':1, 'api_type':api_type_en.get(2),'dis_cription':'Statistical diagnosis of the given time','sample':"diagnosis_rank_in_time_range(projId,'2016-09-06 00:00:00','2016-09-06 11:00:00')"},
        {'name':'stat_fault_by_faultname','add_id':1, 'api_type':api_type.get(2),'dis_cription':'Failure number and failure long statistics of earlier this month','sample':"stat_fault_by_faultname(projId)"},
        {'name':'stat_fault_worktime_by_faultname','add_id':1, 'api_type':api_type.get(2),'dis_cription':'Failure number and failure long statistics','sample':"stat_fault_worktime_by_faultname(projId,'2016-09-06 00:00:00','2016-09-06 11:00:00')"},
        {'name':'stat_fault_by_buildingId','add_id':1, 'api_type':api_type.get(2),'dis_cription':'Failure number and failure long statistics of each building of earlier this month','sample':"stat_fault_by_buildingId(projId)"},
        {'name':'stat_fault_by_zoneId','add_id':1, 'api_type':api_type.get(2),'dis_cription':'Failure number and failure long statistics of each zone of earlier this month','sample':"stat_fault_by_zoneId(projId)"},
        {'name':'stat_fault_by_faultname_time','add_id':1, 'api_type':api_type.get(2),'dis_cription':'Failure number and failure long statistics of earlier this month in work time','sample':"stat_fault_by_faultname_time(projId,'2016-09-06 00:00:00','2016-09-08 11:00:00','08:00:00','17:00:00')"},
        {'name':'get_energy_by_faultNames','add_id':1, 'api_type':api_type.get(2),'dis_cription':'For the fault of the energy consumption','sample':"get_energy_by_faultNames(projId,['Zone air temperature setpoint too cold'],'2016-09-06 00:00:00','2016-09-08 11:00:00','08:00:00','Day')"},
        {'name':'get_energy_all_by_time','add_id':1, 'api_type':api_type.get(2),'dis_cription':'Statistics total number of article, waste of energy consumption','sample':"get_energy_all_by_time(projId,'2016-09-06 00:00:00','2016-09-08 11:00:00')"},
        {'name':'get_energy_by_systemName','add_id':1, 'api_type':api_type.get(2),'dis_cription':'Statistics total number of article, waste of energy consumption group by system name','sample':"get_energy_by_systemName(projId,'2016-09-06 00:00:00','2016-09-08 11:00:00')"},
        {'name':'get_energylist_by_faultName_order_by_energy','add_id':1, 'api_type':api_type.get(2),'dis_cription':'In descending order section energy waste of energy consumption information','sample':"get_energylist_by_faultName_order_by_energy(projId,'2016-09-06 00:00:00','2016-09-08 11:00:00')"},
        {'name':'get_new_order_num','add_id':1, 'api_type':api_type.get(2),'dis_cription':'The number of new work order','sample':"get_new_order_num(projId,'2016-09-06 00:00:00','2016-09-08 11:00:00')"},
        {'name':'get_finished_order_num','add_id':1, 'api_type':api_type.get(2),'dis_cription':'The number of finished work order','sample':"get_finished_order_num(projId,'2016-09-06 00:00:00','2016-09-08 11:00:00')"},
        {'name':'get_response_time_avg','add_id':1, 'api_type':api_type.get(2),'dis_cription':'The average response time','sample':"get_response_time_avg(projId,'2016-09-06 00:00:00','2016-09-08 11:00:00')"},

        {'name':'get_data', 'add_id':1,'api_type':api_type_en.get(4),'dis_cription':'get the real data', 'sample':"get_data('pointName')"},
        {'name':'get_data_at_time', 'add_id':1,'api_type':api_type_en.get(4),'dis_cription':'get the data of the given time', 'sample':"get_data_at_time('pointName','2016-1-1 10:00:00')"},
        {'name':'get_his_data_time_range', 'add_id':1,'api_type':api_type_en.get(4),'dis_cription':'get the history data which time between two given times', 'sample':"get_his_data_time_range(['pointName'],'2016-1-1 10:00:00','2016-1-1 11:00:00','m5')"},
        {'name':'get_avg_data_of_last_hour', 'add_id':1,'api_type':api_type_en.get(4),'dis_cription':'get average value of last hour', 'sample':"get_avg_data_of_last_hour('pointName')"},
        {'name':'get_history_data_of_last_hour', 'add_id':1,'api_type':api_type_en.get(4),'dis_cription':'get the history data of last hour', 'sample':"get_history_data_of_last_hour('pointName')"},
        {'name':'get_status_timeratio_of_last_hour', 'add_id':1,'api_type':api_type_en.get(4),'dis_cription':'get the percentage of two status of last hour', 'sample':"get_status_timeratio_of_last_hour('pointName', nStatus)"},
        {'name': 'get_storage_by_projId', 'add_id': 1, 'api_type': api_type.get(4),'dis_cription': 'get storage', 'sample': "get_storage_by_projId()"},
        {'name': 'get_fault_notice_count', 'add_id': 1, 'api_type': api_type.get(4), 'dis_cription': 'get notice count', 'sample': "get_fault_notice_count()"},
        {'name':'calc_avg_if_run', 'add_id':1,'api_type':api_type_en.get(5),'dis_cription':'get average value of some points at running status,for example,effective average value of current', 'sample':"calc_avg_if_run(['point_name1','point_name2'],'your condition',['run_point_name1','run_point_name2'])"},
        {'name':'calc_count_in_day', 'add_id':1,'api_type':api_type_en.get(5),'dis_cription':'get count of open and close', 'sample':"calc_count_in_day('pointName','m5',-1)"},
        {'name':'calc_sum_hour', 'add_id':1,'api_type':api_type_en.get(5),'dis_cription':'get sum value of the data in last hour', 'sample':"calc_sum_hour('pointName',1/12.0,'m5')"},
        {'name':'calc_sum_day', 'add_id':1,'api_type':api_type_en.get(5),'dis_cription':'get sum value of the data in today', 'sample':"calc_sum_day('pointName',1/12.0,'m5')"},
        {'name':'calc_sum_last_day', 'add_id':1,'api_type':api_type_en.get(5),'dis_cription':'get sum value of the data in yesterday', 'sample':"calc_sum_last_day('pointName',1/12.0,'m5')"},
        {'name':'calc_sum_one_day', 'add_id':1,'api_type':api_type_en.get(5),'dis_cription':'get sum value of the data in one day', 'sample':"calc_sum_one_day('pointName',1/12.0,'m5','2016-1-1 10:00:00')"},
        {'name':'calc_sum_this_week', 'add_id':1,'api_type':api_type_en.get(5),'dis_cription':'get sum value of the data in this week', 'sample':"calc_sum_this_week('pointName',1/12.0,'m5')"},
        {'name':'calc_sum_one_week', 'add_id':1,'api_type':api_type_en.get(5),'dis_cription':'get sum value of the data in a week which is a few weeks ago', 'sample':"calc_sum_one_week('pointName',1/12.0,'m5',-1)"},
        {'name':'calc_sum_this_month', 'add_id':1,'api_type':api_type_en.get(5),'dis_cription':'get sum value of the data in this month', 'sample':"calc_sum_this_month('pointName',1.0,'h1')"},
        {'name':'calc_sum_one_month', 'add_id':1,'api_type':api_type_en.get(5),'dis_cription':'get sum value of the data in one month', 'sample':"calc_sum_one_month('pointName',1.0,'h1',6)"},
        {'name':'calc_sum_this_year', 'add_id':1,'api_type':api_type_en.get(5),'dis_cription':'get sum value of the data in this year', 'sample':"calc_sum_this_year('pointName',1.0)"},
        {'name':'calc_sum_last_year', 'add_id':1,'api_type':api_type_en.get(5),'dis_cription':'get sum value of the data in last year', 'sample':"calc_sum_last_year('pointName',1.0)"},
        {'name':'calc_sum_year', 'add_id':1,'api_type':api_type_en.get(5),'dis_cription':'get sum value of the data in one year', 'sample':"calc_sum_year('pointName',1.0,2016)"},
        {'name':'calc_sum_in_points', 'add_id':1,'api_type':api_type_en.get(5),'dis_cription':'get sum value of some real data', 'sample':"calc_sum_in_points(['pointName1','pointName2'])"},
        {'name':'calc_power_by_run', 'add_id':1,'api_type':api_type_en.get(5),'dis_cription':'get pump power', 'sample':"calc_power_by_run('point_name',A float number)"},
        {'name':'calc_power_by_amp', 'add_id':1,'api_type':api_type_en.get(5),'dis_cription':'get cooling machine power', 'sample':"calc_power_by_amp('point_name',A float number)"},
        {'name':'calc_power_by_vsd_run', 'add_id':1,'api_type':api_type_en.get(5),'dis_cription':'get variable frequency pump power', 'sample':"calc_power_by_vsd_run('point_name',A float number,A float number)"},
        {'name':'calc_delta_if_run', 'add_id':1,'api_type':api_type_en.get(5),'dis_cription':'Calculate the difference, such as reaching the temperature', 'sample':"calc_delta_if_run('a_point_name', 'b_point_name', 'run_point_name')"},
        {'name':'calc_max_in_points', 'add_id':1,'api_type':api_type_en.get(5),'dis_cription':'get max value of some data', 'sample':"calc_max_in_points(['pointname1','pointname2','pointname3'])"},
        {'name':'calc_min_in_points', 'add_id':1,'api_type':api_type_en.get(5),'dis_cription':'get min value of some data', 'sample':"calc_min_in_points(['pointname1','pointname2','pointname3'])"},
        {'name':'calc_max_in_day', 'add_id':1,'api_type':api_type_en.get(5),'dis_cription':'get max value of the data in this day', 'sample':"calc_max_in_day('pointname','m5')"},
        {'name':'calc_load_wo_flow', 'add_id':1,'api_type':api_type_en.get(5),'dis_cription':'get chiller load', 'sample':"calc_load_wo_flow('EnterEvapPointName', 'LeaveEvapPointName', A float number, 'OnOffPointName')"},
        {'name':'calc_load_w_flow', 'add_id':1,'api_type':api_type_en.get(5),'dis_cription':'get chiller load', 'sample':"calc_load_w_flow('EnterEvapPointName', 'LeaveEvapPointName', 'flowPointName', 'OnOffPointName')"},
        {'name':'calc_eff_smooth', 'add_id':1,'api_type':api_type_en.get(5),'dis_cription':'get the efficiency of some point', 'sample':"calc_eff_smooth('LoadPointName', 'powerPointName')"},
        {'name':'calc_compare_same_time_diff_day','add_id':1,'api_type':api_type_en.get(5),'dis_cription':'compared with the same time in yesterday', 'sample':"calc_compare_same_time_diff_day('pointName','m5')"},
        {'name':'calc_subtraction_for_given_time','add_id':1,'api_type':api_type_en.get(5),'dis_cription':'Calculates the difference between the value of the current time and the value of a given time', 'sample':"calc_subtraction_for_given_time('pointName','2016-7-1 10:00:00')"},
        {'name': 'calc_accumulate', 'add_id':1,'api_type':api_type_en.get(5),'dis_cription':"From the beginning of the 'birthTime', the value of the 'pointName' added to the 'strAccumPointName', every five minutes accumulated once", 'sample':"calc_accumulate(strAccumPointName, pointName, strBirthTime, 'm5', 1.0)"},
        {'name':'log_str', 'add_id':0, 'api_type':api_type_en.get(0),'dis_cription':'output your log information','sample':"log_str('my test point is:%s'%(get_data('test'))"},
        {'name':'patch_data_sharp_clock', 'add_id':1, 'api_type':api_type_en.get(0),'dis_cription':'fix data at moment','sample':"patch_data_sharp_clock(4, None, '2016-10-09 11:05:00')"},
        {'name': 'get_work_order_status', 'add_id': 0, 'api_type': api_type_en.get(0), 'dis_cription': 'get order status','sample': ""},
        {'name': 'send_work_order', 'add_id': 0, 'api_type': api_type_en.get(0), 'dis_cription': 'send order','sample': ""},
        {'name': 'get_work_order_id', 'add_id': 0, 'api_type': api_type_en.get(0), 'dis_cription': 'get order ID','sample': "get_work_order_id('问题通知222222222', 'golding.gu@rnbtech.com.hk')"},
        {'name': 'close_work_order', 'add_id': 0, 'api_type': api_type_en.get(0), 'dis_cription': 'close order','sample': "close_work_order(10243)"},
        {'name': 'get_fault_last_update_time_status', 'add_id': 0, 'api_type': api_type_en.get(0), 'dis_cription': 'get diagnosis fault latest status','sample': "get_fault_last_update_time_status()"},


        {'name':'calc_monthly_delta_of_accum', 'add_id':0,'api_type':api_type_en.get(0),'dis_cription':'计算累积量在本月内的增量', 'sample':"calc_monthly_delta_of_accum('accumPointName')"},
        {'name':'http_post_json', 'add_id':0,'api_type':api_type_en.get(0),'dis_cription':'Post json数据至url', 'sample':" http_post_json(url, data,t=30)"},
        {'name':'http_get_json', 'add_id':0,'api_type':api_type_en.get(0),'dis_cription':'从url获取json数据', 'sample':" http_get_json(url, timeout=10)"},
        {'name':'http_post_form', 'add_id':0,'api_type':api_type_en.get(0),'dis_cription':'Post form数据至url', 'sample':"http_post_form(url, data,t=30)"},
        {'name':'http_post_json_with_cookie', 'add_id':0,'api_type':api_type_en.get(0),'dis_cription':'Post带cookie的json数据至url', 'sample':"http_post_json_with_cookie(url, data,t=30)"},
        {'name':'http_get_with_cookie', 'add_id':0,'api_type':api_type_en.get(0),'dis_cription':'从url获取json数据其中获取时发送cookie信息', 'sample':"http_get_with_cookie(url,timeout=10)"},
        {'name':'http_get_data_text', 'add_id':0,'api_type':api_type_en.get(0),'dis_cription':'从url获取str数据', 'sample':"http_get_data_text(url,timeout=10)"},
        {'name':'http_post_data_files', 'add_id':0,'api_type':api_type_en.get(0),'dis_cription':'post文件至url', 'sample':"http_post_data_files(url,files,timeout=10)"},
        {'name': 'send_work_order', 'add_id': 0, 'api_type': api_type_en.get(0), 'dis_cription': 'send order','sample': ""},
        {'name': 'send_work_order_smart', 'add_id': 0, 'api_type': api_type_en.get(0), 'dis_cription': 'send order','sample': "send_work_order_smart(strWorkOrderName, fn, executeNameList, nDelayLimitMinutes, nSolveMinutes)"},
        {'name': 'calc_hourly_delta_of_accum','add_id':0,'api_type':api_type_en.get(5),'dis_cription':'计算本项目某个点本小时（相对于小时初）的增量',
         'sample':"calc_hourly_delta_of_accum('pointName')"},
        {'name': 'calc_daily_delta_of_accum','add_id':0,'api_type':api_type_en.get(5),'dis_cription':'计算本项目某个点本日（相对于今日零点零分）的增量',
         'sample':"calc_daily_delta_of_accum('pointName')"},
        {'name': 'calc_weekly_delta_of_accum','add_id':0,'api_type':api_type_en.get(5),'dis_cription':'计算本项目某个点本周（相对于本周一零点零分）的增量',
         'sample':"calc_weekly_delta_of_accum('pointName')"},
        {'name': 'calc_monthly_delta_of_accum','add_id':0,'api_type':api_type_en.get(5),'dis_cription':'计算本项目某个点本月（相对于本月一日零点零分）的增量',
         'sample':"calc_monthly_delta_of_accum('pointName')"},
        {'name':'filter_point_only_increase', 'add_id':1,'api_type':api_type_en.get(4),  'dis_cription': '过滤突降的数据错点','sample': "filter_point_only_increase('pointName')"},

        {'name':'filter_point_gt_zero', 'add_id':1,'api_type':api_type_en.get(4), 'dis_cription': '过滤不大于灵的数据错点','sample': "filter_point_gt_zero('pointName')"},
 ]
