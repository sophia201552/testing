<!DOCTYPE html>
<html>
<head lang="en">
    <meta charset="UTF-8">
    <title>重置密码</title>
    <link href="/static/scripts/lib/bootstrap/css/bootstrap.min.css" rel="stylesheet"/>
    <style type="text/css">
        html, body, #register {
            background-color: #e5e5e5;
            overflow: hidden;
        }

        .alert-section {
            margin-top: 20px;
        }

        body {
            overflow: hidden;
            font-family: 微软雅黑;
        }

        #clouds {
            position: absolute;
        }

        #top-msg {
            position: relative;
            color: white;
            padding-top: 10%;
        }

        #register-form {
            margin-top: 1%;
        }

        .register-section h2 {
            border-bottom: 3px solid;
            padding-bottom: 10px;
        }

        .pop-msg {
            position: absolute;
            left: 102%;
            top: 5px;
            padding: 5px;
            color: #fff;
            border: 1px solid #c47272;
            background: #c47272;
            border-radius: 4px;
            font-size: 12px;
            display: none;
            width: 50%;
        }

        #register .pop-msg:before, #register .pop-msg:after {
            content: "";
            display: block;
        }

        #register .pop-msg:before {
            position: absolute;
            z-index: 11;
            top: 8px;
            left: -5px;
            border: 5px solid transparent;
            border-right: 5px solid #c47272;
            border-left: 0;
        }

        #register .pop-msg:after {
            position: absolute;
            z-index: 10;
            top: 7px;
            left: -7px;
            border: 6px solid transparent;
            border-right: 6px solid #c47272;
            border-left: 0;
        }

        #register .has-success .form-control {
            border-color: #47cac3;
        }

        #register .has-success .form-control-feedback {
            color: #47cac3;
        }

        #register .has-success .form-control:focus {
            box-shadow: inset 0 1px 1px rgba(0,0,0,.075),0 0 6px #47cac3;
        }

        #register .has-success .input-group-addon {
            border-color: #47cac3;
            color: #555;
            background: #eee;
        }

        #register .has-error .form-control {
            border-color: #c47272;
        }

        #register .has-error .form-control-feedback {
            color: #c47272;
        }

        #register .has-error .form-control:focus {
            box-shadow: inset 0 1px 1px rgba(0,0,0,.075),0 0 6px #c47272;
        }

        #register .has-error .input-group-addon {
            border-color: #c47272;
            color: #555;
            background: #eee;
        }

        #register .alert-success {
            color: #fff;
            background-color: #47cac3;
            border-color: #47cac3;
        }

        #register .alert-danger {
            color: #fff;
            background-color: #c47272;
            border-color: #c47272;
        }

        #register .close {
            opacity: 1;
        }

        #register-form .row {
            position: relative;
        }

        .row label {
            font-size: 18px;
        }

        .row {
            margin-top: 10px;
        }

        #top-msg {
            color: grey;
        }

        .resetPdWelcome {
            font-size: 14px;
        }

        .oh {
            overflow: hidden;
        }

        .fl {
            float: left;
        }

        .fr {
            float: right;
        }

        .form-group-lg .form-control {
            height: 40px;
            font-size: 14px;
        }

        .p0 {
            padding: 0;
        }

        #submitBtn {
            height: 40px;
            font-size: 14px;
        }
    </style>
</head>
<body>
<input type="hidden" value="{{ user.email }}" id="name"/>
<div id="clouds"></div>
<div class="container" id="register">
    <div class="row" id="top-msg">
        <div class="col-sm-offset-3 col-sm-5 col-xs-offset-1 col-xs-10 register-section form-horizontal p0">
            <h2 class="oh">
                <span class="resetPdWelcome fr">Welcome to beop</span>
            </h2>
        </div>
    </div>
    <div class="row" id="register-form">
        <div class="col-sm-offset-3 col-sm-5 col-xs-offset-1 col-xs-10 register-section form-horizontal">
            <div class="row">
                <div class="form-group-lg input-group col-sm-12">
                    <span class="input-group-addon"><span class="glyphicon glyphicon-envelope"></span></span>
                    <input type="text" class="form-control" id="inputEmail" placeholder="{{ user.email }}"
                           disabled>
                </div>
            </div>
            <div class="row">
                <div class="form-group-lg input-group col-sm-12">
                    <span class="input-group-addon"><i class="glyphicon glyphicon-lock"></i></span>
                    <input type="password" class="form-control" id="inputPassword1" maxlength="20" placeholder="请输入6-15个字符的密码">
                </div>
                <div class="pop-msg bg-danger"></div>
            </div>
            <div class="row">
                <div class="form-group-lg input-group col-sm-12">
                    <span class="input-group-addon"><i class="glyphicon glyphicon-lock"></i></span>
                    <input type="password" class="form-control" id="inputPassword2" maxlength="20" placeholder="请输入6-15个字符的确认密码">
                </div>
                <div class="pop-msg bg-danger"></div>
            </div>
            </br>
            <div class="row">
                <button type="button" class="btn btn-primary btn-lg pull-right col-sm-12" data-loading-text="密码重置中..."
                        data-complete-text="密码重置成功" id="submitBtn">重置密码
                </button>
            </div>

            <div class="alert-section">
            </div>
        </div>
    </div>
</div>

<script src="/static/scripts/lib/jquery-2.1.4.min.js"></script>
<script src="/static/scripts/lib/bootstrap/js/bootstrap.min.js"></script>
<script src="/static/scripts/core/common.js"></script>
<script src="/static/scripts/core/webAPI.js"></script>
<script>
    var addValidStatus, removeValidStatus, isValidPwd, configMap = {
        validStatus: {
            type: {
                success: 'success',
                warning: 'warning',
                error: 'error'
            },
            icon: {
                success: 'glyphicon-ok',
                warning: 'glyphicon-warning-sign',
                error: 'glyphicon-remove'
            },
            class: {
                success: 'has-success',
                warning: 'has-warning',
                error: 'has-error'
            },
            msg: {
                pwdNotMatch: '密码不匹配',
                invalidPwd: '密码需要6-15个字符',
                resetSuccess: '密码重置成功, 5秒后将跳转到BEOP平台首页',
                resetFailed: '密码重置失败'
            }
        }
    }, isValid = true;


    addValidStatus = function ($parent, validStatus, alertMsg) {
        if (!$parent) {
            return false;
        }
        removeValidStatus($parent);
        var $feedback = $('<span class="glyphicon form-control-feedback" aria-hidden="true"></span>').addClass(configMap.validStatus.icon[validStatus]);
        $parent.addClass('has-feedback has-validated').addClass(configMap.validStatus.class[validStatus])
                .find('.form-control-feedback').remove().end()
                .append($feedback);
        var $alertMsg = $parent.siblings('.pop-msg');
        if (validStatus === configMap.validStatus.type.success || !alertMsg) {
            $alertMsg.text('').hide();
        } else {
            $alertMsg.text(alertMsg).show();
        }
    };
    removeValidStatus = function ($parent) {
        if (!$parent) {
            return false;
        }
        $parent.removeClass(function (index, css) {
            return (css.match(/(^|\s)has-\S+/g) || []).join(' ');
        }).find('.form-control-feedback').remove();
        $parent.siblings('.pop-msg').text('').hide();

    }, resetControlStatus = function () {
        removeValidStatus($(this).closest('.form-group-lg'));
    }, isValidPwd = function (pwd) {
        return pwd.length > 5 && pwd.length < 16;
    };

    $('#inputPassword1').on('blur', function () {
        var $this = $(this), pwd = $this.val(), $formControl = $this.closest('.form-group-lg'), $pwd2 = $('#inputPassword2');
        if (!isValidPwd(pwd)) {
            addValidStatus($formControl, configMap.validStatus.type.error, configMap.validStatus.msg.invalidPwd);
            isValid = false;
            return false;
        } else {
            addValidStatus($formControl, configMap.validStatus.type.success);
            if ($pwd2.val() === pwd) {
                addValidStatus($pwd2.closest('.form-group-lg'), configMap.validStatus.type.success);
            }
            isValid = true;
        }
    });
    $('#inputPassword2').on('blur', function () {
        var $this = $(this), pwd = $this.val(), $formControl = $this.closest('.form-group-lg'), pwd2 = $('#inputPassword1').val();
        if (!isValidPwd(pwd)) {
            addValidStatus($formControl, configMap.validStatus.type.error, configMap.validStatus.msg.invalidPwd);
            isValid = false;
            return false;
        } else if (pwd !== pwd2) {
            addValidStatus($formControl, configMap.validStatus.type.error, configMap.validStatus.msg.pwdNotMatch);
            isValid = false;
            return false;
        } else {
            addValidStatus($formControl, configMap.validStatus.type.success);
            isValid = true;
        }
    });

    $('#submitBtn').click(function () {
        if (!isValid) {
            return false;
        }

        var $psw1 = $('#inputPassword1'),
                $this = $(this),
                alert;

        $this.button('loading');

        WebAPI.post("/reset_password", {
            password: $psw1.val(),
            token: "{{ token }}"
        }).done(function (result) {
            if (result === 'success') {
                alert = new Alert('.alert-section', 'success', configMap.validStatus.msg.resetSuccess);
                setTimeout(function () {
                    parent.location.href = "/observer"
                }, 5000)
                $this.remove();
            } else {
                alert = new Alert('.alert-section', 'danger', configMap.validStatus.msg.resetFailed + '  ' + result);
                $this.button('reset');
            }
        }).fail(function () {
            alert = new Alert('.alert-section', 'danger', configMap.validStatus.msg.resetFailed);
            $this.button('reset');
        }).always(function () {
            alert.show(2000);
        })
    })

</script>
</body>
</html>